[
   {
      "sha":"5cfe281b8ecd8a060bbf0ddbcb48e54a2d40082b",
      "commit":{
         "author":{
            "name":"Robert Krahn",
            "email":"robert.krahn@gmail.com",
            "date":"2013-12-15T02:31:05Z"
         },
         "committer":{
            "name":"Robert Krahn",
            "email":"robert.krahn@gmail.com",
            "date":"2013-12-26T21:38:15Z"
         },
         "message":"buildpsec: ignore doNotSerialize, doNotCopyProperties, submorphs when those are empty / not overwritten by morph",
         "tree":{
            "sha":"228d17f4bc16888bb44bc919aea82d1040e0a537",
            "url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/git/trees/228d17f4bc16888bb44bc919aea82d1040e0a537"
         },
         "url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/git/commits/5cfe281b8ecd8a060bbf0ddbcb48e54a2d40082b",
         "comment_count":0
      },
      "url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/commits/5cfe281b8ecd8a060bbf0ddbcb48e54a2d40082b",
      "html_url":"https://github.com/LivelyKernel/LivelyKernel/commit/5cfe281b8ecd8a060bbf0ddbcb48e54a2d40082b",
      "comments_url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/commits/5cfe281b8ecd8a060bbf0ddbcb48e54a2d40082b/comments",
      "author":{
         "login":"rksm",
         "id":467450,
         "avatar_url":"https://gravatar.com/avatar/7e0fc9769fc4ec9b23b85da1639d5f31?d=https%3A%2F%2Fidenticons.github.com%2Ff5790be82a84c28f0e1fadaed4826b78.png&r=x",
         "gravatar_id":"7e0fc9769fc4ec9b23b85da1639d5f31",
         "url":"https://api.github.com/users/rksm",
         "html_url":"https://github.com/rksm",
         "followers_url":"https://api.github.com/users/rksm/followers",
         "following_url":"https://api.github.com/users/rksm/following{/other_user}",
         "gists_url":"https://api.github.com/users/rksm/gists{/gist_id}",
         "starred_url":"https://api.github.com/users/rksm/starred{/owner}{/repo}",
         "subscriptions_url":"https://api.github.com/users/rksm/subscriptions",
         "organizations_url":"https://api.github.com/users/rksm/orgs",
         "repos_url":"https://api.github.com/users/rksm/repos",
         "events_url":"https://api.github.com/users/rksm/events{/privacy}",
         "received_events_url":"https://api.github.com/users/rksm/received_events",
         "type":"User",
         "site_admin":false
      },
      "committer":{
         "login":"rksm",
         "id":467450,
         "avatar_url":"https://gravatar.com/avatar/7e0fc9769fc4ec9b23b85da1639d5f31?d=https%3A%2F%2Fidenticons.github.com%2Ff5790be82a84c28f0e1fadaed4826b78.png&r=x",
         "gravatar_id":"7e0fc9769fc4ec9b23b85da1639d5f31",
         "url":"https://api.github.com/users/rksm",
         "html_url":"https://github.com/rksm",
         "followers_url":"https://api.github.com/users/rksm/followers",
         "following_url":"https://api.github.com/users/rksm/following{/other_user}",
         "gists_url":"https://api.github.com/users/rksm/gists{/gist_id}",
         "starred_url":"https://api.github.com/users/rksm/starred{/owner}{/repo}",
         "subscriptions_url":"https://api.github.com/users/rksm/subscriptions",
         "organizations_url":"https://api.github.com/users/rksm/orgs",
         "repos_url":"https://api.github.com/users/rksm/repos",
         "events_url":"https://api.github.com/users/rksm/events{/privacy}",
         "received_events_url":"https://api.github.com/users/rksm/received_events",
         "type":"User",
         "site_admin":false
      },
      "parents":[
         {
            "sha":"118b0a76877d72118f1784781dc2af1f79b9f459",
            "url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/commits/118b0a76877d72118f1784781dc2af1f79b9f459",
            "html_url":"https://github.com/LivelyKernel/LivelyKernel/commit/118b0a76877d72118f1784781dc2af1f79b9f459"
         }
      ],
      "stats":{
         "total":6,
         "additions":3,
         "deletions":3
      },
      "files":[
         {
            "sha":"9d501843899511e5110608218876e54ce794bb22",
            "filename":"core/lively/persistence/BuildSpec.js",
            "status":"modified",
            "additions":3,
            "deletions":3,
            "changes":6,
            "blob_url":"https://github.com/LivelyKernel/LivelyKernel/blob/5cfe281b8ecd8a060bbf0ddbcb48e54a2d40082b/core/lively/persistence/BuildSpec.js",
            "raw_url":"https://github.com/LivelyKernel/LivelyKernel/raw/5cfe281b8ecd8a060bbf0ddbcb48e54a2d40082b/core/lively/persistence/BuildSpec.js",
            "contents_url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/contents/core/lively/persistence/BuildSpec.js?ref=5cfe281b8ecd8a060bbf0ddbcb48e54a2d40082b",
            "patch":"@@ -97,7 +97,7 @@ Object.subclass('lively.persistence.SpecObject',\n         if (properties.submorphs && properties.submorphs.filter) {\n             submorphs = properties.submorphs.filter(morph, submorphs);\n         }\n-        this.set(\"submorphs\", submorphs.invoke(\"buildSpec\"));\n+        submorphs.length && this.set(\"submorphs\", submorphs.invoke(\"buildSpec\"));\n     },\n \n     setConnections: function(sourceObj) {\n@@ -340,8 +340,8 @@ lively.morphic.Morph.addMethods(\n \n     buildSpecProperties: {\n         name: {},\n-        doNotSerialize: {getter: function(morph, val) { return val && val.reject(function(ea) { return !Object.isString(ea) || ea.startsWith('$$'); }) }},\n-        doNotCopyProperties: {getter: function(morph, val) { return val && val.reject(function(ea) { return !Object.isString(ea) || ea.startsWith('$$'); }) }},\n+        doNotSerialize: {defaultValue: [], getter: function(morph, val) { if (!morph.hasOwnProperty(\"doNotSerialize\")) return []; return val && val.reject(function(ea) { return !Object.isString(ea) || ea.startsWith('$$'); }) }},\n+        doNotCopyProperties: {defaultValue: [], getter: function(morph, val) { if (!morph.hasOwnProperty(\"doNotCopyProperties\")) return []; return val && val.reject(function(ea) { return !Object.isString(ea) || ea.startsWith('$$'); }) }},\n         grabbingEnabled: {defaultValue: undefined},\n         draggingEnabled: {defaultValue: undefined},\n         droppingEnabled: {defaultValue: undefined},"
         }
      ]
   },
   {
      "sha":"bf1c1c675be15cde5f63c3c908117d427f65af41",
      "commit":{
         "author":{
            "name":"Robert Krahn",
            "email":"robert.krahn@gmail.com",
            "date":"2013-12-15T02:32:18Z"
         },
         "committer":{
            "name":"Robert Krahn",
            "email":"robert.krahn@gmail.com",
            "date":"2013-12-26T21:38:16Z"
         },
         "message":"buildpsec: tests for previous changer",
         "tree":{
            "sha":"4f4ccba983e8490b7abb775a704bcaaf3ee49270",
            "url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/git/trees/4f4ccba983e8490b7abb775a704bcaaf3ee49270"
         },
         "url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/git/commits/bf1c1c675be15cde5f63c3c908117d427f65af41",
         "comment_count":0
      },
      "url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/commits/bf1c1c675be15cde5f63c3c908117d427f65af41",
      "html_url":"https://github.com/LivelyKernel/LivelyKernel/commit/bf1c1c675be15cde5f63c3c908117d427f65af41",
      "comments_url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/commits/bf1c1c675be15cde5f63c3c908117d427f65af41/comments",
      "author":{
         "login":"rksm",
         "id":467450,
         "avatar_url":"https://gravatar.com/avatar/7e0fc9769fc4ec9b23b85da1639d5f31?d=https%3A%2F%2Fidenticons.github.com%2Ff5790be82a84c28f0e1fadaed4826b78.png&r=x",
         "gravatar_id":"7e0fc9769fc4ec9b23b85da1639d5f31",
         "url":"https://api.github.com/users/rksm",
         "html_url":"https://github.com/rksm",
         "followers_url":"https://api.github.com/users/rksm/followers",
         "following_url":"https://api.github.com/users/rksm/following{/other_user}",
         "gists_url":"https://api.github.com/users/rksm/gists{/gist_id}",
         "starred_url":"https://api.github.com/users/rksm/starred{/owner}{/repo}",
         "subscriptions_url":"https://api.github.com/users/rksm/subscriptions",
         "organizations_url":"https://api.github.com/users/rksm/orgs",
         "repos_url":"https://api.github.com/users/rksm/repos",
         "events_url":"https://api.github.com/users/rksm/events{/privacy}",
         "received_events_url":"https://api.github.com/users/rksm/received_events",
         "type":"User",
         "site_admin":false
      },
      "committer":{
         "login":"rksm",
         "id":467450,
         "avatar_url":"https://gravatar.com/avatar/7e0fc9769fc4ec9b23b85da1639d5f31?d=https%3A%2F%2Fidenticons.github.com%2Ff5790be82a84c28f0e1fadaed4826b78.png&r=x",
         "gravatar_id":"7e0fc9769fc4ec9b23b85da1639d5f31",
         "url":"https://api.github.com/users/rksm",
         "html_url":"https://github.com/rksm",
         "followers_url":"https://api.github.com/users/rksm/followers",
         "following_url":"https://api.github.com/users/rksm/following{/other_user}",
         "gists_url":"https://api.github.com/users/rksm/gists{/gist_id}",
         "starred_url":"https://api.github.com/users/rksm/starred{/owner}{/repo}",
         "subscriptions_url":"https://api.github.com/users/rksm/subscriptions",
         "organizations_url":"https://api.github.com/users/rksm/orgs",
         "repos_url":"https://api.github.com/users/rksm/repos",
         "events_url":"https://api.github.com/users/rksm/events{/privacy}",
         "received_events_url":"https://api.github.com/users/rksm/received_events",
         "type":"User",
         "site_admin":false
      },
      "parents":[
         {
            "sha":"5cfe281b8ecd8a060bbf0ddbcb48e54a2d40082b",
            "url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/commits/5cfe281b8ecd8a060bbf0ddbcb48e54a2d40082b",
            "html_url":"https://github.com/LivelyKernel/LivelyKernel/commit/5cfe281b8ecd8a060bbf0ddbcb48e54a2d40082b"
         }
      ],
      "stats":{
         "total":8,
         "additions":4,
         "deletions":4
      },
      "files":[
         {
            "sha":"a31848ff4b1078bc663857fd7180a5f35b666751",
            "filename":"core/lively/persistence/tests/BuildSpec.js",
            "status":"modified",
            "additions":4,
            "deletions":4,
            "changes":8,
            "blob_url":"https://github.com/LivelyKernel/LivelyKernel/blob/bf1c1c675be15cde5f63c3c908117d427f65af41/core/lively/persistence/tests/BuildSpec.js",
            "raw_url":"https://github.com/LivelyKernel/LivelyKernel/raw/bf1c1c675be15cde5f63c3c908117d427f65af41/core/lively/persistence/tests/BuildSpec.js",
            "contents_url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/contents/core/lively…ersistence/tests/BuildSpec.js?ref=bf1c1c675be15cde5f63c3c908117d427f65af41",
            "patch":"@@ -113,15 +113,17 @@ Functions.timeToRun(function() {\n \n     test09SubmorphFilter: function() {\n         var m1 = new lively.morphic.Box(lively.rect(0,0,100,100)),\n-            m2 = new lively.morphic.Box(lively.rect(20,20,10,10));\n+            m2 = new lively.morphic.Box(lively.rect(20,20,10,10)),\n+            m3 = new lively.morphic.Box(lively.rect(20,20,10,10));\n         m1.addMorph(m2);\n+        m1.addMorph(m3);\n         m1.buildSpecProperties = {\n             submorphs: {\n                 filter: function(morph, submorphs) { return submorphs.without(m2); }\n             }\n         }\n         var spec = m1.buildSpec();\n-        this.assertEquals(0, spec.attributeStore.submorphs.length, 'submorph not filtered');\n+        this.assertEquals(1, spec.attributeStore.submorphs.length, 'submorph not filtered');\n     },\n \n     test10DefaultValues: function() {\n@@ -189,10 +191,8 @@ lively.morphic.tests.MorphTests.subclass('lively.persistence.tests.BuildSpec.Spe\n                      + \"    _BorderColor: Color.rgb(204,0,0),\\n\"\n                      + \"    _Extent: lively.pt(100.0,100.0),\\n\"\n                      + \"    className: \\\"lively.morphic.Box\\\",\\n\"\n-                     + \"    doNotSerialize: [\\\"_renderContext\\\",\\\"halos\\\",\\\"_isRendered\\\",\\\"priorExtent\\\",\\\"cachedBounds\\\"],\\n\"\n                      + \"    droppingEnabled: true,\\n\"\n                      + \"    sourceModule: \\\"lively.morphic.Core\\\",\\n\"\n-                     + \"    submorphs: [],\\n\"\n                      + \"    foo: function foo() { return 123; }\\n\"\n                      + \"})\"\n         this.assertEquals(expected, spec);"
         }
      ]
   },
   {
      "sha":"bc809c5ea8c801ff3e4afa2c8ca050e26d1ec310",
      "commit":{
         "author":{
            "name":"Robert Krahn",
            "email":"robert.krahn@gmail.com",
            "date":"2013-12-26T17:08:12Z"
         },
         "committer":{
            "name":"Robert Krahn",
            "email":"robert.krahn@gmail.com",
            "date":"2013-12-26T21:38:16Z"
         },
         "message":"interactive commands: fix save world shortcut",
         "tree":{
            "sha":"ba348afb3936d1ca99615b73adc938b048b57fca",
            "url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/git/trees/ba348afb3936d1ca99615b73adc938b048b57fca"
         },
         "url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/git/commits/bc809c5ea8c801ff3e4afa2c8ca050e26d1ec310",
         "comment_count":0
      },
      "url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/commits/bc809c5ea8c801ff3e4afa2c8ca050e26d1ec310",
      "html_url":"https://github.com/LivelyKernel/LivelyKernel/commit/bc809c5ea8c801ff3e4afa2c8ca050e26d1ec310",
      "comments_url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/commits/bc809c5ea8c801ff3e4afa2c8ca050e26d1ec310/comments",
      "author":{
         "login":"rksm",
         "id":467450,
         "avatar_url":"https://gravatar.com/avatar/7e0fc9769fc4ec9b23b85da1639d5f31?d=https%3A%2F%2Fidenticons.github.com%2Ff5790be82a84c28f0e1fadaed4826b78.png&r=x",
         "gravatar_id":"7e0fc9769fc4ec9b23b85da1639d5f31",
         "url":"https://api.github.com/users/rksm",
         "html_url":"https://github.com/rksm",
         "followers_url":"https://api.github.com/users/rksm/followers",
         "following_url":"https://api.github.com/users/rksm/following{/other_user}",
         "gists_url":"https://api.github.com/users/rksm/gists{/gist_id}",
         "starred_url":"https://api.github.com/users/rksm/starred{/owner}{/repo}",
         "subscriptions_url":"https://api.github.com/users/rksm/subscriptions",
         "organizations_url":"https://api.github.com/users/rksm/orgs",
         "repos_url":"https://api.github.com/users/rksm/repos",
         "events_url":"https://api.github.com/users/rksm/events{/privacy}",
         "received_events_url":"https://api.github.com/users/rksm/received_events",
         "type":"User",
         "site_admin":false
      },
      "committer":{
         "login":"rksm",
         "id":467450,
         "avatar_url":"https://gravatar.com/avatar/7e0fc9769fc4ec9b23b85da1639d5f31?d=https%3A%2F%2Fidenticons.github.com%2Ff5790be82a84c28f0e1fadaed4826b78.png&r=x",
         "gravatar_id":"7e0fc9769fc4ec9b23b85da1639d5f31",
         "url":"https://api.github.com/users/rksm",
         "html_url":"https://github.com/rksm",
         "followers_url":"https://api.github.com/users/rksm/followers",
         "following_url":"https://api.github.com/users/rksm/following{/other_user}",
         "gists_url":"https://api.github.com/users/rksm/gists{/gist_id}",
         "starred_url":"https://api.github.com/users/rksm/starred{/owner}{/repo}",
         "subscriptions_url":"https://api.github.com/users/rksm/subscriptions",
         "organizations_url":"https://api.github.com/users/rksm/orgs",
         "repos_url":"https://api.github.com/users/rksm/repos",
         "events_url":"https://api.github.com/users/rksm/events{/privacy}",
         "received_events_url":"https://api.github.com/users/rksm/received_events",
         "type":"User",
         "site_admin":false
      },
      "parents":[
         {
            "sha":"bf1c1c675be15cde5f63c3c908117d427f65af41",
            "url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/commits/bf1c1c675be15cde5f63c3c908117d427f65af41",
            "html_url":"https://github.com/LivelyKernel/LivelyKernel/commit/bf1c1c675be15cde5f63c3c908117d427f65af41"
         }
      ],
      "stats":{
         "total":9,
         "additions":4,
         "deletions":5
      },
      "files":[
         {
            "sha":"062aa79940c727853075db397729e302f7c9afa4",
            "filename":"core/lively/ast/Visualization.js",
            "status":"modified",
            "additions":3,
            "deletions":3,
            "changes":6,
            "blob_url":"https://github.com/LivelyKernel/LivelyKernel/blob/bc809c5ea8c801ff3e4afa2c8ca050e26d1ec310/core/lively/ast/Visualization.js",
            "raw_url":"https://github.com/LivelyKernel/LivelyKernel/raw/bc809c5ea8c801ff3e4afa2c8ca050e26d1ec310/core/lively/ast/Visualization.js",
            "contents_url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/contents/core/lively/ast/Visualization.js?ref=bc809c5ea8c801ff3e4afa2c8ca050e26d1ec310",
            "patch":"@@ -25,10 +25,10 @@ Object.extend(lively.ast, {\n                     nodeCode.truncate(40).replace(/\\n/g, '').replace(/([\\{\\}><])/g, '\\\\$1'))\n             }, subgraphAttrs[subgraphId] || {})));\n \n-            if (info.parentNode) {\n+            if (info.parentState && info.parentState.node) {\n                 var ref = info.referencedAs, propName = ref.join('.');\n                 nodesAndEdges.push(\n-                    renderer.vizEdge(printNode(info.parentNode), printNode(node),\n+                    renderer.vizEdge(printNode(info.parentState.node), printNode(node),\n                     {label: propName}))\n             }\n         });\n@@ -40,4 +40,4 @@ Object.extend(lively.ast, {\n     }\n });\n \n-}) // end of module\n\\ No newline at end of file\n+}) // end of module"
         },
         {
            "sha":"15c97ca4e4fa6ce8c868ba9f1f56670afc2424ea",
            "filename":"core/lively/ide/commands/default.js",
            "status":"modified",
            "additions":1,
            "deletions":2,
            "changes":3,
            "blob_url":"https://github.com/LivelyKernel/LivelyKernel/blob/bc809c5ea8c801ff3e4afa2c8ca050e26d1ec310/core/lively/ide/commands/default.js",
            "raw_url":"https://github.com/LivelyKernel/LivelyKernel/raw/bc809c5ea8c801ff3e4afa2c8ca050e26d1ec310/core/lively/ide/commands/default.js",
            "contents_url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/contents/core/lively/ide/commands/default.js?ref=bc809c5ea8c801ff3e4afa2c8ca050e26d1ec310",
            "patch":"@@ -44,7 +44,6 @@ Object.extend(lively.ide.commands.byName, {\n     },\n     'lively.morphic.World.save': {\n         description: 'save world',\n-        isActive: lively.ide.commands.helper.noCodeEditorActive,\n         exec: function() {\n             $world.saveWorld(); return true;\n         }\n@@ -750,4 +749,4 @@ Object.extend(lively.ide.commands.defaultBindings, { // bind commands to default\n     'disabled': {mac: [\"Command-[\", \"Command-]\"], win: [\"Control-[\", \"Control-]\"]},\n });\n \n-}) // end of module\n\\ No newline at end of file\n+}) // end of module"
         }
      ]
   },
   {
      "sha":"689f988c7c4a9f681ce2634d7d463ce9cf2c269f",
      "commit":{
         "author":{
            "name":"Robert Krahn",
            "email":"robert.krahn@gmail.com",
            "date":"2013-12-26T17:13:32Z"
         },
         "committer":{
            "name":"Robert Krahn",
            "email":"robert.krahn@gmail.com",
            "date":"2013-12-26T21:38:16Z"
         },
         "message":"string helper to convert character positions to lines for strings",
         "tree":{
            "sha":"99c007b0d02ff077a5e59e4c5f2630d7000052b5",
            "url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/git/trees/99c007b0d02ff077a5e59e4c5f2630d7000052b5"
         },
         "url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/git/commits/689f988c7c4a9f681ce2634d7d463ce9cf2c269f",
         "comment_count":0
      },
      "url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/commits/689f988c7c4a9f681ce2634d7d463ce9cf2c269f",
      "html_url":"https://github.com/LivelyKernel/LivelyKernel/commit/689f988c7c4a9f681ce2634d7d463ce9cf2c269f",
      "comments_url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/commits/689f988c7c4a9f681ce2634d7d463ce9cf2c269f/comments",
      "author":{
         "login":"rksm",
         "id":467450,
         "avatar_url":"https://gravatar.com/avatar/7e0fc9769fc4ec9b23b85da1639d5f31?d=https%3A%2F%2Fidenticons.github.com%2Ff5790be82a84c28f0e1fadaed4826b78.png&r=x",
         "gravatar_id":"7e0fc9769fc4ec9b23b85da1639d5f31",
         "url":"https://api.github.com/users/rksm",
         "html_url":"https://github.com/rksm",
         "followers_url":"https://api.github.com/users/rksm/followers",
         "following_url":"https://api.github.com/users/rksm/following{/other_user}",
         "gists_url":"https://api.github.com/users/rksm/gists{/gist_id}",
         "starred_url":"https://api.github.com/users/rksm/starred{/owner}{/repo}",
         "subscriptions_url":"https://api.github.com/users/rksm/subscriptions",
         "organizations_url":"https://api.github.com/users/rksm/orgs",
         "repos_url":"https://api.github.com/users/rksm/repos",
         "events_url":"https://api.github.com/users/rksm/events{/privacy}",
         "received_events_url":"https://api.github.com/users/rksm/received_events",
         "type":"User",
         "site_admin":false
      },
      "committer":{
         "login":"rksm",
         "id":467450,
         "avatar_url":"https://gravatar.com/avatar/7e0fc9769fc4ec9b23b85da1639d5f31?d=https%3A%2F%2Fidenticons.github.com%2Ff5790be82a84c28f0e1fadaed4826b78.png&r=x",
         "gravatar_id":"7e0fc9769fc4ec9b23b85da1639d5f31",
         "url":"https://api.github.com/users/rksm",
         "html_url":"https://github.com/rksm",
         "followers_url":"https://api.github.com/users/rksm/followers",
         "following_url":"https://api.github.com/users/rksm/following{/other_user}",
         "gists_url":"https://api.github.com/users/rksm/gists{/gist_id}",
         "starred_url":"https://api.github.com/users/rksm/starred{/owner}{/repo}",
         "subscriptions_url":"https://api.github.com/users/rksm/subscriptions",
         "organizations_url":"https://api.github.com/users/rksm/orgs",
         "repos_url":"https://api.github.com/users/rksm/repos",
         "events_url":"https://api.github.com/users/rksm/events{/privacy}",
         "received_events_url":"https://api.github.com/users/rksm/received_events",
         "type":"User",
         "site_admin":false
      },
      "parents":[
         {
            "sha":"045f348eb05125a7886eaa48d9600494ab18c17f",
            "url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/commits/045f348eb05125a7886eaa48d9600494ab18c17f",
            "html_url":"https://github.com/LivelyKernel/LivelyKernel/commit/045f348eb05125a7886eaa48d9600494ab18c17f"
         }
      ],
      "stats":{
         "total":36,
         "additions":35,
         "deletions":1
      },
      "files":[
         {
            "sha":"13f0f062caeb85451bf25f4dc17898c0f1146c25",
            "filename":"core/lively/lang/String.js",
            "status":"modified",
            "additions":20,
            "deletions":1,
            "changes":21,
            "blob_url":"https://github.com/LivelyKernel/LivelyKernel/blob/689f988c7c4a9f681ce2634d7d463ce9cf2c269f/core/lively/lang/String.js",
            "raw_url":"https://github.com/LivelyKernel/LivelyKernel/raw/689f988c7c4a9f681ce2634d7d463ce9cf2c269f/core/lively/lang/String.js",
            "contents_url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/contents/core/lively/lang/String.js?ref=689f988c7c4a9f681ce2634d7d463ce9cf2c269f",
            "patch":"@@ -579,6 +579,25 @@ Global.Strings = {\n             return matches.last() ? matches.last().start : null;\n         }\n         return null;\n-    }\n+    },\n \n+    lineIndexComputer: function(string) {\n+        // returns a function that will accept a character position and return\n+        // its line number in string. If the char pos is outside of the line\n+        // ranges -1 is returned\n+        // -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-\n+        // line ranges: list of numbers, each line has two entries:\n+        // i -> start of line, i+1 -> end of line\n+        var lineRanges = Strings.lines(string).reduce(function(lineIndexes, line) {\n+            var lastPos = lineIndexes.last() || -1;\n+            return lineIndexes.concat([lastPos+1, lastPos + 1 + line.length]);\n+        }, []);\n+        // FIXME, this is O(n). Make cumputation more efficient, binary lookup?\n+        return function(pos) {\n+            for (var line = 0; line < lineRanges.length; line+=2)\n+                if (pos >= lineRanges[line] && pos <= lineRanges[line+1])\n+                    return line / 2;\n+            return -1;\n+        }\n+    }\n };"
         },
         {
            "sha":"9a5974e13dc4398f347f77ecf2679a3af7496954",
            "filename":"core/lively/lang/tests/ExtensionTests.js",
            "status":"modified",
            "additions":15,
            "deletions":0,
            "changes":15,
            "blob_url":"https://github.com/LivelyKernel/LivelyKernel/blob/689f988c7c4a9f681ce2634d7d463ce9cf2c269f/core/lively/lang/tests/ExtensionTests.js",
            "raw_url":"https://github.com/LivelyKernel/LivelyKernel/raw/689f988c7c4a9f681ce2634d7d463ce9cf2c269f/core/lively/lang/tests/ExtensionTests.js",
            "contents_url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/contents/core/lively/lang/tests/ExtensionTests.js?ref=689f988c7c4a9f681ce2634d7d463ce9cf2c269f",
            "patch":"@@ -617,6 +617,21 @@ TestCase.subclass('lively.lang.tests.ExtensionTests.Strings', {\n         this.assertEqualState([[\"a\", \"b\", \"c\"], [\"d\", \"e\", \"f\"]], Strings.tableize('a b c\\nd e f'));\n         this.assertEqualState([[\"a\", 1, \"c\"], [\"d\", 2, \"f\"]], Strings.tableize('a 1 c\\nd 2 f'));\n         this.assertEqualState([[\"Date\"], [new Date('06/11/2013')]], Strings.tableize('Date\\n06/11/2013'));\n+    },\n+\n+    testLineLookupByIndex: function() {\n+        var string = 'test\\n123\\nfo\\nbarbaz\\nzork\\n';\n+        var lookupFunc = Strings.lineIndexComputer(string);\n+        this.assertEquals(0, lookupFunc(0), \"char pos: 0\");\n+        this.assertEquals(0, lookupFunc(1), \"char pos: 1\");\n+        this.assertEquals(0, lookupFunc(4), \"char pos: 4\");\n+        this.assertEquals(1, lookupFunc(5), \"char pos: 5\");\n+        this.assertEquals(1, lookupFunc(7), \"char pos: 7\");\n+        this.assertEquals(1, lookupFunc(8), \"char pos: 8\");\n+        this.assertEquals(2, lookupFunc(9), \"char pos: 9\");\n+        this.assertEquals(4, lookupFunc(23), \"char pos: 2\");\n+        this.assertEquals(5, lookupFunc(24), \"char pos: 2\");\n+        this.assertEquals(-1, lookupFunc(99), \"char pos: 9\");\n     }\n });\n "
         }
      ]
   },
   {
      "sha":"f790eeec337e3df5c9a7e6b380e1967889b351b1",
      "commit":{
         "author":{
            "name":"Robert Krahn",
            "email":"robert.krahn@gmail.com",
            "date":"2013-12-26T17:15:08Z"
         },
         "committer":{
            "name":"Robert Krahn",
            "email":"robert.krahn@gmail.com",
            "date":"2013-12-26T21:38:16Z"
         },
         "message":"ide: no exlcudes for find files",
         "tree":{
            "sha":"46d1a256e6c867a6bfbc7618188547e3e2c50095",
            "url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/git/trees/46d1a256e6c867a6bfbc7618188547e3e2c50095"
         },
         "url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/git/commits/f790eeec337e3df5c9a7e6b380e1967889b351b1",
         "comment_count":0
      },
      "url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/commits/f790eeec337e3df5c9a7e6b380e1967889b351b1",
      "html_url":"https://github.com/LivelyKernel/LivelyKernel/commit/f790eeec337e3df5c9a7e6b380e1967889b351b1",
      "comments_url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/commits/f790eeec337e3df5c9a7e6b380e1967889b351b1/comments",
      "author":{
         "login":"rksm",
         "id":467450,
         "avatar_url":"https://gravatar.com/avatar/7e0fc9769fc4ec9b23b85da1639d5f31?d=https%3A%2F%2Fidenticons.github.com%2Ff5790be82a84c28f0e1fadaed4826b78.png&r=x",
         "gravatar_id":"7e0fc9769fc4ec9b23b85da1639d5f31",
         "url":"https://api.github.com/users/rksm",
         "html_url":"https://github.com/rksm",
         "followers_url":"https://api.github.com/users/rksm/followers",
         "following_url":"https://api.github.com/users/rksm/following{/other_user}",
         "gists_url":"https://api.github.com/users/rksm/gists{/gist_id}",
         "starred_url":"https://api.github.com/users/rksm/starred{/owner}{/repo}",
         "subscriptions_url":"https://api.github.com/users/rksm/subscriptions",
         "organizations_url":"https://api.github.com/users/rksm/orgs",
         "repos_url":"https://api.github.com/users/rksm/repos",
         "events_url":"https://api.github.com/users/rksm/events{/privacy}",
         "received_events_url":"https://api.github.com/users/rksm/received_events",
         "type":"User",
         "site_admin":false
      },
      "committer":{
         "login":"rksm",
         "id":467450,
         "avatar_url":"https://gravatar.com/avatar/7e0fc9769fc4ec9b23b85da1639d5f31?d=https%3A%2F%2Fidenticons.github.com%2Ff5790be82a84c28f0e1fadaed4826b78.png&r=x",
         "gravatar_id":"7e0fc9769fc4ec9b23b85da1639d5f31",
         "url":"https://api.github.com/users/rksm",
         "html_url":"https://github.com/rksm",
         "followers_url":"https://api.github.com/users/rksm/followers",
         "following_url":"https://api.github.com/users/rksm/following{/other_user}",
         "gists_url":"https://api.github.com/users/rksm/gists{/gist_id}",
         "starred_url":"https://api.github.com/users/rksm/starred{/owner}{/repo}",
         "subscriptions_url":"https://api.github.com/users/rksm/subscriptions",
         "organizations_url":"https://api.github.com/users/rksm/orgs",
         "repos_url":"https://api.github.com/users/rksm/repos",
         "events_url":"https://api.github.com/users/rksm/events{/privacy}",
         "received_events_url":"https://api.github.com/users/rksm/received_events",
         "type":"User",
         "site_admin":false
      },
      "parents":[
         {
            "sha":"689f988c7c4a9f681ce2634d7d463ce9cf2c269f",
            "url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/commits/689f988c7c4a9f681ce2634d7d463ce9cf2c269f",
            "html_url":"https://github.com/LivelyKernel/LivelyKernel/commit/689f988c7c4a9f681ce2634d7d463ce9cf2c269f"
         }
      ],
      "stats":{
         "total":36,
         "additions":19,
         "deletions":17
      },
      "files":[
         {
            "sha":"cffc995f6794362b4f0d3a6557bb353d98989435",
            "filename":"core/lively/ide/tools/DirViewer.js",
            "status":"modified",
            "additions":19,
            "deletions":17,
            "changes":36,
            "blob_url":"https://github.com/LivelyKernel/LivelyKernel/blob/f790eeec337e3df5c9a7e6b380e1967889b351b1/core/lively/ide/tools/DirViewer.js",
            "raw_url":"https://github.com/LivelyKernel/LivelyKernel/raw/f790eeec337e3df5c9a7e6b380e1967889b351b1/core/lively/ide/tools/DirViewer.js",
            "contents_url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/contents/core/lively/ide/tools/DirViewer.js?ref=f790eeec337e3df5c9a7e6b380e1967889b351b1",
            "patch":"@@ -5413,23 +5413,25 @@ lively.BuildSpec('lively.ide.tools.DirViewer', {\n         var self = this;\n         this.get('filter').textString = ''\n         this.get('fileList').setList(['Loading...']);\n-        lively.ide.CommandLineSearch.findFiles('*', {cwd: this.dirState.path, depth: 1}, function(files) {\n-            var parentDir = {\n-              fileName: \"..\",\n-              group: null,\n-              isDirectory: true,\n-              isLink: false,\n-              lastModified: null,\n-              linkCount: 0,\n-              mode: null,\n-              path: \"..\",\n-              rootDirectory: null,\n-              size: null,\n-              user: null\n-            }\n-            self.dirState.files = [parentDir].concat(files);\n-            self.renderDebounced();\n-        });\n+        var parentDir = {\n+          fileName: \"..\",\n+          group: null,\n+          isDirectory: true,\n+          isLink: false,\n+          lastModified: null,\n+          linkCount: 0,\n+          mode: null,\n+          path: \"..\",\n+          rootDirectory: null,\n+          size: null,\n+          user: null\n+        };\n+        lively.ide.CommandLineSearch.findFiles('*',\n+            {cwd: this.dirState.path, excludes: '-false', depth: 1},\n+            function(files) {\n+                self.dirState.files = [parentDir].concat(files);\n+                self.renderDebounced();\n+            });\n     },\n         focusChanged: function focusChanged(newFocus) {\n         if (newFocus === this.get('targetDir')) {"
         }
      ]
   },
   {
      "sha":"045f348eb05125a7886eaa48d9600494ab18c17f",
      "commit":{
         "author":{
            "name":"Robert Krahn",
            "email":"robert.krahn@gmail.com",
            "date":"2013-12-26T17:11:54Z"
         },
         "committer":{
            "name":"Robert Krahn",
            "email":"robert.krahn@gmail.com",
            "date":"2013-12-26T21:38:16Z"
         },
         "message":"canvasmorph: several extensions to work with canvas, including image/canvas conversion, (auto)cropping, color replacement",
         "tree":{
            "sha":"ca48a3f04d76f469be852ae4ce7738b629c6047c",
            "url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/git/trees/ca48a3f04d76f469be852ae4ce7738b629c6047c"
         },
         "url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/git/commits/045f348eb05125a7886eaa48d9600494ab18c17f",
         "comment_count":0
      },
      "url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/commits/045f348eb05125a7886eaa48d9600494ab18c17f",
      "html_url":"https://github.com/LivelyKernel/LivelyKernel/commit/045f348eb05125a7886eaa48d9600494ab18c17f",
      "comments_url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/commits/045f348eb05125a7886eaa48d9600494ab18c17f/comments",
      "author":{
         "login":"rksm",
         "id":467450,
         "avatar_url":"https://gravatar.com/avatar/7e0fc9769fc4ec9b23b85da1639d5f31?d=https%3A%2F%2Fidenticons.github.com%2Ff5790be82a84c28f0e1fadaed4826b78.png&r=x",
         "gravatar_id":"7e0fc9769fc4ec9b23b85da1639d5f31",
         "url":"https://api.github.com/users/rksm",
         "html_url":"https://github.com/rksm",
         "followers_url":"https://api.github.com/users/rksm/followers",
         "following_url":"https://api.github.com/users/rksm/following{/other_user}",
         "gists_url":"https://api.github.com/users/rksm/gists{/gist_id}",
         "starred_url":"https://api.github.com/users/rksm/starred{/owner}{/repo}",
         "subscriptions_url":"https://api.github.com/users/rksm/subscriptions",
         "organizations_url":"https://api.github.com/users/rksm/orgs",
         "repos_url":"https://api.github.com/users/rksm/repos",
         "events_url":"https://api.github.com/users/rksm/events{/privacy}",
         "received_events_url":"https://api.github.com/users/rksm/received_events",
         "type":"User",
         "site_admin":false
      },
      "committer":{
         "login":"rksm",
         "id":467450,
         "avatar_url":"https://gravatar.com/avatar/7e0fc9769fc4ec9b23b85da1639d5f31?d=https%3A%2F%2Fidenticons.github.com%2Ff5790be82a84c28f0e1fadaed4826b78.png&r=x",
         "gravatar_id":"7e0fc9769fc4ec9b23b85da1639d5f31",
         "url":"https://api.github.com/users/rksm",
         "html_url":"https://github.com/rksm",
         "followers_url":"https://api.github.com/users/rksm/followers",
         "following_url":"https://api.github.com/users/rksm/following{/other_user}",
         "gists_url":"https://api.github.com/users/rksm/gists{/gist_id}",
         "starred_url":"https://api.github.com/users/rksm/starred{/owner}{/repo}",
         "subscriptions_url":"https://api.github.com/users/rksm/subscriptions",
         "organizations_url":"https://api.github.com/users/rksm/orgs",
         "repos_url":"https://api.github.com/users/rksm/repos",
         "events_url":"https://api.github.com/users/rksm/events{/privacy}",
         "received_events_url":"https://api.github.com/users/rksm/received_events",
         "type":"User",
         "site_admin":false
      },
      "parents":[
         {
            "sha":"bc809c5ea8c801ff3e4afa2c8ca050e26d1ec310",
            "url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/commits/bc809c5ea8c801ff3e4afa2c8ca050e26d1ec310",
            "html_url":"https://github.com/LivelyKernel/LivelyKernel/commit/bc809c5ea8c801ff3e4afa2c8ca050e26d1ec310"
         }
      ],
      "stats":{
         "total":419,
         "additions":408,
         "deletions":11
      },
      "files":[
         {
            "sha":"666d48f398b0efb4ae367cb8f98396ee331ebdd6",
            "filename":"core/lively/morphic/AdditionalMorphs.js",
            "status":"modified",
            "additions":265,
            "deletions":9,
            "changes":274,
            "blob_url":"https://github.com/LivelyKernel/LivelyKernel/blob/045f348eb05125a7886eaa48d9600494ab18c17f/core/lively/morphic/AdditionalMorphs.js",
            "raw_url":"https://github.com/LivelyKernel/LivelyKernel/raw/045f348eb05125a7886eaa48d9600494ab18c17f/core/lively/morphic/AdditionalMorphs.js",
            "contents_url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/contents/core/lively/morphic/AdditionalMorphs.js?ref=045f348eb05125a7886eaa48d9600494ab18c17f",
            "patch":"@@ -2,10 +2,10 @@ module('lively.morphic.AdditionalMorphs').requires('lively.morphic.Halos', 'live\n \n lively.morphic.Morph.subclass('lively.morphic.CanvasMorph',\n 'canvas', {\n-    defaultBounds: pt(300, 300),\n-    initialize: function($super, optBounds) {\n+    defaultExtent: pt(300, 300),\n+    initialize: function($super, optExtent) {\n         $super(this.createShape());\n-        this.setExtent(optBounds || this.defaultBounds);\n+        this.setExtent(optExtent || this.defaultExtent);\n         this.disableDropping();    // because children are not shown\n     },\n     createShape: function() {\n@@ -36,6 +36,214 @@ lively.morphic.Morph.subclass('lively.morphic.CanvasMorph',\n     }\n \n },\n+'serialization', {\n+    onstore: function($super) {\n+        $super();\n+        this._canvasSerializationDataURI = this.toDataURI();\n+    },\n+\n+    onrestore: function($super) {\n+        $super();\n+        if (this._canvasSerializationDataURI) {\n+            this.whenOpenedInWorld(function() {\n+                this.fromDataURI(this._canvasSerializationDataURI);\n+            }.bind(this));\n+        }\n+    },\n+\n+    getGrabShadow: function() {\n+        return null\n+    },\n+\n+    toDataURI: function() { return this.getContext().canvas.toDataURL(); },\n+\n+    fromDataURI: function(uri) {\n+        var ctx = this.getContext();\n+        var img = new Image();\n+        img.onload = function() { ctx.drawImage(img,0,0); };\n+        img.src = uri;\n+    },\n+\n+    fromImageMorph: function(imgMorph) {\n+        var imgNode = imgMorph.renderContext().imgNode;\n+        var ext = pt(imgNode.naturalWidth, imgNode.naturalHeight);\n+        this.setExtent(ext);\n+        this.getContext().drawImage(imgNode, 0,0);\n+        return this;\n+    },\n+\n+    toImage: function() {\n+        return lively.morphic.Image.fromURL(this.toDataURI(), this.getExtent().extentAsRectangle());\n+    },\n+\n+    toImageDataArray: function(optBounds) {\n+        return Array.from(this.getImageData(optBounds).data);\n+    }\n+\n+},\n+'image data', {\n+    getImageData: function(optBounds) {\n+        optBounds = optBounds || this.innerBounds();\n+        return this.getContext().getImageData(\n+            optBounds.left(),optBounds.top(),\n+            optBounds.width, optBounds.height);\n+    },\n+\n+    putImageData: function(data, width, height) {\n+        // accepts real image dat aobject or simple array with rgba-quad-tuples\n+        var ctx = this.getContext();\n+        if (data.constructor === ImageData) {\n+            ctx.putImageData(data, 0,0);\n+            var ext = this.getExtent();\n+            if (width === undefined || height === undefined) {\n+                width = ext.x; height = ext.y;\n+            }\n+            if (ext.x !== width || ext.y !== height) this.setExtent(pt(width,height));\n+        } else {\n+            var imgData = ctx.createImageData(width, height);\n+            for (var i = 0; i < data.length; i++) imgData.data[i] = data[i];\n+            this.putImageData(imgData, width, height);\n+        }\n+    },\n+\n+    colorAt: function(i, pixelArr) {\n+        pixelArr = pixelArr || this.getImageData().data;\n+        return [pixelArr[i], pixelArr[i+1], pixelArr[i+2], pixelArr[i+3]];\n+    },\n+\n+    positionToColor: function(pos, pixelArr) {\n+        var width = this.getContext().canvas.width;\n+        return this.colorAt(4*pos.y*width + 4*pos.x, pixelArr);\n+    },\n+\n+    getColors: function() {\n+        var d = this.getImageData().data;\n+        return Array.range(0, d.length-1, 4)\n+            .map(function(i) { return this.colorAt(i, d); }, this)\n+            .reduce(function(colors, col) {\n+                if (!colors.any(function(col2) {\n+                    return col[0] === col2[0]\n+                        && col[1] === col2[1]\n+                        && col[2] === col2[2]\n+                        && col[3] === col2[3]; })) colors.push(col);\n+                return colors;\n+            }, []);\n+    },\n+\n+    getRow: function(n, width, height, pixelArr) {\n+        var ctx = this.getContext();\n+        width = width || ctx.canvas.width;\n+        height = height || ctx.canvas.height;\n+        pixelArr = pixelArr || this.getImageData().data;\n+        var startIndex = width * n * 4;\n+        return Array.range(startIndex, startIndex + (width-1) * 4, 4).map(function(i) {\n+            return this.colorAt(i, pixelArr); }, this);\n+    },\n+\n+    getRows: function(width, height, pixelArr) {\n+        width = width || this.getContext().canvas.width;\n+        height = height || this.getContext().canvas.height;\n+        pixelArr = pixelArr || this.getImageData().data;\n+        return Array.range(0, height-1).map(function(n) {\n+            return this.getRow(n, width, height, pixelArr); }, this);\n+    },\n+\n+    getCol: function(n, width, height, pixelArr) {\n+        width = width || this.getContext().canvas.width;\n+        height = height || this.getContext().canvas.height;\n+        pixelArr = pixelArr || this.getImageData().data;\n+        var realN = n * 4;\n+        return Array.range(0, height-1).map(function(rowI) {\n+            return this.colorAt(realN + (rowI*4*width), pixelArr); }, this);\n+    },\n+\n+    getCols: function(width, height, pixelArr) {\n+        width = width || this.getContext().canvas.width;\n+        height = height || this.getContext().canvas.height;\n+        pixelArr = pixelArr || this.getImageData().data;\n+        return Array.range(0, width-1).map(function(n) {\n+            return this.getCol(n, width, height, pixelArr); }, this);\n+    },\n+\n+    isSameColor: function(colorA, colorB) {\n+        if (colorA.isColor) colorA = colorA.toTuple8Bit();\n+        if (colorB.isColor) colorB = colorB.toTuple8Bit();\n+        // FIXME helper\n+        return colorA[0] === colorB[0]\n+            && colorA[1] === colorB[1]\n+            && colorA[2] === colorB[2]\n+            && colorA[3] === colorB[3];\n+    },\n+\n+    findFirstIndex: function(testFunc, rowsOrCols, reverse) {\n+        // apply testFunc to each row or col. If testFunc returns truthy return the\n+        // row/col index that was matched. if reverse is truthy, start from the back\n+        if (reverse) rowsOrCols = rowsOrCols.clone().reverse();\n+        var index, found = rowsOrCols.detect(function(rowOrCol, i) {\n+            index = i; return testFunc(rowOrCol); });\n+        if (!found) return -1;\n+        return reverse ? rowsOrCols.length - index : index;\n+    }\n+\n+},\n+'image editing', {\n+    crop: function(cropRect) {\n+        var ctx = this.getContext(),\n+            l = Math.max(cropRect.left(), 0),\n+            t = Math.max(cropRect.top(), 0),\n+            w = Math.min(cropRect.width, ctx.canvas.width),\n+            h = Math.min(cropRect.height, ctx.canvas.height),\n+            imgData = ctx.getImageData(l,t,w,h);\n+        this.clear();\n+        ctx.putImageData(imgData, 0, 0);\n+        this.setExtent(pt(w,h));\n+    },\n+\n+    cropColor: function(color, padding) {\n+        // crop image rectangular so that all rows/columns that only have\n+        // `color` are removed.\n+        if (color.isColor) color = color.toTuple8Bit();\n+        padding = padding || lively.rect(0,0,0,0);\n+        var self = this;\n+        function hasOtherColor(rowOrCol) {\n+            return !rowOrCol.all(function(color2) {\n+                return self.isSameColor(color, color2); });\n+        }\n+        var rows     = this.getRows(),\n+            cols     = this.getCols(),\n+            top      = this.findFirstIndex(hasOtherColor, rows),\n+            bottom   = this.findFirstIndex(hasOtherColor, rows, true),\n+            left     = this.findFirstIndex(hasOtherColor, cols),\n+            right    = this.findFirstIndex(hasOtherColor, cols, true),\n+            cropRect = lively.rect(\n+                pt(left, top).subPt(padding.topLeft()),\n+                pt(right, bottom).addPt(padding.bottomRight()));\n+        this.crop(cropRect);\n+    },\n+\n+    replaceColor: function(fromColor, toColor, replacementBounds) {\n+        replacementBounds = replacementBounds || this.innerBounds();\n+        if (fromColor.isColor) fromColor = fromColor.toTuple8Bit();\n+        if (toColor.isColor) toColor = toColor.toTuple8Bit();\n+        var ctx = this.getContext(),\n+            w = ctx.canvas.width, h = ctx.canvas.height,\n+            imgData = this.getImageData(), newImgData = new Array(imgData.length);\n+        replacementBounds.allPoints()\n+            .map(function(p) { return 4 * (p.y * w + p.x); })\n+            .forEach(function(i) {\n+                if (imgData.data[i] === fromColor[0]\n+                 && imgData.data[i+1] === fromColor[1]\n+                 && imgData.data[i+2] === fromColor[2]\n+                 && imgData.data[i+3] === fromColor[3]) {\n+                    imgData.data[i] = toColor[0];\n+                    imgData.data[i+1] = toColor[1];\n+                    imgData.data[i+2] = toColor[2];\n+                    imgData.data[i+3] = toColor[3];\n+                }\n+            });\n+        this.putImageData(imgData);\n+    }\n+},\n 'HTML rendering', {\n     htmlDispatchTable: {\n        createCanvasNode: 'createCanvasNodeHTML',\n@@ -53,12 +261,60 @@ lively.morphic.Morph.subclass('lively.morphic.CanvasMorph',\n         return XHTMLNS.create('canvas');\n     },\n     adaptCanvasSizeHTML: function(ctx) {\n-        var $node = $(ctx.shapeNode),\n-            x = $node.width(),\n-            y = $node.height();\n-        $node.attr('width', x);\n-        $node.attr('height', y);\n-        this.onCanvasChanged();\n+        if (this._adaptCanvasSizeHTMLInProgress) return;\n+        this._adaptCanvasSizeHTMLInProgress = true;\n+        try {\n+            var $node = lively.$(ctx.shapeNode),\n+                x = $node.width(),\n+                y = $node.height(),\n+                imgData = this.getImageData();\n+            $node.attr('width', x);\n+            $node.attr('height', y);\n+            this.onCanvasChanged();\n+            this.putImageData(imgData, x, y);\n+        } finally {\n+            this._adaptCanvasSizeHTMLInProgress = false;\n+        }\n+    }\n+},\n+'menu', {\n+    morphMenuItems: function($super) {\n+        var items = $super(), self = this;\n+        items.push(['open as image morph', function() { self.toImage().openInHand(); }]);\n+        items.push(['replace color', function() {\n+            var colorToReplace = [0,0,0,0], replacementColor = [0,0,0,0];\n+            [function(next) {\n+                self.world().prompt('Color to replace', function(input) {\n+                    try { colorToReplace = eval(input); next(); } catch (e) { show(e); }\n+                }, Strings.print(colorToReplace));\n+            },\n+            function(next) {\n+                self.world().prompt('Replace with', function(input) {\n+                    try { replacementColor = eval(input); next(); } catch (e) { show(e); }\n+                }, Strings.print(replacementColor));\n+            },\n+            function(next) { self.replaceColor(colorToReplace, replacementColor); }].doAndContinue();\n+        }]);\n+        items.push(['pick color', function() { self._pickColorOnNextClick = true; }]);\n+        return items;\n+    }\n+},\n+'events', {\n+    onMouseDown: function($super, evt) {\n+        if (this._pickColorOnNextClick) {\n+            delete this._pickColorOnNextClick;\n+            var pos = evt.getPositionIn(this),\n+                col = this.positionToColor(pos);\n+            show(\"color: [%s]\", col);\n+            evt.stop(); return true;\n+        }\n+        return $super(evt);\n+    }\n+});\n+\n+Object.extend(lively.morphic.CanvasMorph, {\n+    fromImageMorph: function(imgMorph) {\n+        return (new this()).fromImageMorph(imgMorph);\n     }\n });\n "
         },
         {
            "sha":"bbe77847cd132dc2c17627ce4b509d9f14e9445e",
            "filename":"core/lively/morphic/Graphics.js",
            "status":"modified",
            "additions":20,
            "deletions":2,
            "changes":22,
            "blob_url":"https://github.com/LivelyKernel/LivelyKernel/blob/045f348eb05125a7886eaa48d9600494ab18c17f/core/lively/morphic/Graphics.js",
            "raw_url":"https://github.com/LivelyKernel/LivelyKernel/raw/045f348eb05125a7886eaa48d9600494ab18c17f/core/lively/morphic/Graphics.js",
            "contents_url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/contents/core/lively/morphic/Graphics.js?ref=045f348eb05125a7886eaa48d9600494ab18c17f",
            "patch":"@@ -446,6 +446,18 @@ Object.subclass('Rectangle',\n                 this.rightEdge(),\n                 this.bottomEdge(),\n                 this.leftEdge()];\n+    },\n+\n+    allPoints: function() {\n+        // take rectangle as discrete grid and return all points in the grid\n+        // rect(3,4,2,3).allPoints() == [pt(3,4),pt(4,4),pt(3,5),pt(4,5),pt(3,6),pt(4,6)]\n+        // if you want to convert points to indices use\n+        // var w = 5, h = 7; lively.rect(3,4,2,3).allPoints().map(function(p) { return p.y * w + p.x; }) == [23,24,28,29,33,34]\n+        var x = this.x, y = this.y, w = this.width, h = this.height, points = [];\n+        for (var j = y; j < y+h; j++)\n+            for (var i = x; i < x+w; i++)\n+                points.push(pt(i,j));\n+        return points;\n     }\n },\n 'testing', {\n@@ -625,8 +637,7 @@ Object.subclass('Rectangle',\n \n         return nearest;\n     }\n-}\n-);\n+});\n \n Object.extend(lively.Point, {\n     ensure: function(duck) {\n@@ -1169,6 +1180,9 @@ Object.subclass(\"Color\",\n     toTuple: function() {\n         return [this.r, this.g, this.b, this.a];\n     },\n+    toTuple8Bit: function() {\n+        return [this.r*255, this.g*255, this.b*255, this.a*255];\n+    },\n     toHSB: function() {\n         var max = Math.max(this.r, this.g, this.b),\n             min = Math.min(this.r, this.g, this.b),\n@@ -1276,6 +1290,10 @@ Object.extend(Color, {\n         return new Color(tuple[0], tuple[1], tuple[2], tuple[3]);\n     },\n \n+    fromTuple8Bit: function(tuple) {\n+        return new Color(tuple[0]/255, tuple[1]/255, tuple[2]/255, tuple[3]/255);\n+    },\n+\n     fromString: function(str) {\n         if (!str || str === 'none') {\n             return null;"
         },
         {
            "sha":"a69c9a7359fcbec75cdeda27f1b6928d75ad4f0f",
            "filename":"core/lively/morphic/Widgets.js",
            "status":"modified",
            "additions":1,
            "deletions":0,
            "changes":1,
            "blob_url":"https://github.com/LivelyKernel/LivelyKernel/blob/045f348eb05125a7886eaa48d9600494ab18c17f/core/lively/morphic/Widgets.js",
            "raw_url":"https://github.com/LivelyKernel/LivelyKernel/raw/045f348eb05125a7886eaa48d9600494ab18c17f/core/lively/morphic/Widgets.js",
            "contents_url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/contents/core/lively/morphic/Widgets.js?ref=045f348eb05125a7886eaa48d9600494ab18c17f",
            "patch":"@@ -356,6 +356,7 @@ lively.morphic.Morph.subclass('lively.morphic.Image',\n 'menu', {\n     morphMenuItems: function($super) {\n         var items = $super();\n+        items.push(['open as canvas morph', function() { lively.morphic.CanvasMorph.fromImageMorph(this).openInHand(); }.bind(this)]);\n         items.push(['set to original extent', this.setNativeExtent.bind(this)]);\n         items.push(['inline image data', this.convertToBase64.bind(this)]);\n         return items;"
         },
         {
            "sha":"3d9089e50e5171f3ea28a0bd2393cf33aeeb30ac",
            "filename":"core/lively/morphic/tests/Canvas.js",
            "status":"added",
            "additions":122,
            "deletions":0,
            "changes":122,
            "blob_url":"https://github.com/LivelyKernel/LivelyKernel/blob/045f348eb05125a7886eaa48d9600494ab18c17f/core/lively/morphic/tests/Canvas.js",
            "raw_url":"https://github.com/LivelyKernel/LivelyKernel/raw/045f348eb05125a7886eaa48d9600494ab18c17f/core/lively/morphic/tests/Canvas.js",
            "contents_url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/contents/core/lively/morphic/tests/Canvas.js?ref=045f348eb05125a7886eaa48d9600494ab18c17f",
            "patch":"@@ -0,0 +1,122 @@\n+module('lively.morphic.tests.Canvas').requires('lively.morphic.tests.Helper', 'lively.morphic.AdditionalMorphs').toRun(function() {\n+\n+AsyncTestCase.subclass(\"lively.morphic.tests.CanvasAccessTest\",\n+'running', {\n+    setUp: function(run) {\n+        var width = 4, height = 3,\n+            testCanvasData = [\n+                0,0,0,255, 0,0,0,255,       0,0,0,255,       0,0,0,255,\n+                0,0,0,255, 200,200,200,255, 190,190,190,255, 0,0,0,255,\n+                0,0,0,255, 0,0,0,255,       0,0,0,255,       0,0,0,255];\n+        this.sut = new lively.morphic.CanvasMorph();\n+        this.sut.putImageData(testCanvasData, width, height);\n+        run.delay(0);\n+    },\n+},\n+'testing', {\n+\n+    testColorAt: function() {\n+        var result = this.sut.colorAt(5*4);\n+        this.assertEquals([200,200,200,255], result);\n+        this.done();\n+    },\n+\n+    testSameColor: function() {\n+        var col1 = [0,20,30,255],\n+            col2 = [0,20,30,255],\n+            col3 = [255,255,255,255];\n+        this.assert(this.sut.isSameColor(col1, col1), '1');\n+        this.assert(this.sut.isSameColor(col1, col2), '2');\n+        this.assert(!this.sut.isSameColor(col1, col3), '3');\n+        this.done();\n+    },\n+\n+    testGetRows: function() {\n+        var result = this.sut.getRows();\n+        this.assertEquals([\n+            [[0,0,0,255],[0,0,0,255],      [0,0,0,255],      [0,0,0,255]],\n+            [[0,0,0,255],[200,200,200,255],[190,190,190,255],[0,0,0,255]],\n+            [[0,0,0,255],[0,0,0,255],      [0,0,0,255],      [0,0,0,255]]\n+        ], result);\n+        this.done();\n+    },\n+\n+    testGetCols: function() {\n+        var result = this.sut.getCols();\n+        this.assertEquals([\n+            [[0,0,0,255],[0,0,0,255],[0,0,0,255]],\n+            [[0,0,0,255],[200,200,200,255],[0,0,0,255]],\n+            [[0,0,0,255],[190,190,190,255],[0,0,0,255]],\n+            [[0,0,0,255],[0,0,0,255],[0,0,0,255]]\n+        ], result);\n+        this.done();\n+    },\n+\n+    testFindFirstRow: function() {\n+        var cvs = this.sut;\n+        var result = cvs.findFirstIndex(\n+            function(row) { return cvs.isSameColor(row[1], [200,200,200,255]); },\n+            cvs.getRows(), false);\n+        this.assertEquals(1, result);\n+        this.done();\n+    },\n+\n+    testFindFirstColReverse: function() {\n+        var cvs = this.sut;\n+        var result = cvs.findFirstIndex(\n+            function(col) { return cvs.isSameColor(col[1], [200,200,200,255]); },\n+            cvs.getCols(), true);\n+        this.assertEquals(2, result);\n+        this.done();\n+    },\n+\n+    testReplaceColor: function() {\n+        var cvs = this.sut;\n+        cvs.replaceColor([0,0,0,255], [20,20,20,255]);\n+        this.delay(function() {\n+            var result = this.sut.getRows();\n+            this.assertEquals([\n+                [[20,20,20,255],[20,20,20,255],   [20,20,20,255],   [20,20,20,255]],\n+                [[20,20,20,255],[200,200,200,255],[190,190,190,255],[20,20,20,255]],\n+                [[20,20,20,255],[20,20,20,255],   [20,20,20,255],   [20,20,20,255]]\n+            ], result);\n+            this.done();\n+        }, 0);\n+    },\n+\n+    testReplaceColorInRect: function() {\n+        var cvs = this.sut;\n+        cvs.replaceColor([0,0,0,255], [20,20,20,255], lively.rect(0,0,2,3));\n+        this.delay(function() {\n+            var result = cvs.toImageDataArray(),\n+                expected = [\n+                    20,20,20,255, 20,20,20,255,    0, 0, 0,255,     0,0,0,255,\n+                    20,20,20,255, 200,200,200,255, 190,190,190,255, 0,0,0,255,\n+                    20,20,20,255, 20,20,20,255,    0, 0, 0,255,     0,0,0,255];\n+            this.assertEquals(expected, result);\n+            this.done();\n+        }, 0);\n+    },\n+\n+    testCropColor: function() {\n+        var cvs = this.sut;\n+        cvs.cropColor([0,0,0,255], Rectangle.inset(0,1,1,0));\n+        this.delay(function() {\n+            var result = cvs.toImageDataArray(),\n+                expected = [  0,  0,  0,255,   0,  0,  0,255, 0,0,0,255,\n+                            200,200,200,255, 190,190,190,255, 0,0,0,255];\n+            this.assertEquals(expected, result);\n+            this.done();\n+        }, 0);\n+    },\n+\n+    testPositionToColor: function() {\n+        var cvs = this.sut;\n+        this.assertEquals([200,200,200,255], cvs.positionToColor(pt(1,1)));\n+        this.assertEquals([190,190,190,255], cvs.positionToColor(pt(2,1)));\n+        this.assertEquals([0,0,0,255], cvs.positionToColor(pt(3,2)));\n+        this.done();\n+    }\n+});\n+\n+}) // end of module"
         }
      ]
   },
   {
      "sha":"37b65efc1e011e1debea606e5e405999241f8ea9",
      "commit":{
         "author":{
            "name":"Robert Krahn",
            "email":"robert.krahn@gmail.com",
            "date":"2013-12-26T17:21:29Z"
         },
         "committer":{
            "name":"Robert Krahn",
            "email":"robert.krahn@gmail.com",
            "date":"2013-12-26T21:38:16Z"
         },
         "message":"acorn: extending acorn.walk.all to recursively have parent nodes accessible when traversing",
         "tree":{
            "sha":"6b51e1ca0d29f10bca9d527045edb5da5d674e0a",
            "url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/git/trees/6b51e1ca0d29f10bca9d527045edb5da5d674e0a"
         },
         "url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/git/commits/37b65efc1e011e1debea606e5e405999241f8ea9",
         "comment_count":0
      },
      "url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/commits/37b65efc1e011e1debea606e5e405999241f8ea9",
      "html_url":"https://github.com/LivelyKernel/LivelyKernel/commit/37b65efc1e011e1debea606e5e405999241f8ea9",
      "comments_url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/commits/37b65efc1e011e1debea606e5e405999241f8ea9/comments",
      "author":{
         "login":"rksm",
         "id":467450,
         "avatar_url":"https://gravatar.com/avatar/7e0fc9769fc4ec9b23b85da1639d5f31?d=https%3A%2F%2Fidenticons.github.com%2Ff5790be82a84c28f0e1fadaed4826b78.png&r=x",
         "gravatar_id":"7e0fc9769fc4ec9b23b85da1639d5f31",
         "url":"https://api.github.com/users/rksm",
         "html_url":"https://github.com/rksm",
         "followers_url":"https://api.github.com/users/rksm/followers",
         "following_url":"https://api.github.com/users/rksm/following{/other_user}",
         "gists_url":"https://api.github.com/users/rksm/gists{/gist_id}",
         "starred_url":"https://api.github.com/users/rksm/starred{/owner}{/repo}",
         "subscriptions_url":"https://api.github.com/users/rksm/subscriptions",
         "organizations_url":"https://api.github.com/users/rksm/orgs",
         "repos_url":"https://api.github.com/users/rksm/repos",
         "events_url":"https://api.github.com/users/rksm/events{/privacy}",
         "received_events_url":"https://api.github.com/users/rksm/received_events",
         "type":"User",
         "site_admin":false
      },
      "committer":{
         "login":"rksm",
         "id":467450,
         "avatar_url":"https://gravatar.com/avatar/7e0fc9769fc4ec9b23b85da1639d5f31?d=https%3A%2F%2Fidenticons.github.com%2Ff5790be82a84c28f0e1fadaed4826b78.png&r=x",
         "gravatar_id":"7e0fc9769fc4ec9b23b85da1639d5f31",
         "url":"https://api.github.com/users/rksm",
         "html_url":"https://github.com/rksm",
         "followers_url":"https://api.github.com/users/rksm/followers",
         "following_url":"https://api.github.com/users/rksm/following{/other_user}",
         "gists_url":"https://api.github.com/users/rksm/gists{/gist_id}",
         "starred_url":"https://api.github.com/users/rksm/starred{/owner}{/repo}",
         "subscriptions_url":"https://api.github.com/users/rksm/subscriptions",
         "organizations_url":"https://api.github.com/users/rksm/orgs",
         "repos_url":"https://api.github.com/users/rksm/repos",
         "events_url":"https://api.github.com/users/rksm/events{/privacy}",
         "received_events_url":"https://api.github.com/users/rksm/received_events",
         "type":"User",
         "site_admin":false
      },
      "parents":[
         {
            "sha":"f790eeec337e3df5c9a7e6b380e1967889b351b1",
            "url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/commits/f790eeec337e3df5c9a7e6b380e1967889b351b1",
            "html_url":"https://github.com/LivelyKernel/LivelyKernel/commit/f790eeec337e3df5c9a7e6b380e1967889b351b1"
         }
      ],
      "stats":{
         "total":31,
         "additions":22,
         "deletions":9
      },
      "files":[
         {
            "sha":"46d88a5bce865a7aa8bb52623692a8f0c40837da",
            "filename":"core/lively/ast/acorn.js",
            "status":"modified",
            "additions":22,
            "deletions":9,
            "changes":31,
            "blob_url":"https://github.com/LivelyKernel/LivelyKernel/blob/37b65efc1e011e1debea606e5e405999241f8ea9/core/lively/ast/acorn.js",
            "raw_url":"https://github.com/LivelyKernel/LivelyKernel/raw/37b65efc1e011e1debea606e5e405999241f8ea9/core/lively/ast/acorn.js",
            "contents_url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/contents/core/lively/ast/acorn.js?ref=37b65efc1e011e1debea606e5e405999241f8ea9",
            "patch":"@@ -45,7 +45,7 @@ module(\"lively.ast.acorn\").requires(\"lively.ide.SourceDatabase\").requiresLib({lo\n             parentScope && parentScope.containingScopes.push(scope);\n             return scope;\n         }\n-        if (!state) state = {depth: 0, path: [], referencedAs: [], scope: makeScope()};\n+        if (!state) state = {depth: 0, path: [], node: astNode, referencedAs: [], scope: makeScope(), parentState: {}};\n         if (state.depth > 100) throw new Error('Endless recursion?');\n         var isASTNode = !!astNode.type;\n         if (isASTNode && astNode.type === 'FunctionExpression') state.scope = makeScope(state.scope);\n@@ -57,11 +57,13 @@ module(\"lively.ast.acorn\").requires(\"lively.ide.SourceDatabase\").requiresLib({lo\n             var val = astNode[key];\n             if (val && typeof val === 'object') {\n                 walkASTNode(val, iterator, {\n+                    node: val,\n                     depth: isASTNode ? state.depth + 1 : state.depth,\n                     scope: state.scope,\n-                    path: state.path.concat([Object.isNumber ? 'number:'+  key : key]),\n+                    path: state.path.concat([key]),\n                     parentNode: isASTNode ? astNode : state.parentNode,\n-                    referencedAs: isASTNode ? [key] : state.referencedAs.concat([key])\n+                    referencedAs: isASTNode ? [key] : state.referencedAs.concat([key]),\n+                    parentState: isASTNode ? state : state.parentState\n                 });\n             }\n         });\n@@ -195,17 +197,28 @@ module(\"lively.ast.acorn\").requires(\"lively.ide.SourceDatabase\").requiresLib({lo\n         return result;\n     };\n \n-    acorn.walk.print = function(ast, source) {\n+    acorn.walk.print = function(ast, source, options) {\n+        // options = {addSource: BOOL, nodeIndexes: BOOL, nodeLines: BOOL}\n         // acorn.walk.print('12+3')\n+        options = options || {};\n         source = Object.isString(ast) ? ast : source;\n         ast = Object.isString(ast) ? acorn.parse(ast) : ast;\n+        var lineComputer = source && options.nodeLines ? Strings.lineIndexComputer(source) : null;\n         var result = [];\n         acorn.walk.all(ast, function(node, state) {\n-            var nodeSrc = source ? ',' + Strings.print(source.slice(node.start, node.end).replace(/\\n|\\r/g, '').truncate(20)) : '';\n-            var indent = Strings.indent('', '  ', state.depth);\n-            result.push(Strings.format('%s%s:%s<%s-%s%s>',\n-                                    indent, state.referencedAs.length ? state.referencedAs.join('.') : 'root',\n-                                    node.type, node.start, node.end, nodeSrc));\n+            // indent\n+            var string = Strings.indent('', '  ', state.depth);\n+            // referenced as\n+            string += state.referencedAs.length ? state.referencedAs.join('.') : 'root'\n+            // type\n+            string += ':' + node.type;\n+            // attributes, start/end index\n+            var attrs = [];\n+            if (options.nodeIndexes) attrs.push(node.start + '-' + node.start);\n+            if (lineComputer) attrs.push(lineComputer(node.start) + '-' + lineComputer(node.end));\n+            if (source && options.addSource) attrs.push(Strings.print(source.slice(node.start, node.end).replace(/\\n|\\r/g, '').truncate(20)));\n+            if (attrs.length) string += '<' + attrs.join(',') + '>';\n+            result.push(string);\n         });\n         return result.join('\\n');\n     };"
         }
      ]
   },
   {
      "sha":"cc9319541cf294501a863ce7fb59027c5bf8b5ac",
      "commit":{
         "author":{
            "name":"Robert Krahn",
            "email":"robert.krahn@gmail.com",
            "date":"2013-12-26T17:36:58Z"
         },
         "committer":{
            "name":"Robert Krahn",
            "email":"robert.krahn@gmail.com",
            "date":"2013-12-26T21:38:17Z"
         },
         "message":"Revert \"small obvious fix\"\n\nThis reverts commit e951d592247fc7a4af825f53b3f4c98361e4ce94.",
         "tree":{
            "sha":"985538c91a979f16ebcd858669b6666f38e28bf6",
            "url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/git/trees/985538c91a979f16ebcd858669b6666f38e28bf6"
         },
         "url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/git/commits/cc9319541cf294501a863ce7fb59027c5bf8b5ac",
         "comment_count":0
      },
      "url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/commits/cc9319541cf294501a863ce7fb59027c5bf8b5ac",
      "html_url":"https://github.com/LivelyKernel/LivelyKernel/commit/cc9319541cf294501a863ce7fb59027c5bf8b5ac",
      "comments_url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/commits/cc9319541cf294501a863ce7fb59027c5bf8b5ac/comments",
      "author":{
         "login":"rksm",
         "id":467450,
         "avatar_url":"https://gravatar.com/avatar/7e0fc9769fc4ec9b23b85da1639d5f31?d=https%3A%2F%2Fidenticons.github.com%2Ff5790be82a84c28f0e1fadaed4826b78.png&r=x",
         "gravatar_id":"7e0fc9769fc4ec9b23b85da1639d5f31",
         "url":"https://api.github.com/users/rksm",
         "html_url":"https://github.com/rksm",
         "followers_url":"https://api.github.com/users/rksm/followers",
         "following_url":"https://api.github.com/users/rksm/following{/other_user}",
         "gists_url":"https://api.github.com/users/rksm/gists{/gist_id}",
         "starred_url":"https://api.github.com/users/rksm/starred{/owner}{/repo}",
         "subscriptions_url":"https://api.github.com/users/rksm/subscriptions",
         "organizations_url":"https://api.github.com/users/rksm/orgs",
         "repos_url":"https://api.github.com/users/rksm/repos",
         "events_url":"https://api.github.com/users/rksm/events{/privacy}",
         "received_events_url":"https://api.github.com/users/rksm/received_events",
         "type":"User",
         "site_admin":false
      },
      "committer":{
         "login":"rksm",
         "id":467450,
         "avatar_url":"https://gravatar.com/avatar/7e0fc9769fc4ec9b23b85da1639d5f31?d=https%3A%2F%2Fidenticons.github.com%2Ff5790be82a84c28f0e1fadaed4826b78.png&r=x",
         "gravatar_id":"7e0fc9769fc4ec9b23b85da1639d5f31",
         "url":"https://api.github.com/users/rksm",
         "html_url":"https://github.com/rksm",
         "followers_url":"https://api.github.com/users/rksm/followers",
         "following_url":"https://api.github.com/users/rksm/following{/other_user}",
         "gists_url":"https://api.github.com/users/rksm/gists{/gist_id}",
         "starred_url":"https://api.github.com/users/rksm/starred{/owner}{/repo}",
         "subscriptions_url":"https://api.github.com/users/rksm/subscriptions",
         "organizations_url":"https://api.github.com/users/rksm/orgs",
         "repos_url":"https://api.github.com/users/rksm/repos",
         "events_url":"https://api.github.com/users/rksm/events{/privacy}",
         "received_events_url":"https://api.github.com/users/rksm/received_events",
         "type":"User",
         "site_admin":false
      },
      "parents":[
         {
            "sha":"37b65efc1e011e1debea606e5e405999241f8ea9",
            "url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/commits/37b65efc1e011e1debea606e5e405999241f8ea9",
            "html_url":"https://github.com/LivelyKernel/LivelyKernel/commit/37b65efc1e011e1debea606e5e405999241f8ea9"
         }
      ],
      "stats":{
         "total":2,
         "additions":1,
         "deletions":1
      },
      "files":[
         {
            "sha":"c4a5a759e90cf025374a3c68191422b0f3d5c486",
            "filename":"core/lib/ace/lively-ace.js",
            "status":"modified",
            "additions":1,
            "deletions":1,
            "changes":2,
            "blob_url":"https://github.com/LivelyKernel/LivelyKernel/blob/cc9319541cf294501a863ce7fb59027c5bf8b5ac/core/lib/ace/lively-ace.js",
            "raw_url":"https://github.com/LivelyKernel/LivelyKernel/raw/cc9319541cf294501a863ce7fb59027c5bf8b5ac/core/lib/ace/lively-ace.js",
            "contents_url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/contents/core/lib/ace/lively-ace.js?ref=cc9319541cf294501a863ce7fb59027c5bf8b5ac",
            "patch":"@@ -37,7 +37,7 @@ var global = (function() {\n })();\n \n \n-if (!global[ACE_NAMESPACE] && typeof requirejs !== \"undefined\")\n+if (!ACE_NAMESPACE && typeof requirejs !== \"undefined\")\n     return;\n \n "
         }
      ]
   },
   {
      "sha":"ed6f811997c3ee99ac65d9a76bb56af10815ef7a",
      "commit":{
         "author":{
            "name":"Robert Krahn",
            "email":"robert.krahn@gmail.com",
            "date":"2013-12-27T16:01:58Z"
         },
         "committer":{
            "name":"Robert Krahn",
            "email":"robert.krahn@gmail.com",
            "date":"2013-12-27T16:15:31Z"
         },
         "message":"wiki notification setup cleanup",
         "tree":{
            "sha":"eba7448e9b2e0d9866cb8e83287cded3800616dc",
            "url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/git/trees/eba7448e9b2e0d9866cb8e83287cded3800616dc"
         },
         "url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/git/commits/ed6f811997c3ee99ac65d9a76bb56af10815ef7a",
         "comment_count":0
      },
      "url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/commits/ed6f811997c3ee99ac65d9a76bb56af10815ef7a",
      "html_url":"https://github.com/LivelyKernel/LivelyKernel/commit/ed6f811997c3ee99ac65d9a76bb56af10815ef7a",
      "comments_url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/commits/ed6f811997c3ee99ac65d9a76bb56af10815ef7a/comments",
      "author":{
         "login":"rksm",
         "id":467450,
         "avatar_url":"https://gravatar.com/avatar/7e0fc9769fc4ec9b23b85da1639d5f31?d=https%3A%2F%2Fidenticons.github.com%2Ff5790be82a84c28f0e1fadaed4826b78.png&r=x",
         "gravatar_id":"7e0fc9769fc4ec9b23b85da1639d5f31",
         "url":"https://api.github.com/users/rksm",
         "html_url":"https://github.com/rksm",
         "followers_url":"https://api.github.com/users/rksm/followers",
         "following_url":"https://api.github.com/users/rksm/following{/other_user}",
         "gists_url":"https://api.github.com/users/rksm/gists{/gist_id}",
         "starred_url":"https://api.github.com/users/rksm/starred{/owner}{/repo}",
         "subscriptions_url":"https://api.github.com/users/rksm/subscriptions",
         "organizations_url":"https://api.github.com/users/rksm/orgs",
         "repos_url":"https://api.github.com/users/rksm/repos",
         "events_url":"https://api.github.com/users/rksm/events{/privacy}",
         "received_events_url":"https://api.github.com/users/rksm/received_events",
         "type":"User",
         "site_admin":false
      },
      "committer":{
         "login":"rksm",
         "id":467450,
         "avatar_url":"https://gravatar.com/avatar/7e0fc9769fc4ec9b23b85da1639d5f31?d=https%3A%2F%2Fidenticons.github.com%2Ff5790be82a84c28f0e1fadaed4826b78.png&r=x",
         "gravatar_id":"7e0fc9769fc4ec9b23b85da1639d5f31",
         "url":"https://api.github.com/users/rksm",
         "html_url":"https://github.com/rksm",
         "followers_url":"https://api.github.com/users/rksm/followers",
         "following_url":"https://api.github.com/users/rksm/following{/other_user}",
         "gists_url":"https://api.github.com/users/rksm/gists{/gist_id}",
         "starred_url":"https://api.github.com/users/rksm/starred{/owner}{/repo}",
         "subscriptions_url":"https://api.github.com/users/rksm/subscriptions",
         "organizations_url":"https://api.github.com/users/rksm/orgs",
         "repos_url":"https://api.github.com/users/rksm/repos",
         "events_url":"https://api.github.com/users/rksm/events{/privacy}",
         "received_events_url":"https://api.github.com/users/rksm/received_events",
         "type":"User",
         "site_admin":false
      },
      "parents":[
         {
            "sha":"cc9319541cf294501a863ce7fb59027c5bf8b5ac",
            "url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/commits/cc9319541cf294501a863ce7fb59027c5bf8b5ac",
            "html_url":"https://github.com/LivelyKernel/LivelyKernel/commit/cc9319541cf294501a863ce7fb59027c5bf8b5ac"
         }
      ],
      "stats":{
         "total":8,
         "additions":4,
         "deletions":4
      },
      "files":[
         {
            "sha":"bd0e7fbdde43932108a14257235ba3dc02f64080",
            "filename":"core/lively/net/tools/Lively2Lively.js",
            "status":"modified",
            "additions":4,
            "deletions":4,
            "changes":8,
            "blob_url":"https://github.com/LivelyKernel/LivelyKernel/blob/ed6f811997c3ee99ac65d9a76bb56af10815ef7a/core/lively/net/tools/Lively2Lively.js",
            "raw_url":"https://github.com/LivelyKernel/LivelyKernel/raw/ed6f811997c3ee99ac65d9a76bb56af10815ef7a/core/lively/net/tools/Lively2Lively.js",
            "contents_url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/contents/core/lively/net/tools/Lively2Lively.js?ref=ed6f811997c3ee99ac65d9a76bb56af10815ef7a",
            "patch":"@@ -239,12 +239,12 @@ lively.BuildSpec('lively.net.tools.ConnectionIndicator', {\n },\n \n     showNotificationIcon: function showNotificationIcon() {\n-        try {\n-            var icon = lively.PartsBin.getPart('NotificationRectangle', 'PartsBin/Collaboration');\n+        var icon = lively.PartsBin.getPart('NotificationRectangle', 'PartsBin/Collaboration');\n+        if (icon) {\n             this.addMorph(icon);\n             this.alignNotificationIcon();\n-        } catch(e) {\n-            console.warn(\"wiki notificications not available: \", e);\n+        } else {\n+            console.warn(\"wiki notificications not available\");\n         }\n     },\n     "
         }
      ]
   },
   {
      "sha":"5e1ff09e3fe0d7e7af27128798044556f0c9556d",
      "commit":{
         "author":{
            "name":"Robert Krahn",
            "email":"robert.krahn@gmail.com",
            "date":"2013-12-27T16:04:02Z"
         },
         "committer":{
            "name":"Robert Krahn",
            "email":"robert.krahn@gmail.com",
            "date":"2013-12-27T16:15:33Z"
         },
         "message":"worker: don't error on lively.whenLoaded usage",
         "tree":{
            "sha":"6239e597e6b944c303680f4e4f3e7b55441ea450",
            "url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/git/trees/6239e597e6b944c303680f4e4f3e7b55441ea450"
         },
         "url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/git/commits/5e1ff09e3fe0d7e7af27128798044556f0c9556d",
         "comment_count":0
      },
      "url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/commits/5e1ff09e3fe0d7e7af27128798044556f0c9556d",
      "html_url":"https://github.com/LivelyKernel/LivelyKernel/commit/5e1ff09e3fe0d7e7af27128798044556f0c9556d",
      "comments_url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/commits/5e1ff09e3fe0d7e7af27128798044556f0c9556d/comments",
      "author":{
         "login":"rksm",
         "id":467450,
         "avatar_url":"https://gravatar.com/avatar/7e0fc9769fc4ec9b23b85da1639d5f31?d=https%3A%2F%2Fidenticons.github.com%2Ff5790be82a84c28f0e1fadaed4826b78.png&r=x",
         "gravatar_id":"7e0fc9769fc4ec9b23b85da1639d5f31",
         "url":"https://api.github.com/users/rksm",
         "html_url":"https://github.com/rksm",
         "followers_url":"https://api.github.com/users/rksm/followers",
         "following_url":"https://api.github.com/users/rksm/following{/other_user}",
         "gists_url":"https://api.github.com/users/rksm/gists{/gist_id}",
         "starred_url":"https://api.github.com/users/rksm/starred{/owner}{/repo}",
         "subscriptions_url":"https://api.github.com/users/rksm/subscriptions",
         "organizations_url":"https://api.github.com/users/rksm/orgs",
         "repos_url":"https://api.github.com/users/rksm/repos",
         "events_url":"https://api.github.com/users/rksm/events{/privacy}",
         "received_events_url":"https://api.github.com/users/rksm/received_events",
         "type":"User",
         "site_admin":false
      },
      "committer":{
         "login":"rksm",
         "id":467450,
         "avatar_url":"https://gravatar.com/avatar/7e0fc9769fc4ec9b23b85da1639d5f31?d=https%3A%2F%2Fidenticons.github.com%2Ff5790be82a84c28f0e1fadaed4826b78.png&r=x",
         "gravatar_id":"7e0fc9769fc4ec9b23b85da1639d5f31",
         "url":"https://api.github.com/users/rksm",
         "html_url":"https://github.com/rksm",
         "followers_url":"https://api.github.com/users/rksm/followers",
         "following_url":"https://api.github.com/users/rksm/following{/other_user}",
         "gists_url":"https://api.github.com/users/rksm/gists{/gist_id}",
         "starred_url":"https://api.github.com/users/rksm/starred{/owner}{/repo}",
         "subscriptions_url":"https://api.github.com/users/rksm/subscriptions",
         "organizations_url":"https://api.github.com/users/rksm/orgs",
         "repos_url":"https://api.github.com/users/rksm/repos",
         "events_url":"https://api.github.com/users/rksm/events{/privacy}",
         "received_events_url":"https://api.github.com/users/rksm/received_events",
         "type":"User",
         "site_admin":false
      },
      "parents":[
         {
            "sha":"ed6f811997c3ee99ac65d9a76bb56af10815ef7a",
            "url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/commits/ed6f811997c3ee99ac65d9a76bb56af10815ef7a",
            "html_url":"https://github.com/LivelyKernel/LivelyKernel/commit/ed6f811997c3ee99ac65d9a76bb56af10815ef7a"
         }
      ],
      "stats":{
         "total":11,
         "additions":8,
         "deletions":3
      },
      "files":[
         {
            "sha":"de87159e15bf395e4fae5b4a4eef262cb706c80b",
            "filename":"core/lively/lang/Worker.js",
            "status":"modified",
            "additions":8,
            "deletions":3,
            "changes":11,
            "blob_url":"https://github.com/LivelyKernel/LivelyKernel/blob/5e1ff09e3fe0d7e7af27128798044556f0c9556d/core/lively/lang/Worker.js",
            "raw_url":"https://github.com/LivelyKernel/LivelyKernel/raw/5e1ff09e3fe0d7e7af27128798044556f0c9556d/core/lively/lang/Worker.js",
            "contents_url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/contents/core/lively/lang/Worker.js?ref=5e1ff09e3fe0d7e7af27128798044556f0c9556d",
            "patch":"@@ -92,11 +92,16 @@ lively.Worker = {\n                 // 1) establish required objects\n                 Global = this;\n                 Global.window = Global;\n-                Global.lively={};\n-                Global.console = {\n+                Global.lively = {\n+                    whenLoaded: function(callback) {\n+                        // currently ignored in worker\n+                        Global.Config.finishLoadingCallbacks.push(callback);\n+                    }\n+                };\n+                Global.console = Global.console || {\n                     log: function() {}, error: function() {}, warn: function() {}\n                 }\n-                if (!Global.Config) Global.Config = {codeBase: options.codeBase, rootPath: options.rootPath};\n+                if (!Global.Config) Global.Config = {codeBase: options.codeBase, rootPath: options.rootPath, finishLoadingCallbacks: []};\n                 if (!Global.document) Global.document = {location: self.location, URL: self.location.toString()}\n                 var loadedURLs = [];\n                 Global.JSLoader = {"
         }
      ]
   },
   {
      "sha":"11a5af1ff80a56d84da7e911a848e6fcb6f8ea1a",
      "commit":{
         "author":{
            "name":"Robert Krahn",
            "email":"robert.krahn@gmail.com",
            "date":"2013-12-27T16:04:37Z"
         },
         "committer":{
            "name":"Robert Krahn",
            "email":"robert.krahn@gmail.com",
            "date":"2013-12-27T16:15:35Z"
         },
         "message":"modulesystem: small cleanup",
         "tree":{
            "sha":"cb280e2c5ae37e7091eb1895c4f508db8f81f330",
            "url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/git/trees/cb280e2c5ae37e7091eb1895c4f508db8f81f330"
         },
         "url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/git/commits/11a5af1ff80a56d84da7e911a848e6fcb6f8ea1a",
         "comment_count":0
      },
      "url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/commits/11a5af1ff80a56d84da7e911a848e6fcb6f8ea1a",
      "html_url":"https://github.com/LivelyKernel/LivelyKernel/commit/11a5af1ff80a56d84da7e911a848e6fcb6f8ea1a",
      "comments_url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/commits/11a5af1ff80a56d84da7e911a848e6fcb6f8ea1a/comments",
      "author":{
         "login":"rksm",
         "id":467450,
         "avatar_url":"https://gravatar.com/avatar/7e0fc9769fc4ec9b23b85da1639d5f31?d=https%3A%2F%2Fidenticons.github.com%2Ff5790be82a84c28f0e1fadaed4826b78.png&r=x",
         "gravatar_id":"7e0fc9769fc4ec9b23b85da1639d5f31",
         "url":"https://api.github.com/users/rksm",
         "html_url":"https://github.com/rksm",
         "followers_url":"https://api.github.com/users/rksm/followers",
         "following_url":"https://api.github.com/users/rksm/following{/other_user}",
         "gists_url":"https://api.github.com/users/rksm/gists{/gist_id}",
         "starred_url":"https://api.github.com/users/rksm/starred{/owner}{/repo}",
         "subscriptions_url":"https://api.github.com/users/rksm/subscriptions",
         "organizations_url":"https://api.github.com/users/rksm/orgs",
         "repos_url":"https://api.github.com/users/rksm/repos",
         "events_url":"https://api.github.com/users/rksm/events{/privacy}",
         "received_events_url":"https://api.github.com/users/rksm/received_events",
         "type":"User",
         "site_admin":false
      },
      "committer":{
         "login":"rksm",
         "id":467450,
         "avatar_url":"https://gravatar.com/avatar/7e0fc9769fc4ec9b23b85da1639d5f31?d=https%3A%2F%2Fidenticons.github.com%2Ff5790be82a84c28f0e1fadaed4826b78.png&r=x",
         "gravatar_id":"7e0fc9769fc4ec9b23b85da1639d5f31",
         "url":"https://api.github.com/users/rksm",
         "html_url":"https://github.com/rksm",
         "followers_url":"https://api.github.com/users/rksm/followers",
         "following_url":"https://api.github.com/users/rksm/following{/other_user}",
         "gists_url":"https://api.github.com/users/rksm/gists{/gist_id}",
         "starred_url":"https://api.github.com/users/rksm/starred{/owner}{/repo}",
         "subscriptions_url":"https://api.github.com/users/rksm/subscriptions",
         "organizations_url":"https://api.github.com/users/rksm/orgs",
         "repos_url":"https://api.github.com/users/rksm/repos",
         "events_url":"https://api.github.com/users/rksm/events{/privacy}",
         "received_events_url":"https://api.github.com/users/rksm/received_events",
         "type":"User",
         "site_admin":false
      },
      "parents":[
         {
            "sha":"5e1ff09e3fe0d7e7af27128798044556f0c9556d",
            "url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/commits/5e1ff09e3fe0d7e7af27128798044556f0c9556d",
            "html_url":"https://github.com/LivelyKernel/LivelyKernel/commit/5e1ff09e3fe0d7e7af27128798044556f0c9556d"
         }
      ],
      "stats":{
         "total":6,
         "additions":1,
         "deletions":5
      },
      "files":[
         {
            "sha":"173b9174e87d7316f2caf6425c4cbf57a5ce8141",
            "filename":"core/lively/ModuleSystem.js",
            "status":"modified",
            "additions":1,
            "deletions":5,
            "changes":6,
            "blob_url":"https://github.com/LivelyKernel/LivelyKernel/blob/11a5af1ff80a56d84da7e911a848e6fcb6f8ea1a/core/lively/ModuleSystem.js",
            "raw_url":"https://github.com/LivelyKernel/LivelyKernel/raw/11a5af1ff80a56d84da7e911a848e6fcb6f8ea1a/core/lively/ModuleSystem.js",
            "contents_url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/contents/core/lively/ModuleSystem.js?ref=11a5af1ff80a56d84da7e911a848e6fcb6f8ea1a",
            "patch":"@@ -134,7 +134,7 @@ Object.extend(lively, {\n \n     require: function require(/*requiredModuleNameOrAnArray, anotherRequiredModuleName, ...*/) {\n         var getUniqueName = function() { return 'anonymous_module_' + require.counter },\n-            args = $A(arguments);\n+            args = Array.from(arguments);\n         require.counter !== undefined ? require.counter++ : require.counter = 0;\n         var m = module(getUniqueName()).beAnonymous();\n         if (lively.Config.showModuleDefStack)\n@@ -633,10 +633,6 @@ Object.extend(lively.Module, {\n         resetDebuggingStack: Functions.Null,\n         installStackTracers: Functions.Null\n     };\n-    lively.lang.let = function(/** **/) {\n-        // lively.lang.let(y, function(x) { body }) is equivalent to { let y = x; body; }\n-        return arguments[arguments.length - 1].apply(this, arguments);\n-    }\n })(lively);\n \n (function testModuleLoad() {"
         }
      ]
   },
   {
      "sha":"1c5b03fb8ce862b9f69375937becdb07fa210e17",
      "commit":{
         "author":{
            "name":"Robert Krahn",
            "email":"robert.krahn@gmail.com",
            "date":"2013-12-27T16:05:26Z"
         },
         "committer":{
            "name":"Robert Krahn",
            "email":"robert.krahn@gmail.com",
            "date":"2013-12-27T16:20:29Z"
         },
         "message":"changesets: only require lively.ChangeSet when \"LivelyChangesets\" are in localstorage",
         "tree":{
            "sha":"199ab7051973dc94c0ca536a391dab0be6367d5e",
            "url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/git/trees/199ab7051973dc94c0ca536a391dab0be6367d5e"
         },
         "url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/git/commits/1c5b03fb8ce862b9f69375937becdb07fa210e17",
         "comment_count":0
      },
      "url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/commits/1c5b03fb8ce862b9f69375937becdb07fa210e17",
      "html_url":"https://github.com/LivelyKernel/LivelyKernel/commit/1c5b03fb8ce862b9f69375937becdb07fa210e17",
      "comments_url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/commits/1c5b03fb8ce862b9f69375937becdb07fa210e17/comments",
      "author":{
         "login":"rksm",
         "id":467450,
         "avatar_url":"https://gravatar.com/avatar/7e0fc9769fc4ec9b23b85da1639d5f31?d=https%3A%2F%2Fidenticons.github.com%2Ff5790be82a84c28f0e1fadaed4826b78.png&r=x",
         "gravatar_id":"7e0fc9769fc4ec9b23b85da1639d5f31",
         "url":"https://api.github.com/users/rksm",
         "html_url":"https://github.com/rksm",
         "followers_url":"https://api.github.com/users/rksm/followers",
         "following_url":"https://api.github.com/users/rksm/following{/other_user}",
         "gists_url":"https://api.github.com/users/rksm/gists{/gist_id}",
         "starred_url":"https://api.github.com/users/rksm/starred{/owner}{/repo}",
         "subscriptions_url":"https://api.github.com/users/rksm/subscriptions",
         "organizations_url":"https://api.github.com/users/rksm/orgs",
         "repos_url":"https://api.github.com/users/rksm/repos",
         "events_url":"https://api.github.com/users/rksm/events{/privacy}",
         "received_events_url":"https://api.github.com/users/rksm/received_events",
         "type":"User",
         "site_admin":false
      },
      "committer":{
         "login":"rksm",
         "id":467450,
         "avatar_url":"https://gravatar.com/avatar/7e0fc9769fc4ec9b23b85da1639d5f31?d=https%3A%2F%2Fidenticons.github.com%2Ff5790be82a84c28f0e1fadaed4826b78.png&r=x",
         "gravatar_id":"7e0fc9769fc4ec9b23b85da1639d5f31",
         "url":"https://api.github.com/users/rksm",
         "html_url":"https://github.com/rksm",
         "followers_url":"https://api.github.com/users/rksm/followers",
         "following_url":"https://api.github.com/users/rksm/following{/other_user}",
         "gists_url":"https://api.github.com/users/rksm/gists{/gist_id}",
         "starred_url":"https://api.github.com/users/rksm/starred{/owner}{/repo}",
         "subscriptions_url":"https://api.github.com/users/rksm/subscriptions",
         "organizations_url":"https://api.github.com/users/rksm/orgs",
         "repos_url":"https://api.github.com/users/rksm/repos",
         "events_url":"https://api.github.com/users/rksm/events{/privacy}",
         "received_events_url":"https://api.github.com/users/rksm/received_events",
         "type":"User",
         "site_admin":false
      },
      "parents":[
         {
            "sha":"11a5af1ff80a56d84da7e911a848e6fcb6f8ea1a",
            "url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/commits/11a5af1ff80a56d84da7e911a848e6fcb6f8ea1a",
            "html_url":"https://github.com/LivelyKernel/LivelyKernel/commit/11a5af1ff80a56d84da7e911a848e6fcb6f8ea1a"
         }
      ],
      "stats":{
         "total":9,
         "additions":6,
         "deletions":3
      },
      "files":[
         {
            "sha":"2da8d314a775300fd609c4ce176d9098fd28666a",
            "filename":"core/lively/ModuleSystem.js",
            "status":"modified",
            "additions":6,
            "deletions":3,
            "changes":9,
            "blob_url":"https://github.com/LivelyKernel/LivelyKernel/blob/1c5b03fb8ce862b9f69375937becdb07fa210e17/core/lively/ModuleSystem.js",
            "raw_url":"https://github.com/LivelyKernel/LivelyKernel/raw/1c5b03fb8ce862b9f69375937becdb07fa210e17/core/lively/ModuleSystem.js",
            "contents_url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/contents/core/lively/ModuleSystem.js?ref=1c5b03fb8ce862b9f69375937becdb07fa210e17",
            "patch":"@@ -636,8 +636,11 @@ Object.extend(lively.Module, {\n })(lively);\n \n (function testModuleLoad() {\n-    if (Config.changesetsExperiment && Global.localStorage && \n-        localStorage.getItem(\"LivelyChangesets:\" + location.pathname))\n-            lively.ChangeSet.loadAndcheckVsSystem();\n+    if (Config.changesetsExperiment\n+     && Global.localStorage\n+     && localStorage.getItem(\"LivelyChangesets:\" + location.pathname)) {\n+            require('lively.ChangeSets').toRun(function() {\n+                ChangeSet.loadAndcheckVsSystem(); })\n+    }\n     lively.Module.checkModuleLoadStates();\n }).delay((Global.location && location.hostname === \"localhost\") ? 3 : 14);"
         }
      ]
   },
   {
      "sha":"3bf5e06bb892476886f31807cf82f2fcc3f02ab4",
      "commit":{
         "author":{
            "name":"Robert Krahn",
            "email":"robert.krahn@gmail.com",
            "date":"2013-12-27T16:06:09Z"
         },
         "committer":{
            "name":"Robert Krahn",
            "email":"robert.krahn@gmail.com",
            "date":"2013-12-27T16:20:51Z"
         },
         "message":"worker: Functions.forkInWorker has better logging",
         "tree":{
            "sha":"90901f172840f933073760c339db9e80be04e747",
            "url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/git/trees/90901f172840f933073760c339db9e80be04e747"
         },
         "url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/git/commits/3bf5e06bb892476886f31807cf82f2fcc3f02ab4",
         "comment_count":0
      },
      "url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/commits/3bf5e06bb892476886f31807cf82f2fcc3f02ab4",
      "html_url":"https://github.com/LivelyKernel/LivelyKernel/commit/3bf5e06bb892476886f31807cf82f2fcc3f02ab4",
      "comments_url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/commits/3bf5e06bb892476886f31807cf82f2fcc3f02ab4/comments",
      "author":{
         "login":"rksm",
         "id":467450,
         "avatar_url":"https://gravatar.com/avatar/7e0fc9769fc4ec9b23b85da1639d5f31?d=https%3A%2F%2Fidenticons.github.com%2Ff5790be82a84c28f0e1fadaed4826b78.png&r=x",
         "gravatar_id":"7e0fc9769fc4ec9b23b85da1639d5f31",
         "url":"https://api.github.com/users/rksm",
         "html_url":"https://github.com/rksm",
         "followers_url":"https://api.github.com/users/rksm/followers",
         "following_url":"https://api.github.com/users/rksm/following{/other_user}",
         "gists_url":"https://api.github.com/users/rksm/gists{/gist_id}",
         "starred_url":"https://api.github.com/users/rksm/starred{/owner}{/repo}",
         "subscriptions_url":"https://api.github.com/users/rksm/subscriptions",
         "organizations_url":"https://api.github.com/users/rksm/orgs",
         "repos_url":"https://api.github.com/users/rksm/repos",
         "events_url":"https://api.github.com/users/rksm/events{/privacy}",
         "received_events_url":"https://api.github.com/users/rksm/received_events",
         "type":"User",
         "site_admin":false
      },
      "committer":{
         "login":"rksm",
         "id":467450,
         "avatar_url":"https://gravatar.com/avatar/7e0fc9769fc4ec9b23b85da1639d5f31?d=https%3A%2F%2Fidenticons.github.com%2Ff5790be82a84c28f0e1fadaed4826b78.png&r=x",
         "gravatar_id":"7e0fc9769fc4ec9b23b85da1639d5f31",
         "url":"https://api.github.com/users/rksm",
         "html_url":"https://github.com/rksm",
         "followers_url":"https://api.github.com/users/rksm/followers",
         "following_url":"https://api.github.com/users/rksm/following{/other_user}",
         "gists_url":"https://api.github.com/users/rksm/gists{/gist_id}",
         "starred_url":"https://api.github.com/users/rksm/starred{/owner}{/repo}",
         "subscriptions_url":"https://api.github.com/users/rksm/subscriptions",
         "organizations_url":"https://api.github.com/users/rksm/orgs",
         "repos_url":"https://api.github.com/users/rksm/repos",
         "events_url":"https://api.github.com/users/rksm/events{/privacy}",
         "received_events_url":"https://api.github.com/users/rksm/received_events",
         "type":"User",
         "site_admin":false
      },
      "parents":[
         {
            "sha":"1c5b03fb8ce862b9f69375937becdb07fa210e17",
            "url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/commits/1c5b03fb8ce862b9f69375937becdb07fa210e17",
            "html_url":"https://github.com/LivelyKernel/LivelyKernel/commit/1c5b03fb8ce862b9f69375937becdb07fa210e17"
         }
      ],
      "stats":{
         "total":12,
         "additions":9,
         "deletions":3
      },
      "files":[
         {
            "sha":"243d14cdc17e3882b7c8ce8ef44c7ac599638016",
            "filename":"core/lively/lang/Function.js",
            "status":"modified",
            "additions":9,
            "deletions":3,
            "changes":12,
            "blob_url":"https://github.com/LivelyKernel/LivelyKernel/blob/3bf5e06bb892476886f31807cf82f2fcc3f02ab4/core/lively/lang/Function.js",
            "raw_url":"https://github.com/LivelyKernel/LivelyKernel/raw/3bf5e06bb892476886f31807cf82f2fcc3f02ab4/core/lively/lang/Function.js",
            "contents_url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/contents/core/lively/lang/Function.js?ref=3bf5e06bb892476886f31807cf82f2fcc3f02ab4",
            "patch":"@@ -472,11 +472,17 @@ Global.Functions = {\n         var worker = lively.Worker.createInPool(null, Config.get('lively.Worker.idleTimeOfPoolWorker'));\n         worker.onMessage = function(evt) {\n             switch (evt.data.type) {\n-                case 'warning': console.warn(evt.data.message); break;\n-                case 'runResponse': options.whenDone && options.whenDone(evt.data.error, evt.data.result);\n+                case 'warning':\n+                    console.warn(\"[WORKER warn] %s\", evt.data.message);\n+                    break;\n+                case 'runResponse':\n+                    options.whenDone && options.whenDone(evt.data.error, evt.data.result);\n+                    break;\n+                case 'evalResponse':\n+                    console.log(\"[WORKER evalResponse] %s\", evt.data.value);\n                     break;\n                 default:\n-                    console.log(\"unknown message from worker %s\", evt.data.type);\n+                    console.log(\"[WORKER unknown message] %s\", evt.data.type || evt.data);\n             }\n         }\n         worker.basicRun({func: workerFunc, args: options.args || [], useWhenDone: true});"
         }
      ]
   },
   {
      "sha":"709cb5429776bdff24057bd635cd1875c4aca80c",
      "commit":{
         "author":{
            "name":"Robert Krahn",
            "email":"robert.krahn@gmail.com",
            "date":"2013-12-27T16:07:25Z"
         },
         "committer":{
            "name":"Robert Krahn",
            "email":"robert.krahn@gmail.com",
            "date":"2013-12-27T16:20:53Z"
         },
         "message":"ide, code snippets: state network dependency",
         "tree":{
            "sha":"260d7fe4b283f48a886d67d6b8fd8ecf2ecc0d9f",
            "url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/git/trees/260d7fe4b283f48a886d67d6b8fd8ecf2ecc0d9f"
         },
         "url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/git/commits/709cb5429776bdff24057bd635cd1875c4aca80c",
         "comment_count":0
      },
      "url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/commits/709cb5429776bdff24057bd635cd1875c4aca80c",
      "html_url":"https://github.com/LivelyKernel/LivelyKernel/commit/709cb5429776bdff24057bd635cd1875c4aca80c",
      "comments_url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/commits/709cb5429776bdff24057bd635cd1875c4aca80c/comments",
      "author":{
         "login":"rksm",
         "id":467450,
         "avatar_url":"https://gravatar.com/avatar/7e0fc9769fc4ec9b23b85da1639d5f31?d=https%3A%2F%2Fidenticons.github.com%2Ff5790be82a84c28f0e1fadaed4826b78.png&r=x",
         "gravatar_id":"7e0fc9769fc4ec9b23b85da1639d5f31",
         "url":"https://api.github.com/users/rksm",
         "html_url":"https://github.com/rksm",
         "followers_url":"https://api.github.com/users/rksm/followers",
         "following_url":"https://api.github.com/users/rksm/following{/other_user}",
         "gists_url":"https://api.github.com/users/rksm/gists{/gist_id}",
         "starred_url":"https://api.github.com/users/rksm/starred{/owner}{/repo}",
         "subscriptions_url":"https://api.github.com/users/rksm/subscriptions",
         "organizations_url":"https://api.github.com/users/rksm/orgs",
         "repos_url":"https://api.github.com/users/rksm/repos",
         "events_url":"https://api.github.com/users/rksm/events{/privacy}",
         "received_events_url":"https://api.github.com/users/rksm/received_events",
         "type":"User",
         "site_admin":false
      },
      "committer":{
         "login":"rksm",
         "id":467450,
         "avatar_url":"https://gravatar.com/avatar/7e0fc9769fc4ec9b23b85da1639d5f31?d=https%3A%2F%2Fidenticons.github.com%2Ff5790be82a84c28f0e1fadaed4826b78.png&r=x",
         "gravatar_id":"7e0fc9769fc4ec9b23b85da1639d5f31",
         "url":"https://api.github.com/users/rksm",
         "html_url":"https://github.com/rksm",
         "followers_url":"https://api.github.com/users/rksm/followers",
         "following_url":"https://api.github.com/users/rksm/following{/other_user}",
         "gists_url":"https://api.github.com/users/rksm/gists{/gist_id}",
         "starred_url":"https://api.github.com/users/rksm/starred{/owner}{/repo}",
         "subscriptions_url":"https://api.github.com/users/rksm/subscriptions",
         "organizations_url":"https://api.github.com/users/rksm/orgs",
         "repos_url":"https://api.github.com/users/rksm/repos",
         "events_url":"https://api.github.com/users/rksm/events{/privacy}",
         "received_events_url":"https://api.github.com/users/rksm/received_events",
         "type":"User",
         "site_admin":false
      },
      "parents":[
         {
            "sha":"3bf5e06bb892476886f31807cf82f2fcc3f02ab4",
            "url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/commits/3bf5e06bb892476886f31807cf82f2fcc3f02ab4",
            "html_url":"https://github.com/LivelyKernel/LivelyKernel/commit/3bf5e06bb892476886f31807cf82f2fcc3f02ab4"
         }
      ],
      "stats":{
         "total":2,
         "additions":1,
         "deletions":1
      },
      "files":[
         {
            "sha":"032918232fc15bdc63494e89ed8b70a5f8dfff03",
            "filename":"core/lively/ide/codeeditor/Snippets.js",
            "status":"modified",
            "additions":1,
            "deletions":1,
            "changes":2,
            "blob_url":"https://github.com/LivelyKernel/LivelyKernel/blob/709cb5429776bdff24057bd635cd1875c4aca80c/core/lively/ide/codeeditor/Snippets.js",
            "raw_url":"https://github.com/LivelyKernel/LivelyKernel/raw/709cb5429776bdff24057bd635cd1875c4aca80c/core/lively/ide/codeeditor/Snippets.js",
            "contents_url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/contents/core/lively/ide/codeeditor/Snippets.js?ref=709cb5429776bdff24057bd635cd1875c4aca80c",
            "patch":"@@ -1,4 +1,4 @@\n-module('lively.ide.codeeditor.Snippets').requires('lively.ide.codeeditor.ace').toRun(function() {\n+module('lively.ide.codeeditor.Snippets').requires('lively.ide.codeeditor.ace', 'lively.Network').toRun(function() {\n \n Object.subclass('lively.morphic.CodeEditorSnippets',\n 'accessing', {"
         }
      ]
   },
   {
      "sha":"a06c6f68b196a6e72d16d585c41a49907a72fc6c",
      "commit":{
         "author":{
            "name":"Robert Krahn",
            "email":"robert.krahn@gmail.com",
            "date":"2013-12-27T16:50:12Z"
         },
         "committer":{
            "name":"Robert Krahn",
            "email":"robert.krahn@gmail.com",
            "date":"2013-12-27T16:50:12Z"
         },
         "message":"canvasmorph: add tests to default test files",
         "tree":{
            "sha":"c13e6ce70a32877d23e73fc3114005e686f5ace1",
            "url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/git/trees/c13e6ce70a32877d23e73fc3114005e686f5ace1"
         },
         "url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/git/commits/a06c6f68b196a6e72d16d585c41a49907a72fc6c",
         "comment_count":0
      },
      "url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/commits/a06c6f68b196a6e72d16d585c41a49907a72fc6c",
      "html_url":"https://github.com/LivelyKernel/LivelyKernel/commit/a06c6f68b196a6e72d16d585c41a49907a72fc6c",
      "comments_url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/commits/a06c6f68b196a6e72d16d585c41a49907a72fc6c/comments",
      "author":{
         "login":"rksm",
         "id":467450,
         "avatar_url":"https://gravatar.com/avatar/7e0fc9769fc4ec9b23b85da1639d5f31?d=https%3A%2F%2Fidenticons.github.com%2Ff5790be82a84c28f0e1fadaed4826b78.png&r=x",
         "gravatar_id":"7e0fc9769fc4ec9b23b85da1639d5f31",
         "url":"https://api.github.com/users/rksm",
         "html_url":"https://github.com/rksm",
         "followers_url":"https://api.github.com/users/rksm/followers",
         "following_url":"https://api.github.com/users/rksm/following{/other_user}",
         "gists_url":"https://api.github.com/users/rksm/gists{/gist_id}",
         "starred_url":"https://api.github.com/users/rksm/starred{/owner}{/repo}",
         "subscriptions_url":"https://api.github.com/users/rksm/subscriptions",
         "organizations_url":"https://api.github.com/users/rksm/orgs",
         "repos_url":"https://api.github.com/users/rksm/repos",
         "events_url":"https://api.github.com/users/rksm/events{/privacy}",
         "received_events_url":"https://api.github.com/users/rksm/received_events",
         "type":"User",
         "site_admin":false
      },
      "committer":{
         "login":"rksm",
         "id":467450,
         "avatar_url":"https://gravatar.com/avatar/7e0fc9769fc4ec9b23b85da1639d5f31?d=https%3A%2F%2Fidenticons.github.com%2Ff5790be82a84c28f0e1fadaed4826b78.png&r=x",
         "gravatar_id":"7e0fc9769fc4ec9b23b85da1639d5f31",
         "url":"https://api.github.com/users/rksm",
         "html_url":"https://github.com/rksm",
         "followers_url":"https://api.github.com/users/rksm/followers",
         "following_url":"https://api.github.com/users/rksm/following{/other_user}",
         "gists_url":"https://api.github.com/users/rksm/gists{/gist_id}",
         "starred_url":"https://api.github.com/users/rksm/starred{/owner}{/repo}",
         "subscriptions_url":"https://api.github.com/users/rksm/subscriptions",
         "organizations_url":"https://api.github.com/users/rksm/orgs",
         "repos_url":"https://api.github.com/users/rksm/repos",
         "events_url":"https://api.github.com/users/rksm/events{/privacy}",
         "received_events_url":"https://api.github.com/users/rksm/received_events",
         "type":"User",
         "site_admin":false
      },
      "parents":[
         {
            "sha":"0bca47a3fd60a09db93a6dd49b77c8e547ad911f",
            "url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/commits/0bca47a3fd60a09db93a6dd49b77c8e547ad911f",
            "html_url":"https://github.com/LivelyKernel/LivelyKernel/commit/0bca47a3fd60a09db93a6dd49b77c8e547ad911f"
         }
      ],
      "stats":{
         "total":1,
         "additions":1,
         "deletions":0
      },
      "files":[
         {
            "sha":"1a0d5df44ab59f60cae488d956def363784291a5",
            "filename":"run_tests.js",
            "status":"modified",
            "additions":1,
            "deletions":0,
            "changes":1,
            "blob_url":"https://github.com/LivelyKernel/LivelyKernel/blob/a06c6f68b196a6e72d16d585c41a49907a72fc6c/run_tests.js",
            "raw_url":"https://github.com/LivelyKernel/LivelyKernel/raw/a06c6f68b196a6e72d16d585c41a49907a72fc6c/run_tests.js",
            "contents_url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/contents/run_tests.js?ref=a06c6f68b196a6e72d16d585c41a49907a72fc6c",
            "patch":"@@ -116,6 +116,7 @@ var browserTests = [\n     'lively.ide.tools.tests.CommandLine',\n \n     // morphic\n+    \"lively.morphic.tests.Canvas\",\n     \"lively.morphic.tests.Connectors\",\n     \"lively.morphic.tests.CoreToolsTests\",\n     \"lively.morphic.tests.DataGridTests\","
         }
      ]
   },
   {
      "sha":"fe8537b62f2d37d082985429e9eaffcc61216017",
      "commit":{
         "author":{
            "name":"Robert Krahn",
            "email":"robert.krahn@gmail.com",
            "date":"2013-12-27T22:46:26Z"
         },
         "committer":{
            "name":"Robert Krahn",
            "email":"robert.krahn@gmail.com",
            "date":"2013-12-27T22:46:26Z"
         },
         "message":"prev/next paragraph shortcut fix",
         "tree":{
            "sha":"68e37557539cf4912dba1fb4f9cbcb0137b6265b",
            "url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/git/trees/68e37557539cf4912dba1fb4f9cbcb0137b6265b"
         },
         "url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/git/commits/fe8537b62f2d37d082985429e9eaffcc61216017",
         "comment_count":0
      },
      "url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/commits/fe8537b62f2d37d082985429e9eaffcc61216017",
      "html_url":"https://github.com/LivelyKernel/LivelyKernel/commit/fe8537b62f2d37d082985429e9eaffcc61216017",
      "comments_url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/commits/fe8537b62f2d37d082985429e9eaffcc61216017/comments",
      "author":{
         "login":"rksm",
         "id":467450,
         "avatar_url":"https://gravatar.com/avatar/7e0fc9769fc4ec9b23b85da1639d5f31?d=https%3A%2F%2Fidenticons.github.com%2Ff5790be82a84c28f0e1fadaed4826b78.png&r=x",
         "gravatar_id":"7e0fc9769fc4ec9b23b85da1639d5f31",
         "url":"https://api.github.com/users/rksm",
         "html_url":"https://github.com/rksm",
         "followers_url":"https://api.github.com/users/rksm/followers",
         "following_url":"https://api.github.com/users/rksm/following{/other_user}",
         "gists_url":"https://api.github.com/users/rksm/gists{/gist_id}",
         "starred_url":"https://api.github.com/users/rksm/starred{/owner}{/repo}",
         "subscriptions_url":"https://api.github.com/users/rksm/subscriptions",
         "organizations_url":"https://api.github.com/users/rksm/orgs",
         "repos_url":"https://api.github.com/users/rksm/repos",
         "events_url":"https://api.github.com/users/rksm/events{/privacy}",
         "received_events_url":"https://api.github.com/users/rksm/received_events",
         "type":"User",
         "site_admin":false
      },
      "committer":{
         "login":"rksm",
         "id":467450,
         "avatar_url":"https://gravatar.com/avatar/7e0fc9769fc4ec9b23b85da1639d5f31?d=https%3A%2F%2Fidenticons.github.com%2Ff5790be82a84c28f0e1fadaed4826b78.png&r=x",
         "gravatar_id":"7e0fc9769fc4ec9b23b85da1639d5f31",
         "url":"https://api.github.com/users/rksm",
         "html_url":"https://github.com/rksm",
         "followers_url":"https://api.github.com/users/rksm/followers",
         "following_url":"https://api.github.com/users/rksm/following{/other_user}",
         "gists_url":"https://api.github.com/users/rksm/gists{/gist_id}",
         "starred_url":"https://api.github.com/users/rksm/starred{/owner}{/repo}",
         "subscriptions_url":"https://api.github.com/users/rksm/subscriptions",
         "organizations_url":"https://api.github.com/users/rksm/orgs",
         "repos_url":"https://api.github.com/users/rksm/repos",
         "events_url":"https://api.github.com/users/rksm/events{/privacy}",
         "received_events_url":"https://api.github.com/users/rksm/received_events",
         "type":"User",
         "site_admin":false
      },
      "parents":[
         {
            "sha":"3376e25424e5db8ab7b68d687f64e698320465f6",
            "url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/commits/3376e25424e5db8ab7b68d687f64e698320465f6",
            "html_url":"https://github.com/LivelyKernel/LivelyKernel/commit/3376e25424e5db8ab7b68d687f64e698320465f6"
         }
      ],
      "stats":{
         "total":4,
         "additions":2,
         "deletions":2
      },
      "files":[
         {
            "sha":"ee60a3e3d6c0854cac7f40bda239c3d2b0d69672",
            "filename":"core/lively/ide/codeeditor/Keyboard.js",
            "status":"modified",
            "additions":2,
            "deletions":2,
            "changes":4,
            "blob_url":"https://github.com/LivelyKernel/LivelyKernel/blob/fe8537b62f2d37d082985429e9eaffcc61216017/core/lively/ide/codeeditor/Keyboard.js",
            "raw_url":"https://github.com/LivelyKernel/LivelyKernel/raw/fe8537b62f2d37d082985429e9eaffcc61216017/core/lively/ide/codeeditor/Keyboard.js",
            "contents_url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/contents/core/lively/ide/codeeditor/Keyboard.js?ref=fe8537b62f2d37d082985429e9eaffcc61216017",
            "patch":"@@ -381,7 +381,7 @@ Object.subclass('lively.ide.CodeEditor.KeyboardShortcuts',\n                 readOnly: true\n             }, {\n                 name: 'gotoNextParagraph',\n-                bindKey: 'Ctrl-Up',\n+                bindKey: 'Ctrl-Down',\n                 exec: function(ed) {\n                     var pos = ed.getCursorPosition(), found = -1;\n                     function isEmptyLine(line) { return /^\\s*$/.test(line); }\n@@ -395,7 +395,7 @@ Object.subclass('lively.ide.CodeEditor.KeyboardShortcuts',\n                 readOnly: true\n             }, {\n                 name: 'gotoPrevParagraph',\n-                bindKey: 'Ctrl-Down',\n+                bindKey: 'Ctrl-Up',\n                 exec: function(ed) {\n                     function isEmptyLine(line) { return /^\\s*$/.test(line); }\n                     var pos = ed.getCursorPosition(), found = -1,"
         }
      ]
   },
   {
      "sha":"3376e25424e5db8ab7b68d687f64e698320465f6",
      "commit":{
         "author":{
            "name":"Robert Krahn",
            "email":"robert.krahn@gmail.com",
            "date":"2013-12-27T22:44:52Z"
         },
         "committer":{
            "name":"Robert Krahn",
            "email":"robert.krahn@gmail.com",
            "date":"2013-12-27T22:44:52Z"
         },
         "message":"new shortcuts: gotoNextParagraph (Ctrl-Down), gotoPrevParagraph (Ctrl-Up), moveCursorToScreenTop (Ctrl-Alt-,), moveCursorToScreenBottom (Ctrl-Alt-.)",
         "tree":{
            "sha":"2c02e4245503afa08bdf06c00b97d8cb37182b29",
            "url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/git/trees/2c02e4245503afa08bdf06c00b97d8cb37182b29"
         },
         "url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/git/commits/3376e25424e5db8ab7b68d687f64e698320465f6",
         "comment_count":0
      },
      "url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/commits/3376e25424e5db8ab7b68d687f64e698320465f6",
      "html_url":"https://github.com/LivelyKernel/LivelyKernel/commit/3376e25424e5db8ab7b68d687f64e698320465f6",
      "comments_url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/commits/3376e25424e5db8ab7b68d687f64e698320465f6/comments",
      "author":{
         "login":"rksm",
         "id":467450,
         "avatar_url":"https://gravatar.com/avatar/7e0fc9769fc4ec9b23b85da1639d5f31?d=https%3A%2F%2Fidenticons.github.com%2Ff5790be82a84c28f0e1fadaed4826b78.png&r=x",
         "gravatar_id":"7e0fc9769fc4ec9b23b85da1639d5f31",
         "url":"https://api.github.com/users/rksm",
         "html_url":"https://github.com/rksm",
         "followers_url":"https://api.github.com/users/rksm/followers",
         "following_url":"https://api.github.com/users/rksm/following{/other_user}",
         "gists_url":"https://api.github.com/users/rksm/gists{/gist_id}",
         "starred_url":"https://api.github.com/users/rksm/starred{/owner}{/repo}",
         "subscriptions_url":"https://api.github.com/users/rksm/subscriptions",
         "organizations_url":"https://api.github.com/users/rksm/orgs",
         "repos_url":"https://api.github.com/users/rksm/repos",
         "events_url":"https://api.github.com/users/rksm/events{/privacy}",
         "received_events_url":"https://api.github.com/users/rksm/received_events",
         "type":"User",
         "site_admin":false
      },
      "committer":{
         "login":"rksm",
         "id":467450,
         "avatar_url":"https://gravatar.com/avatar/7e0fc9769fc4ec9b23b85da1639d5f31?d=https%3A%2F%2Fidenticons.github.com%2Ff5790be82a84c28f0e1fadaed4826b78.png&r=x",
         "gravatar_id":"7e0fc9769fc4ec9b23b85da1639d5f31",
         "url":"https://api.github.com/users/rksm",
         "html_url":"https://github.com/rksm",
         "followers_url":"https://api.github.com/users/rksm/followers",
         "following_url":"https://api.github.com/users/rksm/following{/other_user}",
         "gists_url":"https://api.github.com/users/rksm/gists{/gist_id}",
         "starred_url":"https://api.github.com/users/rksm/starred{/owner}{/repo}",
         "subscriptions_url":"https://api.github.com/users/rksm/subscriptions",
         "organizations_url":"https://api.github.com/users/rksm/orgs",
         "repos_url":"https://api.github.com/users/rksm/repos",
         "events_url":"https://api.github.com/users/rksm/events{/privacy}",
         "received_events_url":"https://api.github.com/users/rksm/received_events",
         "type":"User",
         "site_admin":false
      },
      "parents":[
         {
            "sha":"a06c6f68b196a6e72d16d585c41a49907a72fc6c",
            "url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/commits/a06c6f68b196a6e72d16d585c41a49907a72fc6c",
            "html_url":"https://github.com/LivelyKernel/LivelyKernel/commit/a06c6f68b196a6e72d16d585c41a49907a72fc6c"
         }
      ],
      "stats":{
         "total":68,
         "additions":64,
         "deletions":4
      },
      "files":[
         {
            "sha":"de7f069acbfbe51ceec99a62df20daffcbf93ec5",
            "filename":"core/lively/ide/codeeditor/Keyboard.js",
            "status":"modified",
            "additions":64,
            "deletions":4,
            "changes":68,
            "blob_url":"https://github.com/LivelyKernel/LivelyKernel/blob/3376e25424e5db8ab7b68d687f64e698320465f6/core/lively/ide/codeeditor/Keyboard.js",
            "raw_url":"https://github.com/LivelyKernel/LivelyKernel/raw/3376e25424e5db8ab7b68d687f64e698320465f6/core/lively/ide/codeeditor/Keyboard.js",
            "contents_url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/contents/core/lively/ide/codeeditor/Keyboard.js?ref=3376e25424e5db8ab7b68d687f64e698320465f6",
            "patch":"@@ -348,11 +348,64 @@ Object.subclass('lively.ide.CodeEditor.KeyboardShortcuts',\n                 multiSelectAction: \"forEach\",\n                 readOnly: true\n             }, {\n-                name: \"selectAllLikeThis\",\n-                bindKey: \"Ctrl-Shift-/\",\n+                name: 'moveCursorToScreenTop',\n+                bindKey: 'Alt-Ctrl-,'/*Alt-Ctrl-<*/,\n                 exec: function(ed) {\n-                    ed.pushEmacsMark && ed.pushEmacsMark(ed.getCursorPosition());\n-                    ed.findAll(ed.$morph.getTextRange()); },\n+                    var currentPos = ed.getCursorPosition(),\n+                        firstRow = ed.renderer.getFirstFullyVisibleRow(),\n+                        lastRow = ed.renderer.getLastFullyVisibleRow(),\n+                        middleRow = firstRow+Math.floor((lastRow - firstRow)/2),\n+                        newPos = currentPos;\n+                    if (currentPos.row <= firstRow) return;\n+                    if (currentPos.row <= middleRow) newPos.row = firstRow;\n+                    else if (currentPos.row <= lastRow) newPos.row = middleRow;\n+                    else newPos.row = lastRow;\n+                    ed.selection.moveCursorToPosition(newPos)\n+                },\n+                readOnly: true\n+            }, {\n+                name: 'moveCursorToScreenBottom',\n+                bindKey: 'Alt-Ctrl-.'/*Alt-Ctrl->*/,\n+                exec: function(ed) {\n+                    var currentPos = ed.getCursorPosition(),\n+                        firstRow = ed.renderer.getFirstFullyVisibleRow(),\n+                        lastRow = ed.renderer.getLastFullyVisibleRow(),\n+                        middleRow = firstRow+Math.floor((lastRow - firstRow)/2),\n+                        newPos = currentPos;\n+                    if (currentPos.row < firstRow) newPos.row = firstRow;\n+                    else if (currentPos.row < middleRow) newPos.row = middleRow;\n+                    else if (currentPos.row < lastRow) newPos.row = lastRow;\n+                    else return;\n+                    ed.selection.moveCursorToPosition(newPos);\n+                },\n+                readOnly: true\n+            }, {\n+                name: 'gotoNextParagraph',\n+                bindKey: 'Ctrl-Up',\n+                exec: function(ed) {\n+                    var pos = ed.getCursorPosition(), found = -1;\n+                    function isEmptyLine(line) { return /^\\s*$/.test(line); }\n+                    var lines = ed.session.getLines(pos.row, ed.session.getLength()), found = -1;\n+                    for (var i = 1; i < lines.length; i++) {\n+                        found = i;\n+                        if (!isEmptyLine(lines[i-1]) && isEmptyLine(lines[i])) break;\n+                    }\n+                    ed.selection.moveCursorToPosition({row: pos.row+found, column: 0});\n+                },\n+                readOnly: true\n+            }, {\n+                name: 'gotoPrevParagraph',\n+                bindKey: 'Ctrl-Down',\n+                exec: function(ed) {\n+                    function isEmptyLine(line) { return /^\\s*$/.test(line); }\n+                    var pos = ed.getCursorPosition(), found = -1,\n+                        lines = ed.session.getLines(0, pos.row);\n+                    for (var i = lines.length-2; i >= 0; i--) {\n+                        found = i;\n+                        if (!isEmptyLine(lines[i+1]) && isEmptyLine(lines[i])) break;\n+                    }\n+                    ed.selection.moveCursorToPosition({row: found, column: 0});\n+                },\n                 readOnly: true\n             }, {\n                 bindKey: {mac: \"©\"},\n@@ -413,6 +466,13 @@ Object.subclass('lively.ide.CodeEditor.KeyboardShortcuts',\n                 bindKey: \"Ctrl-Shift-,\",\n                 exec: function(ed) { ed.$morph.multiSelectPrev(); },\n                 readOnly: true\n+            }, {\n+                name: \"selectAllLikeThis\",\n+                bindKey: \"Ctrl-Shift-/\",\n+                exec: function(ed) {\n+                    ed.pushEmacsMark && ed.pushEmacsMark(ed.getCursorPosition());\n+                    ed.findAll(ed.$morph.getTextRange()); },\n+                readOnly: true\n             }]);\n     },\n "
         }
      ]
   },
   {
      "sha":"0bca47a3fd60a09db93a6dd49b77c8e547ad911f",
      "commit":{
         "author":{
            "name":"Robert Krahn",
            "email":"robert.krahn@gmail.com",
            "date":"2013-12-27T16:49:57Z"
         },
         "committer":{
            "name":"Robert Krahn",
            "email":"robert.krahn@gmail.com",
            "date":"2013-12-27T16:49:57Z"
         },
         "message":"Merge branch 'vwf-compat'\n\nConflicts:\n\tcore/lively/ChangeSets.js\n\tcore/lively/ModuleSystem.js\n\tcore/lively/persistence/BuildSpec.js",
         "tree":{
            "sha":"949006a45bbf19332686ed52d3755b00c165ae77",
            "url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/git/trees/949006a45bbf19332686ed52d3755b00c165ae77"
         },
         "url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/git/commits/0bca47a3fd60a09db93a6dd49b77c8e547ad911f",
         "comment_count":0
      },
      "url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/commits/0bca47a3fd60a09db93a6dd49b77c8e547ad911f",
      "html_url":"https://github.com/LivelyKernel/LivelyKernel/commit/0bca47a3fd60a09db93a6dd49b77c8e547ad911f",
      "comments_url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/commits/0bca47a3fd60a09db93a6dd49b77c8e547ad911f/comments",
      "author":{
         "login":"rksm",
         "id":467450,
         "avatar_url":"https://gravatar.com/avatar/7e0fc9769fc4ec9b23b85da1639d5f31?d=https%3A%2F%2Fidenticons.github.com%2Ff5790be82a84c28f0e1fadaed4826b78.png&r=x",
         "gravatar_id":"7e0fc9769fc4ec9b23b85da1639d5f31",
         "url":"https://api.github.com/users/rksm",
         "html_url":"https://github.com/rksm",
         "followers_url":"https://api.github.com/users/rksm/followers",
         "following_url":"https://api.github.com/users/rksm/following{/other_user}",
         "gists_url":"https://api.github.com/users/rksm/gists{/gist_id}",
         "starred_url":"https://api.github.com/users/rksm/starred{/owner}{/repo}",
         "subscriptions_url":"https://api.github.com/users/rksm/subscriptions",
         "organizations_url":"https://api.github.com/users/rksm/orgs",
         "repos_url":"https://api.github.com/users/rksm/repos",
         "events_url":"https://api.github.com/users/rksm/events{/privacy}",
         "received_events_url":"https://api.github.com/users/rksm/received_events",
         "type":"User",
         "site_admin":false
      },
      "committer":{
         "login":"rksm",
         "id":467450,
         "avatar_url":"https://gravatar.com/avatar/7e0fc9769fc4ec9b23b85da1639d5f31?d=https%3A%2F%2Fidenticons.github.com%2Ff5790be82a84c28f0e1fadaed4826b78.png&r=x",
         "gravatar_id":"7e0fc9769fc4ec9b23b85da1639d5f31",
         "url":"https://api.github.com/users/rksm",
         "html_url":"https://github.com/rksm",
         "followers_url":"https://api.github.com/users/rksm/followers",
         "following_url":"https://api.github.com/users/rksm/following{/other_user}",
         "gists_url":"https://api.github.com/users/rksm/gists{/gist_id}",
         "starred_url":"https://api.github.com/users/rksm/starred{/owner}{/repo}",
         "subscriptions_url":"https://api.github.com/users/rksm/subscriptions",
         "organizations_url":"https://api.github.com/users/rksm/orgs",
         "repos_url":"https://api.github.com/users/rksm/repos",
         "events_url":"https://api.github.com/users/rksm/events{/privacy}",
         "received_events_url":"https://api.github.com/users/rksm/received_events",
         "type":"User",
         "site_admin":false
      },
      "parents":[
         {
            "sha":"709cb5429776bdff24057bd635cd1875c4aca80c",
            "url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/commits/709cb5429776bdff24057bd635cd1875c4aca80c",
            "html_url":"https://github.com/LivelyKernel/LivelyKernel/commit/709cb5429776bdff24057bd635cd1875c4aca80c"
         },
         {
            "sha":"ce829c260e4cbf3fc1cebfe3172daa6719d7e8c1",
            "url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/commits/ce829c260e4cbf3fc1cebfe3172daa6719d7e8c1",
            "html_url":"https://github.com/LivelyKernel/LivelyKernel/commit/ce829c260e4cbf3fc1cebfe3172daa6719d7e8c1"
         }
      ],
      "stats":{
         "total":1037,
         "additions":564,
         "deletions":473
      },
      "files":[
         {
            "sha":"2a53a798b1469b21b7132c0a234f0a7ccf721c15",
            "filename":"core/lib/lively-libs-debug.js",
            "status":"modified",
            "additions":9,
            "deletions":9,
            "changes":18,
            "blob_url":"https://github.com/LivelyKernel/LivelyKernel/blob/0bca47a3fd60a09db93a6dd49b77c8e547ad911f/core/lib/lively-libs-debug.js",
            "raw_url":"https://github.com/LivelyKernel/LivelyKernel/raw/0bca47a3fd60a09db93a6dd49b77c8e547ad911f/core/lib/lively-libs-debug.js",
            "contents_url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/contents/core/lib/lively-libs-debug.js?ref=0bca47a3fd60a09db93a6dd49b77c8e547ad911f",
            "patch":"@@ -8929,16 +8929,16 @@ if ( typeof window === \"object\" && typeof window.document === \"object\" ) {\n \n // Module systems magic dance\n (function (definition) {\n-    // RequireJS\n-    if (typeof define == \"function\") {\n-        define(definition);\n-    // YUI3\n-    } else if (typeof YUI == \"function\") {\n-        YUI.add(\"es5\", definition);\n-    // CommonJS and <script>\n-    } else {\n+//     // RequireJS\n+//     if (typeof define == \"function\") {\n+//         define(definition);\n+//     // YUI3\n+//     } else if (typeof YUI == \"function\") {\n+//         YUI.add(\"es5\", definition);\n+//     // CommonJS and <script>\n+    // } else {\n         definition();\n-    }\n+    // }\n })(function () {\n \n /**"
         },
         {
            "sha":"6ca5f20e536c76cbfd5f4560fd08402af2663968",
            "filename":"core/lively/ChangeSets.js",
            "status":"modified",
            "additions":7,
            "deletions":3,
            "changes":10,
            "blob_url":"https://github.com/LivelyKernel/LivelyKernel/blob/0bca47a3fd60a09db93a6dd49b77c8e547ad911f/core/lively/ChangeSets.js",
            "raw_url":"https://github.com/LivelyKernel/LivelyKernel/raw/0bca47a3fd60a09db93a6dd49b77c8e547ad911f/core/lively/ChangeSets.js",
            "contents_url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/contents/core/lively/ChangeSets.js?ref=0bca47a3fd60a09db93a6dd49b77c8e547ad911f",
            "patch":"@@ -1,4 +1,4 @@\n-module('lively.ChangeSets').requires('lively.Traits', 'lively.persistence.BuildSpec').requiresLib({url: Config.codeBase + 'lib/jsdiff/jsdiff.js', loadTest: function() { return typeof JsDiff !== 'undefined'; }}).toRun(function() {\n+module('lively.ChangeSets').requires('lively.Traits', 'lively.persistence.BuildSpec', 'lively.morphic.MorphAddons'/*for lively.morphic.Panel*/).requiresLib({url: Config.codeBase + 'lib/jsdiff/jsdiff.js', loadTest: function() { return typeof JsDiff !== 'undefined'; }}).toRun(function() {\n \n Object.extend(Global, {\n \n@@ -3332,11 +3332,15 @@ alignSubmorphs: function alignSubmorphs() {\n }\n });\n \n-(function openChangesetsFlap() {\n+(function loadChangeSets() {\n+    if (!lively.Config.get(\"changesetsExperiment\")\n+     || !lively.LocalStorage.isAvailable()) return;\n+    var hasChangeSet = Global.localStorage.getItem(\"LivelyChangesets:\" + Global.location.pathname);\n+    if (hasChangeSet) ChangeSet.loadAndcheckVsSystem();\n     lively.whenLoaded(function(world) {\n         if (Config.changesetsExperiment)\n             lively.BuildSpec('ChangesetsFlap').createMorph().openInWorld();\n     });\n-})();\n+}).delay((Global.location && location.hostname === \"localhost\") ? 3 : 14);\n \n }) // end of module"
         },
         {
            "sha":"ed87c94cf587573bbc351afd6d8b07504b9629ba",
            "filename":"core/lively/Main.js",
            "status":"modified",
            "additions":18,
            "deletions":8,
            "changes":26,
            "blob_url":"https://github.com/LivelyKernel/LivelyKernel/blob/0bca47a3fd60a09db93a6dd49b77c8e547ad911f/core/lively/Main.js",
            "raw_url":"https://github.com/LivelyKernel/LivelyKernel/raw/0bca47a3fd60a09db93a6dd49b77c8e547ad911f/core/lively/Main.js",
            "contents_url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/contents/core/lively/Main.js?ref=0bca47a3fd60a09db93a6dd49b77c8e547ad911f",
            "patch":"@@ -43,6 +43,11 @@ Object.subclass('lively.Main.WorldDataAccessor',\n });\n \n Object.extend(lively.Main.WorldDataAccessor, {\n+\n+    fromScratch: function(doc) {\n+        return new lively.Main.WorldBuilder(doc);\n+    },\n+\n     forDoc: function(doc) {\n         return doc.xmlVersion ? this.forXMLDoc(doc) : this.forHTMLDoc(doc);\n     },\n@@ -61,13 +66,6 @@ Object.extend(lively.Main.WorldDataAccessor, {\n     }\n });\n \n-lively.Main.WorldDataAccessor.subclass('lively.Main.NewWorldData',\n-'accessing and creation', {\n-    getWorld: function() {\n-        return this.world ? this.world : this.world = new lively.morphic.World(this.getDoc());\n-    }\n-});\n-\n lively.Main.WorldDataAccessor.subclass('lively.Main.JSONMorphicData',\n 'initializing', {\n     initialize: function($super, doc, json) {\n@@ -93,6 +91,16 @@ lively.Main.WorldDataAccessor.subclass('lively.Main.JSONMorphicData',\n \n });\n \n+lively.Main.WorldDataAccessor.subclass('lively.Main.WorldBuilder',\n+'accessing and creation', {\n+    getWorld: function() {\n+        if (this.world) return this.world;\n+        var d = this.getDoc(),\n+            bounds = lively.morphic.World.prototype.windowBounds(d);\n+        return this.world = lively.morphic.World.createOn(d.body, bounds);\n+    }\n+});\n+\n // The loader defines what should happen after the bootstrap phase to get a\n // lively.morphic.World running\n Object.subclass('lively.Main.Loader',\n@@ -103,7 +111,9 @@ Object.subclass('lively.Main.Loader',\n     getDoc: function() { return this.doc },\n     getWorldData: function() {\n         if (!this.worldData) {\n-            this.worldData = lively.Main.WorldDataAccessor.forDoc(this.getDoc());\n+            this.worldData = lively.Main.WorldDataAccessor[\n+                    Config.get(\"manuallyCreateWorld\") ?\n+                        'fromScratch' : 'forDoc'](this.getDoc());\n         }\n         return this.worldData;\n     }"
         },
         {
            "sha":"ee4f884699de812955224521d1270b4154978249",
            "filename":"core/lively/ModuleSystem.js",
            "status":"modified",
            "additions":3,
            "deletions":7,
            "changes":10,
            "blob_url":"https://github.com/LivelyKernel/LivelyKernel/blob/0bca47a3fd60a09db93a6dd49b77c8e547ad911f/core/lively/ModuleSystem.js",
            "raw_url":"https://github.com/LivelyKernel/LivelyKernel/raw/0bca47a3fd60a09db93a6dd49b77c8e547ad911f/core/lively/ModuleSystem.js",
            "contents_url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/contents/core/lively/ModuleSystem.js?ref=0bca47a3fd60a09db93a6dd49b77c8e547ad911f",
            "patch":"@@ -636,11 +636,7 @@ Object.extend(lively.Module, {\n })(lively);\n \n (function testModuleLoad() {\n-    if (Config.changesetsExperiment\n-     && Global.localStorage\n-     && localStorage.getItem(\"LivelyChangesets:\" + location.pathname)) {\n-            require('lively.ChangeSets').toRun(function() {\n-                ChangeSet.loadAndcheckVsSystem(); })\n-    }\n+    // note that with slow network connections it is possible that the module load\n+    // test will fail although the modules will load eventually\n     lively.Module.checkModuleLoadStates();\n-}).delay((Global.location && location.hostname === \"localhost\") ? 3 : 14);\n+}).delay(10);"
         },
         {
            "sha":"8dbd05dd7bb87cf9d8d94932005b7e53fccdc9f5",
            "filename":"core/lively/Network.js",
            "status":"modified",
            "additions":18,
            "deletions":16,
            "changes":34,
            "blob_url":"https://github.com/LivelyKernel/LivelyKernel/blob/0bca47a3fd60a09db93a6dd49b77c8e547ad911f/core/lively/Network.js",
            "raw_url":"https://github.com/LivelyKernel/LivelyKernel/raw/0bca47a3fd60a09db93a6dd49b77c8e547ad911f/core/lively/Network.js",
            "contents_url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/contents/core/lively/Network.js?ref=0bca47a3fd60a09db93a6dd49b77c8e547ad911f",
            "patch":"@@ -1687,27 +1687,29 @@ Object.subclass('WebResource',\n \n     pvtProcessPropfindForSubElements: function(doc) {\n         if (!this.status.isSuccess()) {\n-            throw new Error('Cannot access subElements of ' + this.getURL());\n+            console.warn('Cannot access subElements of ' + this.getURL());\n+            this.subCollections = [];\n+            this.subDocuments = [];\n+        } else {\n+            this.pvtProcessPropfindResults(doc);\n         }\n-        this.pvtProcessPropfindResults(doc);\n     },\n \n     pvtProcessPropfindResults: function(doc) {\n         var result = [];\n-        if (this.status.isSuccess()) {\n-            var davNs = this.ensureDavXmlNs(doc);\n-            var nodes = new Query(\"/\" + davNs + \":multistatus/\" + davNs + \":response\").findAll(doc.documentElement);\n-            var urlQ = new Query(davNs + ':href');\n-            nodes.shift(); // remove first since it points to this WebResource\n-            for (var i = 0; i < nodes.length; i++) {\n-                var urlNode = urlQ.findFirst(nodes[i]),\n-                    url = urlNode.textContent || urlNode.text; // text is FIX for IE9+\n-                if (/!svn/.test(url)) continue;// ignore svn dirs\n-                var child = new WebResource(this.getURL().withPath(url)),\n-                    revNode = nodes[i].getElementsByTagName('version-name')[0];\n-                if (revNode) child.headRevision = Number(revNode.textContent);\n-                result.push(child);\n-            }\n+        if (!this.status.isSuccess()) return;\n+        var davNs = this.ensureDavXmlNs(doc),\n+            nodes = new Query(\"/\" + davNs + \":multistatus/\" + davNs + \":response\").findAll(doc.documentElement),\n+            urlQ = new Query(davNs + ':href');\n+        nodes.shift(); // remove first since it points to this WebResource\n+        for (var i = 0; i < nodes.length; i++) {\n+            var urlNode = urlQ.findFirst(nodes[i]),\n+                url = urlNode.textContent || urlNode.text; // text is FIX for IE9+\n+            if (/!svn/.test(url)) continue;// ignore svn dirs\n+            var child = new WebResource(this.getURL().withPath(url)),\n+                revNode = nodes[i].getElementsByTagName('version-name')[0];\n+            if (revNode) child.headRevision = Number(revNode.textContent);\n+            result.push(child);\n         }\n         this.subCollections = result.select(function(ea) { return ea.isCollection() });\n         this.subDocuments = result.select(function(ea) { return !ea.isCollection() });"
         },
         {
            "sha":"f2f89cd6dd96fcbf2db9b9f8359484dc5794ebd6",
            "filename":"core/lively/ast/acorn.js",
            "status":"modified",
            "additions":33,
            "deletions":16,
            "changes":49,
            "blob_url":"https://github.com/LivelyKernel/LivelyKernel/blob/0bca47a3fd60a09db93a6dd49b77c8e547ad911f/core/lively/ast/acorn.js",
            "raw_url":"https://github.com/LivelyKernel/LivelyKernel/raw/0bca47a3fd60a09db93a6dd49b77c8e547ad911f/core/lively/ast/acorn.js",
            "contents_url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/contents/core/lively/ast/acorn.js?ref=0bca47a3fd60a09db93a6dd49b77c8e547ad911f",
            "patch":"@@ -1,23 +1,40 @@\n // FIXME rk 2013-06-10\n // we need the right order of libs to be loaded, this should eventually be\n // supported by lively.Module>>requireLib\n-var allDependenciesLoaded = false;\n-var dependencies = [\n-    {url: Config.codeBase + 'lib/acorn/acorn.js', loadTest: function() { return typeof acorn !== 'undefined'; }},\n-    {url: Config.codeBase + 'lib/acorn/acorn-loose.js', loadTest: function() { return typeof acorn !== 'undefined' && typeof acorn.parse_dammit !== 'undefined'; }},\n-    {url: Config.codeBase + 'lib/acorn/acorn-walk.js', loadTest: function() { return typeof acorn !== 'undefined' && typeof acorn.walk !== 'undefined'; }}\n-];\n-\n-dependencies.doAndContinue(function(next, lib) {\n-    JSLoader.loadJs(lib.url);\n-    var interval = Global.setInterval(function() {\n-        if (!lib.loadTest()) return;\n-        Global.clearInterval(interval);\n-        next();\n-    }, 50);\n-}, function() { allDependenciesLoaded = true; });\n+// also: when requirejs is present the acorn library files try to use it for\n+// loading and don't expose the acorn global. the current solution for this\n+// right now is to support both schemes here\n+var acornLibsLoaded = false;\n+(function loadAcornLibs() {\n+    if (typeof requirejs !== \"undefined\") loadAcornWithRequireJS()\n+    else loadAcornManually();\n+    // -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-\n+    function loadAcornManually() {\n+        var dependencies = [\n+            {url: Config.codeBase + 'lib/acorn/acorn.js',       loadTest: function() { return typeof acorn !== 'undefined'; }},\n+            {url: Config.codeBase + 'lib/acorn/acorn-loose.js', loadTest: function() { return typeof acorn !== 'undefined' && typeof acorn.parse_dammit !== 'undefined'; }},\n+            {url: Config.codeBase + 'lib/acorn/acorn-walk.js',  loadTest: function() { return typeof acorn !== 'undefined' && typeof acorn.walk !== 'undefined'; }}\n+        ];\n+        dependencies.doAndContinue(function(next, lib) {\n+            JSLoader.loadJs(lib.url);\n+            var interval = Global.setInterval(function() {\n+                if (!lib.loadTest()) return;\n+                Global.clearInterval(interval);\n+                next();\n+            }, 50);\n+        }, function() { acornLibsLoaded = true; });\n+    }\n+    function loadAcornWithRequireJS() {\n+        // FIXME how to access requirejs' require cleanly?\n+        requirejs.s.contexts._.require(['core/lib/acorn/acorn.js', 'core/lib/acorn/acorn-loose.js', 'core/lib/acorn/acorn-walk.js'], function(acorn, acornLoose, acornWalk) {\n+            Global.acorn = acorn;\n+            Object.extend(acorn, acornLoose);\n+            acorn.walk = acornWalk;\n+            acornLibsLoaded = true; });\n+    }\n+})();\n \n-module(\"lively.ast.acorn\").requires(\"lively.ide.SourceDatabase\").requiresLib({loadTest: function() { return !!allDependenciesLoaded; }}).toRun(function() {\n+module(\"lively.ast.acorn\").requires(\"lively.ide.SourceDatabase\").requiresLib({loadTest: function() { return !!acornLibsLoaded; }}).toRun(function() {\n \n (function extendAcorn() {\n "
         },
         {
            "sha":"17378496d8f604856212e2cc5165de00e3e3b298",
            "filename":"core/lively/bootstrap.js",
            "status":"modified",
            "additions":13,
            "deletions":12,
            "changes":25,
            "blob_url":"https://github.com/LivelyKernel/LivelyKernel/blob/0bca47a3fd60a09db93a6dd49b77c8e547ad911f/core/lively/bootstrap.js",
            "raw_url":"https://github.com/LivelyKernel/LivelyKernel/raw/0bca47a3fd60a09db93a6dd49b77c8e547ad911f/core/lively/bootstrap.js",
            "contents_url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/contents/core/lively/bootstrap.js?ref=0bca47a3fd60a09db93a6dd49b77c8e547ad911f",
            "patch":"@@ -956,21 +956,18 @@\n         loadMain: function(doc, startupFunc) {\n             LoadingScreen.add('Loading');\n             var bootstrapModules = [\n+                'lively.ChangeSets',\n                 'lively.lang.Closure',\n                 'lively.lang.UUID',\n                 'lively.bindings',\n-                'lively.Main'\n-            ];\n-            require(bootstrapModules).toRun(function() {\n+                'lively.Main'];\n+            lively.require(bootstrapModules).toRun(function() {\n                 lively.Config.loadUserConfigModule();\n                 var loader = lively.Main.getLoader(doc);\n-                lively.bindings.connect(loader, 'finishLoading',\n-                                        LoadingScreen, 'remove');\n-                if (startupFunc) {\n-                    loader.startupFunc = startupFunc;\n-                    lively.bindings.connect(loader, 'finishLoading',\n-                                            loader, 'startupFunc');\n-                }\n+                lively.whenLoaded(function() {\n+                    LoadingScreen.remove();\n+                    startupFunc && startupFunc();\n+                });\n                 loader.systemStart(doc);\n             });\n         },\n@@ -1183,7 +1180,8 @@\n     if (browserDetector.isNodejs()) {\n         domLoaded = true;\n     } else {\n-        domLoaded = false;\n+        domLoaded = document.readyState === \"complete\"\n+                 || document.readyState == \"loaded\";\n         Global.addEventListener('DOMContentLoaded', function() { domLoaded = true; }, true);\n     }\n \n@@ -1234,7 +1232,7 @@\n                 loader.systemStart(document);\n                 console.log('bootstrap done');\n             } + ')');\n-            Global.require(bootstrapModules).toRun(finished);\n+            lively.require(bootstrapModules).toRun(finished);\n         });\n         module.exports.Global = Global;\n     }\n@@ -1368,6 +1366,9 @@\n     // let it run\n     // -=-=-=-=-=-=-=-\n     (function startWorld(startupFunc) {\n+        // don't load twice\n+        if (lively.wasStarted) return;\n+        lively.wasStarted = true;\n         if (browserDetector.isNodejs()) {\n             initNodejsBootstrap();\n         } else if (lively.ApplicationCache.isActive) {"
         },
         {
            "sha":"99ec0000ffb329b976aa8cd4b0930256b4a7ed43",
            "filename":"core/lively/defaultconfig.js",
            "status":"modified",
            "additions":3,
            "deletions":1,
            "changes":4,
            "blob_url":"https://github.com/LivelyKernel/LivelyKernel/blob/0bca47a3fd60a09db93a6dd49b77c8e547ad911f/core/lively/defaultconfig.js",
            "raw_url":"https://github.com/LivelyKernel/LivelyKernel/raw/0bca47a3fd60a09db93a6dd49b77c8e547ad911f/core/lively/defaultconfig.js",
            "contents_url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/contents/core/lively/defaultconfig.js?ref=0bca47a3fd60a09db93a6dd49b77c8e547ad911f",
            "patch":"@@ -363,7 +363,9 @@ Config.addOptions(\n     [\"ignoreLoadingErrors\", true],\n     [\"ignoreMissingModules\", false],\n     [\"keepSerializerIds\", false],\n-    [\"createWorldPreview\", true, \"Whether to store an HTML document showing a static version of the serialized world.\"]\n+    [\"createWorldPreview\", true, \"Whether to store an HTML document showing a static version of the serialized world.\"],\n+    [\"manuallyCreateWorld\", false, \"Loads up Lively and creates a complete new world from scratch instead of using a serialized one.\"],\n+    [\"removeDOMContentBeforeWorldLoad\", true, \"Whether to remove all the DOM child nodes of the DOM element that is used to display the World.\"]\n ],\n \n 'lively.bindings', ["
         },
         {
            "sha":"10f66f153ad8d513d503b4ed506815044bbe47d5",
            "filename":"core/lively/morphic/Core.js",
            "status":"modified",
            "additions":11,
            "deletions":5,
            "changes":16,
            "blob_url":"https://github.com/LivelyKernel/LivelyKernel/blob/0bca47a3fd60a09db93a6dd49b77c8e547ad911f/core/lively/morphic/Core.js",
            "raw_url":"https://github.com/LivelyKernel/LivelyKernel/raw/0bca47a3fd60a09db93a6dd49b77c8e547ad911f/core/lively/morphic/Core.js",
            "contents_url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/contents/core/lively/morphic/Core.js?ref=0bca47a3fd60a09db93a6dd49b77c8e547ad911f",
            "patch":"@@ -664,10 +664,9 @@ lively.morphic.Morph.subclass('lively.morphic.World',\n 'accessing', {\n     world: function() { return this },\n     firstHand: function() { return this.hands && this.hands[0] },\n-    windowBounds:  function () {\n+    windowBounds: function(optWorldDOMNode) {\n         if (this.cachedWindowBounds) return this.cachedWindowBounds;\n-\n-        var canvas = this.renderContext().getMorphNode(),\n+        var canvas = optWorldDOMNode || this.renderContext().getMorphNode(),\n             topmost = document.documentElement,\n             body = document.body,\n             scale = 1 / this.getScale(),\n@@ -695,7 +694,9 @@ lively.morphic.Morph.subclass('lively.morphic.World',\n     },\n \n     displayOnElement: function(el) {\n-        this.renderContext().domInterface.removeAllChildrenOf(el);\n+        if (lively.Config.get(\"removeDOMContentBeforeWorldLoad\")) {\n+            this.renderContext().domInterface.removeAllChildrenOf(el);\n+        }\n         this.renderContext().setParentNode(el);\n         this.renderContextDispatch('append');\n         this.withAllSubmorphsDo(function(ea) {\n@@ -765,6 +766,11 @@ Object.extend(lively.morphic.World, {\n \n     current: function() { return this.currentWorld },\n \n+    registerWorld: function(world) {\n+        // make it THE world\n+        return this.currentWorld = world;\n+    },\n+\n     createOn: function(domElement, bounds) {\n         var world = new this();\n         bounds = bounds || new Rectangle(0,0,400,400);\n@@ -772,7 +778,7 @@ Object.extend(lively.morphic.World, {\n         world.displayOnElement(domElement)\n         world.applyStyle({fill: Color.gray.lighter()})\n         world.addHandMorph();\n-        this.currentWorld = world;\n+        this.registerWorld(world);\n         return world;\n     }\n });"
         },
         {
            "sha":"c5827a14f575f2d82e41943f18c1caee2fc19df8",
            "filename":"core/lively/morphic/Serialization.js",
            "status":"modified",
            "additions":1,
            "deletions":1,
            "changes":2,
            "blob_url":"https://github.com/LivelyKernel/LivelyKernel/blob/0bca47a3fd60a09db93a6dd49b77c8e547ad911f/core/lively/morphic/Serialization.js",
            "raw_url":"https://github.com/LivelyKernel/LivelyKernel/raw/0bca47a3fd60a09db93a6dd49b77c8e547ad911f/core/lively/morphic/Serialization.js",
            "contents_url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/contents/core/lively/morphic/Serialization.js?ref=0bca47a3fd60a09db93a6dd49b77c8e547ad911f",
            "patch":"@@ -381,7 +381,7 @@ Object.extend(lively.morphic.World, {\n             isDoc = !domElementOrDocument.ownerDocument;\n         if (isDoc) world.displayOnDocument(domElementOrDocument);\n         else world.displayOnElement(domElementOrDocument);\n-        this.currentWorld = world;\n+        this.registerWorld(world)\n         return world;\n     },\n     fromJSO: function(jso) {"
         },
         {
            "sha":"935f694c22829d147de8259a6499e23a5def2063",
            "filename":"core/lively/persistence/BuildSpec.js",
            "status":"modified",
            "additions":3,
            "deletions":395,
            "changes":398,
            "blob_url":"https://github.com/LivelyKernel/LivelyKernel/blob/0bca47a3fd60a09db93a6dd49b77c8e547ad911f/core/lively/persistence/BuildSpec.js",
            "raw_url":"https://github.com/LivelyKernel/LivelyKernel/raw/0bca47a3fd60a09db93a6dd49b77c8e547ad911f/core/lively/persistence/BuildSpec.js",
            "contents_url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/contents/core/lively/persistence/BuildSpec.js?ref=0bca47a3fd60a09db93a6dd49b77c8e547ad911f",
            "patch":"@@ -1,4 +1,4 @@\n-module('lively.persistence.BuildSpec').requires(\"lively.morphic.Widgets\", \"lively.morphic.Serialization\", \"lively.morphic.AdditionalMorphs\").toRun(function() {\n+module('lively.persistence.BuildSpec').requires(\"lively.morphic.Widgets\", \"lively.morphic.Serialization\", \"lively.morphic.AdditionalMorphs\", \"lively.morphic.Lists\").toRun(function() {\n \n Object.subclass('lively.persistence.SpecObject',\n 'properties', {\n@@ -335,401 +335,9 @@ Object.extend(lively.persistence.BuildSpec, {\n     Registry: new lively.persistence.SpecObjectRegistry()\n });\n \n-lively.morphic.Morph.addMethods(\n-'UI builder', {\n-\n-    buildSpecProperties: {\n-        name: {},\n-        doNotSerialize: {defaultValue: [], getter: function(morph, val) { if (!morph.hasOwnProperty(\"doNotSerialize\")) return []; return val && val.reject(function(ea) { return !Object.isString(ea) || ea.startsWith('$$'); }) }},\n-        doNotCopyProperties: {defaultValue: [], getter: function(morph, val) { if (!morph.hasOwnProperty(\"doNotCopyProperties\")) return []; return val && val.reject(function(ea) { return !Object.isString(ea) || ea.startsWith('$$'); }) }},\n-        grabbingEnabled: {defaultValue: undefined},\n-        draggingEnabled: {defaultValue: undefined},\n-        droppingEnabled: {defaultValue: undefined},\n-        halosEnabled: {defaultValue: true},\n-        _ClipMode: {defaultValue: 'visible'},\n-        _StyleSheet: {getter: function(morph, val) { return !val || Object.isString(val) ? val : val.getText(); }},\n-        _StyleClassNames: {},\n-        _Position: {defaultValue: lively.pt(0.0,0.0)},\n-        _Extent: {getter: function(morph) { return morph.getExtent(); }},\n-        _Fill: {defaultValue: null, getter: function(morph) { return morph.getFill(); }},\n-        _BorderColor: {defaultValue: Color.rgb(0,0,0), getter: function(morph) { return morph.getBorderColor(); }},\n-        _BorderWidth: {defaultValue: 0, getter: function(morph) { return morph.getBorderWidth(); }},\n-        _BorderStyle: {defaultValue: 'solid', getter: function(morph) { return morph.getBorderStyle(); }},\n-        _BorderRadius: {defaultValue: 0, getter: function(morph) { return morph.getBorderRadius(); }},\n-        _Opacity: {defaultValue: 1, getter: function(morph) { return morph.getOpacity(); }},\n-        _Rotation: {defaultValue: 0},\n-        _Scale: {defaultValue: 1},\n-        // excludes:\n-        submorphs: {exclude: true},\n-        showsHalos: {exclude: true},\n-        scripts: {exclude: true},\n-        id: {exclude: true},\n-        shape: {exclude: true},\n-        registeredForMouseEvents: {exclude: true},\n-        partsBinMetaInfo: {exclude: true},\n-        eventHandler: {exclude: true},\n-        derivationIds: {exclude: true},\n-        partTests: {exclude: true},\n-        moved: {exclude: true},\n-        _renderContext: {exclude: true},\n-        _isRendered: {exclude: true},\n-        owner: {exclude: true},\n-        cachedBounds: {exclude: true},\n-        isBeingDragged: {exclude: true},\n-        halos: {exclude: true},\n-        priorExtent: {exclude: true},\n-        distanceToDragEvent: {exclude: true},\n-        prevScroll: {exclude: true},\n-        _PreviousBorderWidth: {exclude: true},\n-        attributeConnections: {exclude: true},\n-        isLockOwner: {exclude: true},\n-        isInLayoutCycle: {exclude: true},\n-        modalMorph: {exclude: true},\n-        currentMenu: {exclude: true},\n-        layout: {\n-            defaultValue: {},\n-            getter: function(morph, val) {\n-                // FIXME this code should go into the layouter!\n-                var result = {};\n-                if (!val) return result;\n-                if (Object.isString(val)) { return val; }\n-                    Properties.forEachOwn(val, function(name, prop) {\n-                    if (name === \"layouter\" && prop.constructor) {\n-                        result.type = prop.constructor.type;\n-                        result.borderSize = prop.borderSize;\n-                        result.spacing = prop.spacing;\n-                        return;\n-                    }\n-                    result[name] = prop;\n-                });\n-                return result;\n-            },\n-            recreate: function(instance, spec) {\n-                var layout = instance.layout = {};\n-                if (!spec.layout) return;\n-                var layouterKlassName = Object.isString(spec.layout) ? spec.layout : spec.layout.type;\n-                if (layouterKlassName) {\n-                    var layouterKlass = lively.lookup(layouterKlassName);\n-                    layout.layouter = new layouterKlass();\n-                    layout.layouter.spacing = spec.layout.spacing;\n-                    layout.layouter.borderSize = spec.layout.borderSize;\n-                }\n-                var excludes = ['type', 'borderSize', 'spacing']\n-                Properties.forEachOwn(spec.layout, function(name, prop) {\n-                    if (!excludes.include(name)) layout[name] = prop; });\n-            }\n-        }\n-    },\n-\n-    getBuildSpecProperties: function(rawProps) {\n-        rawProps = rawProps || Object.mergePropertyInHierarchy(this, \"buildSpecProperties\");\n-        var props = Object.keys(rawProps).groupBy(function(key) {\n-                return rawProps[key].exclude ? 'excludes' : 'includes'; }),\n-            scripts = Functions.own(this).select(function(sel) {\n-                return this[sel].hasLivelyClosure; }, this),\n-            ownProps = Properties.own(this)\n-                       .withoutAll(props.excludes)\n-                       .reject(function(key) { return key.startsWith('$$'); });\n-        return props.includes.concat(ownProps).concat(scripts).uniq();\n-    },\n-\n-    buildSpec: function() {\n-        return lively.persistence.SpecObject.fromMorph(this);\n-    },\n-\n-    onFromBuildSpecCreated: Functions.Null\n-});\n-\n-lively.morphic.List.addMethods(\n-'UI builder', {\n-    buildSpecProperties: {\n-        itemList: {defaultValue: []},\n-        selectedIndexes: {defaultValue: []}\n-    },\n-    onFromBuildSpecCreated: function($super) {\n-        $super();\n-        this.setList(this.itemList || []);\n-    }\n-});\n-\n-lively.morphic.OldList.addMethods(\n-'UI builder', {\n-    buildSpecProperties: {\n-        itemList: {defaultValue: []}\n-    },\n-    onFromBuildSpecCreated: function($super) {\n-        $super();\n-        this.setList(this.itemList || []);\n-    }\n-});\n-\n-\n-lively.morphic.Text.addMethods(\n-'UI builder', {\n \n-    buildSpecProperties: {\n-        textString: {\n-            defaultValue: '',\n-            getter: function(morph, val) { return val || '' },\n-            recreate: function(instance, spec) {\n-                instance.textString = spec.textString;\n-                // important: emphasis after textString!\n-                if (spec.emphasis) instance.emphasizeRanges(spec.emphasis);\n-            }\n-        },\n-        emphasis: {\n-            getter: function(morph, val) {\n-                var styles = morph.getChunkStyles(),\n-                    ranges = morph.getChunkRanges();\n-                return ranges.collect(function(range, i) {\n-                        return [range[0], range[1], styles[i].asSpec()]; });\n-            },\n-            recreate: function(instance, spec) { /*see textString*/ }\n-        },\n-        isLabel: {defaultValue: false, recreate: function(instance, spec) { if (spec.isLabel) instance.beLabel(); }},\n-        _FontSize: {defaultValue: 10},\n-        fixedWidth: {defaultValue: false},\n-        fixedHeight: {defaultValue: false},\n-        allowsInput: {defaultValue: true},\n-        _FontFamily: {defaultValue: 'Arial'},\n-        _MaxTextWidth: {defaultValue: null},\n-        _MaxTextHeight: {defaultValue: null},\n-        textColor: {defaultValue: Color.rgb(0,0,0)},\n-        _Padding: {defaultValue: lively.Rectangle.inset(0)},\n-        _WhiteSpaceHandling: {defaultValue: \"pre-wrap\"},\n-        _MinTextWidth: {defaultValue: null},\n-        _MinTextHeight: {defaultValue: null},\n-        _WordBreak: {defaultValue: 'normal'},\n-        // excludes:\n-        cachedTextString: {exclude: true},\n-        savedTextString: {exclude: true},\n-        charsReplaced: {exclude: true},\n-        charsTyped: {exclude: true},\n-        lastFindLoc: {exclude: true},\n-        parseErrors: {exclude: true},\n-        textChunks: {exclude: true},\n-        priorSelectionRange: {exclude: true},\n-        previousSelection: {exclude: true},\n-        undoSelectionRange: {exclude: true}\n-    }\n-\n-});\n-\n-(function setupCodeEditor() {\n-    require('lively.ide.CodeEditor').toRun(function() {\n-        lively.morphic.CodeEditor.addMethods(\n-            'UI builder', {\n-                buildSpecProperties: {\n-                    textString: {defaultValue: '', getter: function(morph) { return morph.textString }},\n-                    theme: {\n-                        defaultValue: 'chrome',\n-                        getter: function(morph) { return morph.getTheme(); },\n-                        recreate: function(morph, spec) { morph.setTheme(spec.theme); }\n-                    },\n-                    textMode: {\n-                        defaultValue: 'text',\n-                        getter: function(morph) { return morph.getTextMode(); },\n-                        recreate: function(morph, spec) { morph.setTextMode(spec.textMode); }\n-                    },\n-                    // excludes\n-                    _isFocused: {exclude: true},\n-                    savedTextString: {exclude: true},\n-                    aceEditor: {exclude: true}\n-                }\n-            });\n-    });\n+(function loadBuildSpecMorphExtensions() {\n+    module('lively.persistence.BuildSpecMorphExtensions').load();\n })();\n \n-lively.morphic.Button.addMethods(\n-'UI builder', {\n-    buildSpecProperties: {\n-        submorphs: {\n-            exclude: true,\n-            filter: function(morph, submorphs) { return submorphs.without(morph.label); }\n-        },\n-        isActive: {defaultValue: true},\n-        label: {\n-            defaultValue: '',\n-            getter: function(morph, val) { return val.textString || ''; },\n-            recreate: function(instance, spec) { instance.ensureLabel(spec.label); }\n-        },\n-        style: {defaultValue: lively.morphic.Button.prototype.style}\n-    }\n-});\n-\n-lively.morphic.Window.addMethods(\n-'UI builder', {\n-    buildSpecProperties: {\n-        submorphs: {\n-            exclude: true,\n-            filter: function(morph, submorphs) {\n-                var handles = [morph.reframeHandle, morph.bottomReframeHandle, morph.rightReframeHandle];\n-                return submorphs.withoutAll(handles).without(morph.titleBar);\n-            }\n-        },\n-        titleBar: {\n-            getter: function(morph, val) { return val ? val.getTitle() : ''; },\n-            recreate: function(instance, spec) { instance.titleBar = instance.makeTitleBar(spec.titleBar, instance.getExtent().x); }\n-        },\n-        grabbingEnabled: {defaultValue: false},\n-        reframeHandle: {exclude: true},\n-        bottomReframeHandle: {exclude: true},\n-        rightReframeHandle: {exclude: true},\n-        targetMorph: {exclude: true}\n-    },\n-\n-    onFromBuildSpecCreated: function($super) {\n-        $super();\n-        this.makeReframeHandles();\n-        this.addMorph(this.titleBar);\n-        this.targetMorph = this.submorphs[0];\n-    }\n-\n-});\n-\n-\n-lively.morphic.MorphList.addMethods(\n-'buildspec', {\n-    onFromBuildSpecCreated: function() {\n-        this.setList(this.itemList || []);\n-    },\n-    buildSpecProperties: {\n-        itemList: {}\n-    }\n-});\n-\n-lively.morphic.Tree.addMethods(\n-'buildSpec', {\n-    buildSpecProperties: {\n-        childNodes: {exclude: true},\n-        icon: {exclude: true},\n-        isInLayoutCycle: false,\n-        item: {exclude: true},\n-        label: {exclude: true},\n-        node: {exclude: true}\n-    },\n-\n-    onBuildSpecCreated: function(buildSpec) {\n-        if (this.item && Object.isFunction(this.item.serializeExpr)) {\n-            buildSpec.item = item;\n-        }\n-    },\n-\n-    onFromBuildSpecCreated: function() {\n-        this.initializeLayout();\n-        this.disableDragging();\n-        this.setItem(this.item || {name: \"tree with no item\"});\n-    }\n-});\n-lively.morphic.Image.addMethods(\n-'buildSpec', {\n-    buildSpecProperties: {\n-        url: {getter: function(morph) { return morph.getImageURL(); }},\n-        useNativeExtent: {defaultValue: false}\n-    },\n-\n-    onFromBuildSpecCreated: function() {\n-        this.setImageURL(this.url, this.useNativeExtent);\n-    }\n-});\n-\n-Object.extend(lively.morphic.Morph, {\n-    fromSpec: function(object) {\n-        return lively.persistence.SpecObject.fromPlainObject(object).createMorph();\n-    },\n-\n-    fromSpecString: function(string) {\n-        return lively.persistence.SpecObject.fromString(object).createMorph();\n-    }\n-});\n-\n-lively.morphic.TabBar.addMethods(\n-'UI builder', {\n-    buildSpecProperties: {\n-        tabContainer: {exclude: true},\n-        tabs: {exclude: true}\n-    },\n-    onFromBuildSpecCreated: function($super) {\n-        $super();\n-        this.tabContainer = this.owner;\n-        this.tabs = this.submorphs.clone();\n-    }\n-});\n-lively.morphic.TabContainer.addMethods(\n-'UI builder', {\n-    buildSpecProperties: {\n-        tabBarStrategy: {\n-            getter: function(morph, val) { return morph.tabBarStrategy.constructor.type; },\n-            recreate: function(instance, spec) { instance.tabBarStrategy = new (lively.lookup(spec.tabBarStrategy))(); }\n-        }\n-    },\n-    onFromBuildSpecCreated: function($super) {\n-        $super();\n-        this.tabBar = this.submorphs.detect(function(ea) { return ea.isTabBar; });\n-    }\n-});\n-lively.morphic.Tab.addMethods(\n-'UI builder', {\n-    buildSpecProperties: {\n-        label: {\n-            defaultValue: '',\n-            getter: function(morph, val) { return val.textString || ''; },\n-            exclude: true\n-        },\n-        pane: { // index of the pane in tabContainer.submorphs\n-            defaultValue: -1,\n-            getter: function(morph, val) { \n-                return morph.tabContainer.submorphs.indexOf(val); }\n-        },\n-        tabBar: {exclude: true},\n-        tabContainer: {exclude: true}\n-    },\n-    onFromBuildSpecCreated: function($super) {\n-        $super();\n-        this.tabContainer = this.ownerChain().detect(function(ea) { return ea.isTabContainer; });\n-        this.pane = this.tabContainer.submorphs[this.pane];\n-        this.tabBar = this.tabContainer.tabBar\n-        this.initializeLabel(this.label); \n-    }\n-});\n-lively.morphic.TabPane.addMethods(\n-'UI builder', {\n-    buildSpecProperties: {\n-        tab: { // index of the tab in tabBar.submorphs\n-            defaultValue: -1,\n-            getter: function(morph, val) { return morph.tabBar.submorphs.indexOf(val); }\n-        },\n-        tabContainer: {exclude: true},\n-        tabBar: {exclude: true}\n-    },\n-    onFromBuildSpecCreated: function($super) {\n-        $super();\n-        this.tabContainer = this.ownerChain().detect(function(ea) { return ea.isTabContainer; })\n-        this.tabBar = this.tabContainer.getTabBar();\n-        this.tab = this.tabBar.submorphs[this.tab];\n-    }\n-});\n-lively.morphic.Slider.addMethods(\n-'UI builder', {\n-    onFromBuildSpecCreated: function($super) {\n-        $super();\n-        this.sliderKnob = this.submorphs.detect(function(ea) { return ea.isSliderKnob; });\n-    }\n-});\n-lively.morphic.SliderKnob.addMethods(\n-'UI builder', {\n-    onFromBuildSpecCreated: function($super) {\n-        $super();\n-        this.slider = this.ownerChain().detect(function(ea) { return ea.isSlider; });\n-    }\n-});\n-\n-lively.morphic.HorizontalDivider.addMethods(\n-'buildSpec', {\n-    buildSpecProperties: {\n-        scalingAbove: {defaultValue: []},\n-        scalingBelow: {defaultValue: []}\n-    }\n-});\n-\n }) // end of moduled of module"
         },
         {
            "sha":"a9e929c02dc45dcd385b2c02fa784e7e249053f6",
            "filename":"core/lively/persistence/BuildSpecMorphExtensions.js",
            "status":"added",
            "additions":399,
            "deletions":0,
            "changes":399,
            "blob_url":"https://github.com/LivelyKernel/LivelyKernel/blob/0bca47a3fd60a09db93a6dd49b77c8e547ad911f/core/lively/persistence/BuildSpecMorphExtensions.js",
            "raw_url":"https://github.com/LivelyKernel/LivelyKernel/raw/0bca47a3fd60a09db93a6dd49b77c8e547ad911f/core/lively/persistence/BuildSpecMorphExtensions.js",
            "contents_url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/contents/core/lively…e/BuildSpecMorphExtensions.js?ref=0bca47a3fd60a09db93a6dd49b77c8e547ad911f",
            "patch":"@@ -0,0 +1,399 @@\n+module('lively.persistence.BuildSpecMorphExtensions').requires(\"lively.morphic.Widgets\", \"lively.morphic.Serialization\", \"lively.morphic.AdditionalMorphs\", \"lively.morphic.Lists\").toRun(function() {\n+\n+lively.morphic.Morph.addMethods(\n+'UI builder', {\n+\n+    buildSpecProperties: {\n+        name: {},\n+        doNotSerialize: {defaultValue: [], getter: function(morph, val) { if (!morph.hasOwnProperty(\"doNotSerialize\")) return []; return val && val.reject(function(ea) { return !Object.isString(ea) || ea.startsWith('$$'); }) }},\n+        doNotCopyProperties: {defaultValue: [], getter: function(morph, val) { if (!morph.hasOwnProperty(\"doNotCopyProperties\")) return []; return val && val.reject(function(ea) { return !Object.isString(ea) || ea.startsWith('$$'); }) }},        grabbingEnabled: {defaultValue: undefined},\n+        draggingEnabled: {defaultValue: undefined},\n+        droppingEnabled: {defaultValue: undefined},\n+        halosEnabled: {defaultValue: true},\n+        _ClipMode: {defaultValue: 'visible'},\n+        _StyleSheet: {getter: function(morph, val) { return !val || Object.isString(val) ? val : val.getText(); }},\n+        _StyleClassNames: {},\n+        _Position: {defaultValue: lively.pt(0.0,0.0)},\n+        _Extent: {getter: function(morph) { return morph.getExtent(); }},\n+        _Fill: {defaultValue: null, getter: function(morph) { return morph.getFill(); }},\n+        _BorderColor: {defaultValue: Color.rgb(0,0,0), getter: function(morph) { return morph.getBorderColor(); }},\n+        _BorderWidth: {defaultValue: 0, getter: function(morph) { return morph.getBorderWidth(); }},\n+        _BorderStyle: {defaultValue: 'solid', getter: function(morph) { return morph.getBorderStyle(); }},\n+        _BorderRadius: {defaultValue: 0, getter: function(morph) { return morph.getBorderRadius(); }},\n+        _Opacity: {defaultValue: 1, getter: function(morph) { return morph.getOpacity(); }},\n+        _Rotation: {defaultValue: 0},\n+        _Scale: {defaultValue: 1},\n+        // excludes:\n+        submorphs: {exclude: true},\n+        showsHalos: {exclude: true},\n+        scripts: {exclude: true},\n+        id: {exclude: true},\n+        shape: {exclude: true},\n+        registeredForMouseEvents: {exclude: true},\n+        partsBinMetaInfo: {exclude: true},\n+        eventHandler: {exclude: true},\n+        derivationIds: {exclude: true},\n+        partTests: {exclude: true},\n+        moved: {exclude: true},\n+        _renderContext: {exclude: true},\n+        _isRendered: {exclude: true},\n+        owner: {exclude: true},\n+        cachedBounds: {exclude: true},\n+        isBeingDragged: {exclude: true},\n+        halos: {exclude: true},\n+        priorExtent: {exclude: true},\n+        distanceToDragEvent: {exclude: true},\n+        prevScroll: {exclude: true},\n+        _PreviousBorderWidth: {exclude: true},\n+        attributeConnections: {exclude: true},\n+        isLockOwner: {exclude: true},\n+        isInLayoutCycle: {exclude: true},\n+        modalMorph: {exclude: true},\n+        currentMenu: {exclude: true},\n+        layout: {\n+            defaultValue: {},\n+            getter: function(morph, val) {\n+                // FIXME this code should go into the layouter!\n+                var result = {};\n+                if (!val) return result;\n+                if (Object.isString(val)) { return val; }\n+                    Properties.forEachOwn(val, function(name, prop) {\n+                    if (name === \"layouter\" && prop.constructor) {\n+                        result.type = prop.constructor.type;\n+                        result.borderSize = prop.borderSize;\n+                        result.spacing = prop.spacing;\n+                        return;\n+                    }\n+                    result[name] = prop;\n+                });\n+                return result;\n+            },\n+            recreate: function(instance, spec) {\n+                var layout = instance.layout = {};\n+                if (!spec.layout) return;\n+                var layouterKlassName = Object.isString(spec.layout) ? spec.layout : spec.layout.type;\n+                if (layouterKlassName) {\n+                    var layouterKlass = lively.lookup(layouterKlassName);\n+                    layout.layouter = new layouterKlass();\n+                    layout.layouter.spacing = spec.layout.spacing;\n+                    layout.layouter.borderSize = spec.layout.borderSize;\n+                }\n+                var excludes = ['type', 'borderSize', 'spacing']\n+                Properties.forEachOwn(spec.layout, function(name, prop) {\n+                    if (!excludes.include(name)) layout[name] = prop; });\n+            }\n+        }\n+    },\n+\n+    getBuildSpecProperties: function(rawProps) {\n+        rawProps = rawProps || Object.mergePropertyInHierarchy(this, \"buildSpecProperties\");\n+        var props = Object.keys(rawProps).groupBy(function(key) {\n+                return rawProps[key].exclude ? 'excludes' : 'includes'; }),\n+            scripts = Functions.own(this).select(function(sel) {\n+                return this[sel].hasLivelyClosure; }, this),\n+            ownProps = Properties.own(this)\n+                       .withoutAll(props.excludes)\n+                       .reject(function(key) { return key.startsWith('$$'); });\n+        return props.includes.concat(ownProps).concat(scripts).uniq();\n+    },\n+\n+    buildSpec: function() {\n+        return lively.persistence.SpecObject.fromMorph(this);\n+    },\n+\n+    onFromBuildSpecCreated: Functions.Null\n+});\n+\n+lively.morphic.List.addMethods(\n+'UI builder', {\n+    buildSpecProperties: {\n+        itemList: {defaultValue: []},\n+        selectedIndexes: {defaultValue: []}\n+    },\n+    onFromBuildSpecCreated: function($super) {\n+        $super();\n+        this.setList(this.itemList || []);\n+    }\n+});\n+\n+lively.morphic.OldList.addMethods(\n+'UI builder', {\n+    buildSpecProperties: {\n+        itemList: {defaultValue: []}\n+    },\n+    onFromBuildSpecCreated: function($super) {\n+        $super();\n+        this.setList(this.itemList || []);\n+    }\n+});\n+\n+\n+lively.morphic.Text.addMethods(\n+'UI builder', {\n+\n+    buildSpecProperties: {\n+        textString: {\n+            defaultValue: '',\n+            getter: function(morph, val) { return val || '' },\n+            recreate: function(instance, spec) {\n+                instance.textString = spec.textString;\n+                // important: emphasis after textString!\n+                if (spec.emphasis) instance.emphasizeRanges(spec.emphasis);\n+            }\n+        },\n+        emphasis: {\n+            getter: function(morph, val) {\n+                var styles = morph.getChunkStyles(),\n+                    ranges = morph.getChunkRanges();\n+                return ranges.collect(function(range, i) {\n+                        return [range[0], range[1], styles[i].asSpec()]; });\n+            },\n+            recreate: function(instance, spec) { /*see textString*/ }\n+        },\n+        isLabel: {defaultValue: false, recreate: function(instance, spec) { if (spec.isLabel) instance.beLabel(); }},\n+        _FontSize: {defaultValue: 10},\n+        fixedWidth: {defaultValue: false},\n+        fixedHeight: {defaultValue: false},\n+        allowsInput: {defaultValue: true},\n+        _FontFamily: {defaultValue: 'Arial'},\n+        _MaxTextWidth: {defaultValue: null},\n+        _MaxTextHeight: {defaultValue: null},\n+        textColor: {defaultValue: Color.rgb(0,0,0)},\n+        _Padding: {defaultValue: lively.Rectangle.inset(0)},\n+        _WhiteSpaceHandling: {defaultValue: \"pre-wrap\"},\n+        _MinTextWidth: {defaultValue: null},\n+        _MinTextHeight: {defaultValue: null},\n+        _WordBreak: {defaultValue: 'normal'},\n+        // excludes:\n+        cachedTextString: {exclude: true},\n+        savedTextString: {exclude: true},\n+        charsReplaced: {exclude: true},\n+        charsTyped: {exclude: true},\n+        lastFindLoc: {exclude: true},\n+        parseErrors: {exclude: true},\n+        textChunks: {exclude: true},\n+        priorSelectionRange: {exclude: true},\n+        previousSelection: {exclude: true},\n+        undoSelectionRange: {exclude: true}\n+    }\n+\n+});\n+\n+(function setupCodeEditor() {\n+    require('lively.ide.CodeEditor').toRun(function() {\n+        lively.morphic.CodeEditor.addMethods(\n+            'UI builder', {\n+                buildSpecProperties: {\n+                    textString: {defaultValue: '', getter: function(morph) { return morph.textString }},\n+                    theme: {\n+                        defaultValue: 'chrome',\n+                        getter: function(morph) { return morph.getTheme(); },\n+                        recreate: function(morph, spec) { morph.setTheme(spec.theme); }\n+                    },\n+                    textMode: {\n+                        defaultValue: 'text',\n+                        getter: function(morph) { return morph.getTextMode(); },\n+                        recreate: function(morph, spec) { morph.setTextMode(spec.textMode); }\n+                    },\n+                    // excludes\n+                    _isFocused: {exclude: true},\n+                    savedTextString: {exclude: true},\n+                    aceEditor: {exclude: true}\n+                }\n+            });\n+    });\n+})();\n+\n+lively.morphic.Button.addMethods(\n+'UI builder', {\n+    buildSpecProperties: {\n+        submorphs: {\n+            exclude: true,\n+            filter: function(morph, submorphs) { return submorphs.without(morph.label); }\n+        },\n+        isActive: {defaultValue: true},\n+        label: {\n+            defaultValue: '',\n+            getter: function(morph, val) { return val.textString || ''; },\n+            recreate: function(instance, spec) { instance.ensureLabel(spec.label); }\n+        },\n+        style: {defaultValue: lively.morphic.Button.prototype.style}\n+    }\n+});\n+\n+lively.morphic.Window.addMethods(\n+'UI builder', {\n+    buildSpecProperties: {\n+        submorphs: {\n+            exclude: true,\n+            filter: function(morph, submorphs) {\n+                var handles = [morph.reframeHandle, morph.bottomReframeHandle, morph.rightReframeHandle];\n+                return submorphs.withoutAll(handles).without(morph.titleBar);\n+            }\n+        },\n+        titleBar: {\n+            getter: function(morph, val) { return val ? val.getTitle() : ''; },\n+            recreate: function(instance, spec) { instance.titleBar = instance.makeTitleBar(spec.titleBar, instance.getExtent().x); }\n+        },\n+        grabbingEnabled: {defaultValue: false},\n+        reframeHandle: {exclude: true},\n+        bottomReframeHandle: {exclude: true},\n+        rightReframeHandle: {exclude: true},\n+        targetMorph: {exclude: true}\n+    },\n+\n+    onFromBuildSpecCreated: function($super) {\n+        $super();\n+        this.makeReframeHandles();\n+        this.addMorph(this.titleBar);\n+        this.targetMorph = this.submorphs[0];\n+    }\n+\n+});\n+\n+\n+lively.morphic.MorphList.addMethods(\n+'buildspec', {\n+    onFromBuildSpecCreated: function() {\n+        this.setList(this.itemList || []);\n+    },\n+    buildSpecProperties: {\n+        itemList: {}\n+    }\n+});\n+\n+lively.morphic.Tree.addMethods(\n+'buildSpec', {\n+    buildSpecProperties: {\n+        childNodes: {exclude: true},\n+        icon: {exclude: true},\n+        isInLayoutCycle: false,\n+        item: {exclude: true},\n+        label: {exclude: true},\n+        node: {exclude: true}\n+    },\n+\n+    onBuildSpecCreated: function(buildSpec) {\n+        if (this.item && Object.isFunction(this.item.serializeExpr)) {\n+            buildSpec.item = item;\n+        }\n+    },\n+\n+    onFromBuildSpecCreated: function() {\n+        this.initializeLayout();\n+        this.disableDragging();\n+        this.setItem(this.item || {name: \"tree with no item\"});\n+    }\n+});\n+lively.morphic.Image.addMethods(\n+'buildSpec', {\n+    buildSpecProperties: {\n+        url: {getter: function(morph) { return morph.getImageURL(); }},\n+        useNativeExtent: {defaultValue: false}\n+    },\n+\n+    onFromBuildSpecCreated: function() {\n+        this.setImageURL(this.url, this.useNativeExtent);\n+    }\n+});\n+\n+Object.extend(lively.morphic.Morph, {\n+    fromSpec: function(object) {\n+        return lively.persistence.SpecObject.fromPlainObject(object).createMorph();\n+    },\n+\n+    fromSpecString: function(string) {\n+        return lively.persistence.SpecObject.fromString(object).createMorph();\n+    }\n+});\n+\n+lively.morphic.TabBar.addMethods(\n+'UI builder', {\n+    buildSpecProperties: {\n+        tabContainer: {exclude: true},\n+        tabs: {exclude: true}\n+    },\n+    onFromBuildSpecCreated: function($super) {\n+        $super();\n+        this.tabContainer = this.owner;\n+        this.tabs = this.submorphs.clone();\n+    }\n+});\n+lively.morphic.TabContainer.addMethods(\n+'UI builder', {\n+    buildSpecProperties: {\n+        tabBarStrategy: {\n+            getter: function(morph, val) { return morph.tabBarStrategy.constructor.type; },\n+            recreate: function(instance, spec) { instance.tabBarStrategy = new (lively.lookup(spec.tabBarStrategy))(); }\n+        }\n+    },\n+    onFromBuildSpecCreated: function($super) {\n+        $super();\n+        this.tabBar = this.submorphs.detect(function(ea) { return ea.isTabBar; });\n+    }\n+});\n+lively.morphic.Tab.addMethods(\n+'UI builder', {\n+    buildSpecProperties: {\n+        label: {\n+            defaultValue: '',\n+            getter: function(morph, val) { return val.textString || ''; },\n+            exclude: true\n+        },\n+        pane: { // index of the pane in tabContainer.submorphs\n+            defaultValue: -1,\n+            getter: function(morph, val) { \n+                return morph.tabContainer.submorphs.indexOf(val); }\n+        },\n+        tabBar: {exclude: true},\n+        tabContainer: {exclude: true}\n+    },\n+    onFromBuildSpecCreated: function($super) {\n+        $super();\n+        this.tabContainer = this.ownerChain().detect(function(ea) { return ea.isTabContainer; });\n+        this.pane = this.tabContainer.submorphs[this.pane];\n+        this.tabBar = this.tabContainer.tabBar\n+        this.initializeLabel(this.label); \n+    }\n+});\n+lively.morphic.TabPane.addMethods(\n+'UI builder', {\n+    buildSpecProperties: {\n+        tab: { // index of the tab in tabBar.submorphs\n+            defaultValue: -1,\n+            getter: function(morph, val) { return morph.tabBar.submorphs.indexOf(val); }\n+        },\n+        tabContainer: {exclude: true},\n+        tabBar: {exclude: true}\n+    },\n+    onFromBuildSpecCreated: function($super) {\n+        $super();\n+        this.tabContainer = this.ownerChain().detect(function(ea) { return ea.isTabContainer; })\n+        this.tabBar = this.tabContainer.getTabBar();\n+        this.tab = this.tabBar.submorphs[this.tab];\n+    }\n+});\n+lively.morphic.Slider.addMethods(\n+'UI builder', {\n+    onFromBuildSpecCreated: function($super) {\n+        $super();\n+        this.sliderKnob = this.submorphs.detect(function(ea) { return ea.isSliderKnob; });\n+    }\n+});\n+lively.morphic.SliderKnob.addMethods(\n+'UI builder', {\n+    onFromBuildSpecCreated: function($super) {\n+        $super();\n+        this.slider = this.ownerChain().detect(function(ea) { return ea.isSlider; });\n+    }\n+});\n+\n+lively.morphic.HorizontalDivider.addMethods(\n+'buildSpec', {\n+    buildSpecProperties: {\n+        scalingAbove: {defaultValue: []},\n+        scalingBelow: {defaultValue: []}\n+    }\n+});\n+\n+}) // end of moduled of module"
         },
         {
            "sha":"164165a622fae53a6326c3af99618ae4e4882dcc",
            "filename":"index.vwf.config.yaml",
            "status":"added",
            "additions":18,
            "deletions":0,
            "changes":18,
            "blob_url":"https://github.com/LivelyKernel/LivelyKernel/blob/0bca47a3fd60a09db93a6dd49b77c8e547ad911f/index.vwf.config.yaml",
            "raw_url":"https://github.com/LivelyKernel/LivelyKernel/raw/0bca47a3fd60a09db93a6dd49b77c8e547ad911f/index.vwf.config.yaml",
            "contents_url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/contents/index.vwf.config.yaml?ref=0bca47a3fd60a09db93a6dd49b77c8e547ad911f",
            "patch":"@@ -0,0 +1,18 @@\n+# Copyright 2013 United States Government, as represented by the Secretary of Defense, Under\n+# Secretary of Defense (Personnel & Readiness).\n+# \n+# Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n+# in compliance with the License. You may obtain a copy of the License at\n+# \n+#   http://www.apache.org/licenses/LICENSE-2.0\n+# \n+# Unless required by applicable law or agreed to in writing, software distributed under the License\n+# is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n+# or implied. See the License for the specific language governing permissions and limitations under\n+# the License.\n+\n+---\n+info:\n+  title: \"VWF meets Lively\"\n+model:\n+  vwf/model/morph:"
         },
         {
            "sha":"c90eb498bd53ff840893405e0c76e10e458b24c6",
            "filename":"index.vwf.html",
            "status":"added",
            "additions":11,
            "deletions":0,
            "changes":11,
            "blob_url":"https://github.com/LivelyKernel/LivelyKernel/blob/0bca47a3fd60a09db93a6dd49b77c8e547ad911f/index.vwf.html",
            "raw_url":"https://github.com/LivelyKernel/LivelyKernel/raw/0bca47a3fd60a09db93a6dd49b77c8e547ad911f/index.vwf.html",
            "contents_url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/contents/index.vwf.html?ref=0bca47a3fd60a09db93a6dd49b77c8e547ad911f",
            "patch":"@@ -0,0 +1,11 @@\n+<!DOCTYPE html><html>\n+<head><title>blank.html</title></head>\n+<body>\n+  <script type=\"text/javascript\">\n+      window.Config = window.Config || {\n+        codeBase: document.URL + 'core/',\n+        rootPath: document.URL\n+      }\n+  </script>\n+  <script type=\"text/javascript\" src=\"core/lively/bootstrap.js\"></script>\n+</body></html>"
         },
         {
            "sha":"f5d515a408e95a14dacbec5868943795246a1adf",
            "filename":"index.vwf.yaml",
            "status":"added",
            "additions":17,
            "deletions":0,
            "changes":17,
            "blob_url":"https://github.com/LivelyKernel/LivelyKernel/blob/0bca47a3fd60a09db93a6dd49b77c8e547ad911f/index.vwf.yaml",
            "raw_url":"https://github.com/LivelyKernel/LivelyKernel/raw/0bca47a3fd60a09db93a6dd49b77c8e547ad911f/index.vwf.yaml",
            "contents_url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/contents/index.vwf.yaml?ref=0bca47a3fd60a09db93a6dd49b77c8e547ad911f",
            "patch":"@@ -0,0 +1,17 @@\n+--- \n+extends: http://vwf.example.com/node.vwf\n+properties:\n+  p: \"test\"\n+children:\n+  morph:\n+    extends: http://vwf.example.com/morph.vwf\n+    properties:\n+      classname: \"lively.morphic.Box\"\n+      position: \"lively.pt(10,10)\"\n+      rotation: 0\n+      opacity: 1\n+      extent: \"lively.pt(100,50)\"\n+      fill: \"Color.blue\"\n+      borderWidth: 2\n+scripts:\n+- |"
         }
      ]
   },
   {
      "sha":"453e2601cf2ed3c2213e9deffe88488cbc21f11a",
      "commit":{
         "author":{
            "name":"Robert Krahn",
            "email":"robert.krahn@gmail.com",
            "date":"2013-12-28T14:02:49Z"
         },
         "committer":{
            "name":"Robert Krahn",
            "email":"robert.krahn@gmail.com",
            "date":"2013-12-28T14:02:49Z"
         },
         "message":"network: some cleanup",
         "tree":{
            "sha":"4d77a5f2b5c8c1b9957f432f89ee517731a031bc",
            "url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/git/trees/4d77a5f2b5c8c1b9957f432f89ee517731a031bc"
         },
         "url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/git/commits/453e2601cf2ed3c2213e9deffe88488cbc21f11a",
         "comment_count":0
      },
      "url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/commits/453e2601cf2ed3c2213e9deffe88488cbc21f11a",
      "html_url":"https://github.com/LivelyKernel/LivelyKernel/commit/453e2601cf2ed3c2213e9deffe88488cbc21f11a",
      "comments_url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/commits/453e2601cf2ed3c2213e9deffe88488cbc21f11a/comments",
      "author":{
         "login":"rksm",
         "id":467450,
         "avatar_url":"https://gravatar.com/avatar/7e0fc9769fc4ec9b23b85da1639d5f31?d=https%3A%2F%2Fidenticons.github.com%2Ff5790be82a84c28f0e1fadaed4826b78.png&r=x",
         "gravatar_id":"7e0fc9769fc4ec9b23b85da1639d5f31",
         "url":"https://api.github.com/users/rksm",
         "html_url":"https://github.com/rksm",
         "followers_url":"https://api.github.com/users/rksm/followers",
         "following_url":"https://api.github.com/users/rksm/following{/other_user}",
         "gists_url":"https://api.github.com/users/rksm/gists{/gist_id}",
         "starred_url":"https://api.github.com/users/rksm/starred{/owner}{/repo}",
         "subscriptions_url":"https://api.github.com/users/rksm/subscriptions",
         "organizations_url":"https://api.github.com/users/rksm/orgs",
         "repos_url":"https://api.github.com/users/rksm/repos",
         "events_url":"https://api.github.com/users/rksm/events{/privacy}",
         "received_events_url":"https://api.github.com/users/rksm/received_events",
         "type":"User",
         "site_admin":false
      },
      "committer":{
         "login":"rksm",
         "id":467450,
         "avatar_url":"https://gravatar.com/avatar/7e0fc9769fc4ec9b23b85da1639d5f31?d=https%3A%2F%2Fidenticons.github.com%2Ff5790be82a84c28f0e1fadaed4826b78.png&r=x",
         "gravatar_id":"7e0fc9769fc4ec9b23b85da1639d5f31",
         "url":"https://api.github.com/users/rksm",
         "html_url":"https://github.com/rksm",
         "followers_url":"https://api.github.com/users/rksm/followers",
         "following_url":"https://api.github.com/users/rksm/following{/other_user}",
         "gists_url":"https://api.github.com/users/rksm/gists{/gist_id}",
         "starred_url":"https://api.github.com/users/rksm/starred{/owner}{/repo}",
         "subscriptions_url":"https://api.github.com/users/rksm/subscriptions",
         "organizations_url":"https://api.github.com/users/rksm/orgs",
         "repos_url":"https://api.github.com/users/rksm/repos",
         "events_url":"https://api.github.com/users/rksm/events{/privacy}",
         "received_events_url":"https://api.github.com/users/rksm/received_events",
         "type":"User",
         "site_admin":false
      },
      "parents":[
         {
            "sha":"fe8537b62f2d37d082985429e9eaffcc61216017",
            "url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/commits/fe8537b62f2d37d082985429e9eaffcc61216017",
            "html_url":"https://github.com/LivelyKernel/LivelyKernel/commit/fe8537b62f2d37d082985429e9eaffcc61216017"
         }
      ],
      "stats":{
         "total":34,
         "additions":17,
         "deletions":17
      },
      "files":[
         {
            "sha":"846df990214068494209aef44fd17b0a88c393ef",
            "filename":"core/lively/Network.js",
            "status":"modified",
            "additions":17,
            "deletions":17,
            "changes":34,
            "blob_url":"https://github.com/LivelyKernel/LivelyKernel/blob/453e2601cf2ed3c2213e9deffe88488cbc21f11a/core/lively/Network.js",
            "raw_url":"https://github.com/LivelyKernel/LivelyKernel/raw/453e2601cf2ed3c2213e9deffe88488cbc21f11a/core/lively/Network.js",
            "contents_url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/contents/core/lively/Network.js?ref=453e2601cf2ed3c2213e9deffe88488cbc21f11a",
            "patch":"@@ -232,7 +232,6 @@ Object.subclass('URL', {\n         return this.hostname === url.hostname ? this.relativePathFrom(url) : this.pathname.replace(/^\\/?/, '');\n     },\n \n-\n     svnWorkspacePath: function() {\n         // heuristics to figure out the Subversion path\n         var path = this.pathname;\n@@ -295,6 +294,7 @@ Object.subclass('URL', {\n     },\n \n     asWebResource: function() { return new WebResource(this) },\n+\n     asModuleName: function() {\n         var urlString = this.withRelativePartsResolved().toString(),\n             basePrefix = urlString.substring(0, Config.codeBase.length),\n@@ -418,6 +418,7 @@ Object.extend(URL, {\n         Global.URL[name] = Global._URL[name];\n     });\n })();\n+\n Object.subclass('NetRequestStatus',\n 'documentation', {\n     documentation: \"nice parsed status information, returned by NetRequest.getStatus when request done\",\n@@ -1004,8 +1005,6 @@ Resource.subclass('SVNResource', {\n         }\n     },\n \n-\n-\n     withBaselineUriDo: function(rev, doFunc) {\n         var tempUrl = this.getURL();\n         this.setURL(this.createVersionURLString(rev));\n@@ -1015,7 +1014,7 @@ Resource.subclass('SVNResource', {\n \n     createVersionURLString: function(rev) {\n         return this.repoUrl + '/!svn/bc/' + rev + '/' + this.getLocalUrl();\n-    },\n+    }\n \n });\n \n@@ -1073,9 +1072,10 @@ Object.subclass('SVNVersionInfo', {\n         return Strings.format('new SVNVersionInfo({rev: %s, url: %s, date: %s, author: %s, change: %s, fileSize: %s})',\n         this.rev, toExpression(this.url), toExpression(this.date),\n         toExpression(this.author), toExpression(this.change), toExpression(this.fileSize));\n-    },\n+    }\n \n });\n+\n Object.extend(SVNVersionInfo, {\n     fromPropfindNode: function(node) {\n         // FIXME cleanup --> Similar code exists  in lively.Network -> pvtSetMeta...sth\n@@ -1256,16 +1256,16 @@ Object.subclass('WebResource',\n \n         function onProgress(evt) {\n             webR.progressEvent = evt;\n-            // var percentComplete = (e.position / e.totalSize)*100;\n+            // var percentComplete = (e.position / e.totalSize)*100;\n         };\n         // register event handlers\n         req.onreadystatechange = onReadyStateChange;\n \n         if (method === 'PUT' || method === 'POST') {\n             req.upload.addEventListener(\"progress\", onProgress, false);\n-            // req.upload.addEventListener(\"load\", transferComplete, false);\n-            // req.upload.addEventListener(\"error\", transferFailed, false);\n-            // req.upload.addEventListener(\"abort\", transferCanceled, false);\n+            // req.upload.addEventListener(\"load\", transferComplete, false);\n+            // req.upload.addEventListener(\"error\", transferFailed, false);\n+            // req.upload.addEventListener(\"abort\", transferCanceled, false);\n         } else {\n             req.addEventListener(\"progress\", onProgress, false);\n         }\n@@ -1366,9 +1366,9 @@ Object.subclass('WebResource',\n         // var labelFunc = Object.isString(labelOrFunc) ?\n             // function() { return labelOrFunc } : labelOrFunc;\n         var progressBar = lively.morphic.World.current().addStatusProgress(label);\n-        connect(this, 'progressEvent', progressBar, 'setValue',\n+        lively.bindings.connect(this, 'progressEvent', progressBar, 'setValue',\n             {converter: function(rpe) { return (rpe.loaded / rpe.total) }});\n-        connect(this, 'status', progressBar, 'remove', {\n+        lively.bindings.connect(this, 'status', progressBar, 'remove', {\n             updater: function($upd, status) { if (status.isDone()) $upd() }});\n         return this;\n     }\n@@ -1453,7 +1453,7 @@ Object.subclass('WebResource',\n         // location XML is written to content/contentDocument\n         var helper = new WebResource(this.getURL());\n         helper.setSync(this.isSync())\n-        connect(helper, 'revAndLocations', this, 'get', {\n+        lively.bindings.connect(helper, 'revAndLocations', this, 'get', {\n             updater: function($upd, revAndPath) { $upd(rev, contentType, revAndPath[rev]) },\n             varMapping: {rev: rev, contentType: contentType}});\n         helper.getLocationInRev(rev, this.headRevision);\n@@ -1478,7 +1478,7 @@ Object.subclass('WebResource',\n         // location XML is written to content/contentDocument\n         var helper = new WebResource(this.getURL());\n         helper.setSync(this.isSync())\n-        connect(helper, 'revAndLocations', this, 'get', {\n+        lively.bindings.connect(helper, 'revAndLocations', this, 'get', {\n             updater: function($upd, revAndPath) { $upd(rev, contentType, revAndPath[rev]) },\n             varMapping: {rev: rev, contentType: contentType}});\n         helper.getLocationInRev(rev, this.headRevision);\n@@ -1590,8 +1590,8 @@ Object.subclass('WebResource',\n                 // would not be updated but its URL would not point to the file in the\n                 // history. Using the global headRev fixes this.\n                 var repoWebR = new WebResource(res.repoUrl);\n-                connect(repoWebR, 'headRevision', this, 'headRevision', {removeAfterUpdate: true});\n-                connect(this, 'headRevision', this, 'getVersions', {removeAfterUpdate: true});\n+                lively.bindings.connect(repoWebR, 'headRevision', this, 'headRevision', {removeAfterUpdate: true});\n+                lively.bindings.connect(this, 'headRevision', this, 'getVersions', {removeAfterUpdate: true});\n                 repoWebR.getHeadRevision();\n                 return this;\n             }\n@@ -1636,7 +1636,7 @@ Object.subclass('WebResource',\n                             '<S:peg-revision>%s</S:peg-revision>' +\n                             '<S:location-revision>%s</S:location-revision>' +\n                         '</S:get-locations>', headRev, rev);\n-                    connect(self, 'contentDocument', self, 'pvtProcessForLocationRequest', {\n+                    lively.bindings.connect(self, 'contentDocument', self, 'pvtProcessForLocationRequest', {\n                         removeAfterUpdate: true});\n                     self.report(content);\n                 }\n@@ -1644,7 +1644,7 @@ Object.subclass('WebResource',\n         if (this.headRevision) {\n             reportRequester.action(this.headRevision)\n         } else {\n-            connect(self, 'headRevision', reportRequester, 'action', {removeAfterUpdate: true});\n+            lively.bindings.connect(self, 'headRevision', reportRequester, 'action', {removeAfterUpdate: true});\n             this.getHeadRevision();\n         }\n         return this;"
         }
      ]
   },
   {
      "sha":"65c4ad10b3ff70b561dfd4f2bb3031decdab603b",
      "commit":{
         "author":{
            "name":"Robert Krahn",
            "email":"robert.krahn@gmail.com",
            "date":"2013-12-28T14:11:47Z"
         },
         "committer":{
            "name":"Robert Krahn",
            "email":"robert.krahn@gmail.com",
            "date":"2013-12-28T14:18:28Z"
         },
         "message":"worker: Firefox compatibility",
         "tree":{
            "sha":"9746d4dff08293e4c1386fd206b61a5edc743850",
            "url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/git/trees/9746d4dff08293e4c1386fd206b61a5edc743850"
         },
         "url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/git/commits/65c4ad10b3ff70b561dfd4f2bb3031decdab603b",
         "comment_count":0
      },
      "url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/commits/65c4ad10b3ff70b561dfd4f2bb3031decdab603b",
      "html_url":"https://github.com/LivelyKernel/LivelyKernel/commit/65c4ad10b3ff70b561dfd4f2bb3031decdab603b",
      "comments_url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/commits/65c4ad10b3ff70b561dfd4f2bb3031decdab603b/comments",
      "author":{
         "login":"rksm",
         "id":467450,
         "avatar_url":"https://gravatar.com/avatar/7e0fc9769fc4ec9b23b85da1639d5f31?d=https%3A%2F%2Fidenticons.github.com%2Ff5790be82a84c28f0e1fadaed4826b78.png&r=x",
         "gravatar_id":"7e0fc9769fc4ec9b23b85da1639d5f31",
         "url":"https://api.github.com/users/rksm",
         "html_url":"https://github.com/rksm",
         "followers_url":"https://api.github.com/users/rksm/followers",
         "following_url":"https://api.github.com/users/rksm/following{/other_user}",
         "gists_url":"https://api.github.com/users/rksm/gists{/gist_id}",
         "starred_url":"https://api.github.com/users/rksm/starred{/owner}{/repo}",
         "subscriptions_url":"https://api.github.com/users/rksm/subscriptions",
         "organizations_url":"https://api.github.com/users/rksm/orgs",
         "repos_url":"https://api.github.com/users/rksm/repos",
         "events_url":"https://api.github.com/users/rksm/events{/privacy}",
         "received_events_url":"https://api.github.com/users/rksm/received_events",
         "type":"User",
         "site_admin":false
      },
      "committer":{
         "login":"rksm",
         "id":467450,
         "avatar_url":"https://gravatar.com/avatar/7e0fc9769fc4ec9b23b85da1639d5f31?d=https%3A%2F%2Fidenticons.github.com%2Ff5790be82a84c28f0e1fadaed4826b78.png&r=x",
         "gravatar_id":"7e0fc9769fc4ec9b23b85da1639d5f31",
         "url":"https://api.github.com/users/rksm",
         "html_url":"https://github.com/rksm",
         "followers_url":"https://api.github.com/users/rksm/followers",
         "following_url":"https://api.github.com/users/rksm/following{/other_user}",
         "gists_url":"https://api.github.com/users/rksm/gists{/gist_id}",
         "starred_url":"https://api.github.com/users/rksm/starred{/owner}{/repo}",
         "subscriptions_url":"https://api.github.com/users/rksm/subscriptions",
         "organizations_url":"https://api.github.com/users/rksm/orgs",
         "repos_url":"https://api.github.com/users/rksm/repos",
         "events_url":"https://api.github.com/users/rksm/events{/privacy}",
         "received_events_url":"https://api.github.com/users/rksm/received_events",
         "type":"User",
         "site_admin":false
      },
      "parents":[
         {
            "sha":"453e2601cf2ed3c2213e9deffe88488cbc21f11a",
            "url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/commits/453e2601cf2ed3c2213e9deffe88488cbc21f11a",
            "html_url":"https://github.com/LivelyKernel/LivelyKernel/commit/453e2601cf2ed3c2213e9deffe88488cbc21f11a"
         }
      ],
      "stats":{
         "total":77,
         "additions":56,
         "deletions":21
      },
      "files":[
         {
            "sha":"8ef7cce438d44dd7656f3f9aea43042cf1149486",
            "filename":"core/lively/defaultconfig.js",
            "status":"modified",
            "additions":7,
            "deletions":2,
            "changes":9,
            "blob_url":"https://github.com/LivelyKernel/LivelyKernel/blob/65c4ad10b3ff70b561dfd4f2bb3031decdab603b/core/lively/defaultconfig.js",
            "raw_url":"https://github.com/LivelyKernel/LivelyKernel/raw/65c4ad10b3ff70b561dfd4f2bb3031decdab603b/core/lively/defaultconfig.js",
            "contents_url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/contents/core/lively/defaultconfig.js?ref=65c4ad10b3ff70b561dfd4f2bb3031decdab603b",
            "patch":"@@ -67,7 +67,9 @@ Global.UserAgent = {\n     touchIsMouse: false,\n \n     isNodejs: (Global.process && !!Global.process.versions.node)\n-        || Global.navigator.userAgent.indexOf(\"Node.js\") !== -1\n+            || Global.navigator.userAgent.indexOf(\"Node.js\") !== -1,\n+\n+    isWorker: typeof importScripts !== 'undefined'\n }\n \n })(typeof Global !== 'undefined' ? Global : window);\n@@ -307,6 +309,9 @@ Global.Config = {\n (function addConfigOptions(Config, UserAgent, ExistingConfig) {\n \n // support for loading from blob urls, e.g. in workers\n+// note that workers can also get the location spec passed in as an option so\n+// that blob parsing shouldn't be necessary. Also, in Firefox blob parsing\n+// doesn't work.\n if (Config.location.protocol.indexOf('blob') > -1) {\n     var isEncoded = !!Config.location.pathname.match(/https?%3A/);\n     var decoded = Config.location.pathname;\n@@ -354,7 +359,7 @@ Config.addOptions(\n \n 'server.nodejs', [\n     [\"nodeJSURL\", Config.location.protocol + '//' + Config.location.host + '/nodejs'],\n-    [\"nodeJSPath\", '/home/nodejs/']\n+    [/*This is deprecated*/\"nodeJSPath\", '/home/nodejs/']\n ],\n \n 'lively.persistence', ["
         },
         {
            "sha":"f08f06ba38dcb9515f2402c6e7917e54cf02b626",
            "filename":"core/lively/ide/CommandLineInterface.js",
            "status":"modified",
            "additions":7,
            "deletions":4,
            "changes":11,
            "blob_url":"https://github.com/LivelyKernel/LivelyKernel/blob/65c4ad10b3ff70b561dfd4f2bb3031decdab603b/core/lively/ide/CommandLineInterface.js",
            "raw_url":"https://github.com/LivelyKernel/LivelyKernel/raw/65c4ad10b3ff70b561dfd4f2bb3031decdab603b/core/lively/ide/CommandLineInterface.js",
            "contents_url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/contents/core/lively/ide/CommandLineInterface.js?ref=65c4ad10b3ff70b561dfd4f2bb3031decdab603b",
            "patch":"@@ -314,7 +314,11 @@ Object.extend(lively.ide.CommandLineInterface, {\n     },\n     // -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-\n \n-    commandLineServerURL: URL.create(Config.nodeJSURL).asDirectory().withFilename('CommandLineServer/'),\n+    commandLineServerURL: (function() {\n+        try {\n+            return URL.create(Config.nodeJSURL).asDirectory().withFilename('CommandLineServer/');\n+        } catch (e) { console.error(e + '\\n' + e.stack); }\n+    })(),\n \n     parseCommandIntoCommandAndArgs: function(cmd) {\n         // lively.ide.CommandLineInterface.parseCommandIntoCommandAndArgs('grep o -')\n@@ -581,7 +585,7 @@ Object.extend(lively.ide.CommandLineInterface, {\n \n // -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-\n // file search related\n-module(\"lively.ide.CommandLineSearch\");\n+lively.module(\"lively.ide.CommandLineSearch\");\n \n Object.subclass(\"lively.ide.CommandLineSearch.FileInfo\",\n // see lively.ide.CommandLineSearch.parseDirectoryList\n@@ -1058,7 +1062,6 @@ Object.extend(lively.ide.FilePatchHunk, {\n     read: function(patchString) { return new this().read(patchString); }\n });\n \n-\n lively.ide.CommandLineInterface.GitSupport = {\n     getScriptBaseName: function(sessionId) {\n         return 'git-askpass_' + sessionId.split(':').last();\n@@ -1189,4 +1192,4 @@ lively.ide.CommandLineInterface.SpellChecker = {\n     }\n }\n \n-}) // end of module\n\\ No newline at end of file\n+}) // end of module"
         },
         {
            "sha":"3ce083f07fa6de373bee7793a99f37bc3343deb8",
            "filename":"core/lively/lang/Function.js",
            "status":"modified",
            "additions":7,
            "deletions":3,
            "changes":10,
            "blob_url":"https://github.com/LivelyKernel/LivelyKernel/blob/65c4ad10b3ff70b561dfd4f2bb3031decdab603b/core/lively/lang/Function.js",
            "raw_url":"https://github.com/LivelyKernel/LivelyKernel/raw/65c4ad10b3ff70b561dfd4f2bb3031decdab603b/core/lively/lang/Function.js",
            "contents_url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/contents/core/lively/lang/Function.js?ref=65c4ad10b3ff70b561dfd4f2bb3031decdab603b",
            "patch":"@@ -472,8 +472,8 @@ Global.Functions = {\n         var worker = lively.Worker.createInPool(null, Config.get('lively.Worker.idleTimeOfPoolWorker'));\n         worker.onMessage = function(evt) {\n             switch (evt.data.type) {\n-                case 'warning':\n-                    console.warn(\"[WORKER warn] %s\", evt.data.message);\n+                case 'log': case 'error': case 'warn':\n+                    console[evt.data.type](\"[WORKER] %s\", evt.data.message);\n                     break;\n                 case 'runResponse':\n                     options.whenDone && options.whenDone(evt.data.error, evt.data.result);\n@@ -485,7 +485,11 @@ Global.Functions = {\n                     console.log(\"[WORKER unknown message] %s\", evt.data.type || evt.data);\n             }\n         }\n-        worker.basicRun({func: workerFunc, args: options.args || [], useWhenDone: true});\n+        worker.basicRun({\n+            func: workerFunc,\n+            args: options.args || [],\n+            useWhenDone: true\n+        });\n         return worker;\n     },\n "
         },
         {
            "sha":"ecb803242bfe1139d934e54cec1458caa3f54cd4",
            "filename":"core/lively/lang/Worker.js",
            "status":"modified",
            "additions":35,
            "deletions":11,
            "changes":46,
            "blob_url":"https://github.com/LivelyKernel/LivelyKernel/blob/65c4ad10b3ff70b561dfd4f2bb3031decdab603b/core/lively/lang/Worker.js",
            "raw_url":"https://github.com/LivelyKernel/LivelyKernel/raw/65c4ad10b3ff70b561dfd4f2bb3031decdab603b/core/lively/lang/Worker.js",
            "contents_url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/contents/core/lively/lang/Worker.js?ref=65c4ad10b3ff70b561dfd4f2bb3031decdab603b",
            "patch":"@@ -43,8 +43,15 @@ lively.Worker = {\n                 options: {\n                     locationDirectory: JSLoader.currentDir(),\n                     bootstrapFiles: bootstrapFiles,\n-                    codeBase: Config.codeBase,\n-                    rootPath: Config.rootPath\n+                    codeBase: lively.Config.codeBase,\n+                    rootPath: lively.Config.rootPath,\n+                    nodeJSURL: lively.Config.nodeJSURL,\n+                    location: (function() {\n+                        var loc = {};\n+                        [\"hash\",\"host\",\"hostname\",\"href\",\"origin\",\"pathname\",\"port\",\"protocol\",\"search\"].forEach(function(name) {\n+                            loc[name] = lively.Config.location[name]; });\n+                        return loc;\n+                    })()\n                 }\n             });\n             worker.onmessage = function(evt) {\n@@ -98,21 +105,38 @@ lively.Worker = {\n                         Global.Config.finishLoadingCallbacks.push(callback);\n                     }\n                 };\n-                Global.console = Global.console || {\n-                    log: function() {}, error: function() {}, warn: function() {}\n-                }\n-                if (!Global.Config) Global.Config = {codeBase: options.codeBase, rootPath: options.rootPath, finishLoadingCallbacks: []};\n-                if (!Global.document) Global.document = {location: self.location, URL: self.location.toString()}\n+                Global.console = Global.console || (function() {\n+                    var c = {};\n+                    ['log', 'error', 'warn'].forEach(function(name) {\n+                        c[name] = function(/*args*/) {\n+                            var string = arguments[0];\n+                            for (var i = 1; i < arguments.length; i++)\n+                                string = string.replace('%s', arguments[i]);\n+                            postMessage({\n+                                type: name,\n+                                message: ['[', name.toUpperCase(), '] ', string].join('')\n+                            });\n+                        };\n+                    });\n+                    return c;\n+                })();\n+                if (!Global.Config) Global.Config = lively.Config = {\n+                    codeBase: options.codeBase,\n+                    rootPath: options.rootPath,\n+                    nodeJSURL: options.nodeJSURL,\n+                    location: options.location,\n+                    finishLoadingCallbacks: []\n+                };\n+                Config.location.toString = function() { return this.href; }\n+                if (!Global.document) Global.document = {location: Config.location, URL: Config.location.toString()}\n                 var loadedURLs = [];\n                 Global.JSLoader = {\n                     loadJs: function(url, callback) {\n                         // var match = url.match(/http:\\/\\/[^\\/]+(\\/?.*)/);\n                         // if (match && match[1]) url = match[1];\n                         loadedURLs.push(url);\n-                        try {\n-                            importScripts(url);\n-                        } catch(e) {\n-                            postMessage({type: 'warning', message: url + ' could not be loaded in worker: '+ e});\n+                        try { importScripts(url); } catch(e) {\n+                            console.error(url + ' could not be loaded in worker: ' + e);\n                         }\n                     },\n                     currentDir: function () { return options.locationDirectory; },"
         },
         {
            "sha":"015d7e9cead22b24dd31b1d6e4c721a546e681b5",
            "filename":"core/lively/lang/tests/WorkerTests.js",
            "status":"modified",
            "additions":0,
            "deletions":1,
            "changes":1,
            "blob_url":"https://github.com/LivelyKernel/LivelyKernel/blob/65c4ad10b3ff70b561dfd4f2bb3031decdab603b/core/lively/lang/tests/WorkerTests.js",
            "raw_url":"https://github.com/LivelyKernel/LivelyKernel/raw/65c4ad10b3ff70b561dfd4f2bb3031decdab603b/core/lively/lang/tests/WorkerTests.js",
            "contents_url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/contents/core/lively/lang/tests/WorkerTests.js?ref=65c4ad10b3ff70b561dfd4f2bb3031decdab603b",
            "patch":"@@ -82,7 +82,6 @@ AsyncTestCase.subclass('lively.lang.tests.WorkerTests.FunctionInterface',\n                 test.assertEquals('3 true', whenDoneResult);\n                 this.assertEquals(1, lively.Worker.pool.length, 'worker pool size with worker running.');\n                 this.delay(function() {\n-    show('...'+lively.Worker.pool[0] === worker)\n                     this.assertEquals(0, lively.Worker.pool.length, 'worker pool size with worker stopped.');\n                     this.done();\n                 }, 200);"
         }
      ]
   },
   {
      "sha":"941da40cf39ff506df83a9ee86532fcfd904ea91",
      "commit":{
         "author":{
            "name":"Robert Krahn",
            "email":"robert.krahn@gmail.com",
            "date":"2013-12-29T17:58:36Z"
         },
         "committer":{
            "name":"Robert Krahn",
            "email":"robert.krahn@gmail.com",
            "date":"2013-12-29T17:58:36Z"
         },
         "message":"bootstrap: remove css load nonsense",
         "tree":{
            "sha":"9f37908ae9165f0a388c03debd3aaf78403c1de2",
            "url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/git/trees/9f37908ae9165f0a388c03debd3aaf78403c1de2"
         },
         "url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/git/commits/941da40cf39ff506df83a9ee86532fcfd904ea91",
         "comment_count":0
      },
      "url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/commits/941da40cf39ff506df83a9ee86532fcfd904ea91",
      "html_url":"https://github.com/LivelyKernel/LivelyKernel/commit/941da40cf39ff506df83a9ee86532fcfd904ea91",
      "comments_url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/commits/941da40cf39ff506df83a9ee86532fcfd904ea91/comments",
      "author":{
         "login":"rksm",
         "id":467450,
         "avatar_url":"https://gravatar.com/avatar/7e0fc9769fc4ec9b23b85da1639d5f31?d=https%3A%2F%2Fidenticons.github.com%2Ff5790be82a84c28f0e1fadaed4826b78.png&r=x",
         "gravatar_id":"7e0fc9769fc4ec9b23b85da1639d5f31",
         "url":"https://api.github.com/users/rksm",
         "html_url":"https://github.com/rksm",
         "followers_url":"https://api.github.com/users/rksm/followers",
         "following_url":"https://api.github.com/users/rksm/following{/other_user}",
         "gists_url":"https://api.github.com/users/rksm/gists{/gist_id}",
         "starred_url":"https://api.github.com/users/rksm/starred{/owner}{/repo}",
         "subscriptions_url":"https://api.github.com/users/rksm/subscriptions",
         "organizations_url":"https://api.github.com/users/rksm/orgs",
         "repos_url":"https://api.github.com/users/rksm/repos",
         "events_url":"https://api.github.com/users/rksm/events{/privacy}",
         "received_events_url":"https://api.github.com/users/rksm/received_events",
         "type":"User",
         "site_admin":false
      },
      "committer":{
         "login":"rksm",
         "id":467450,
         "avatar_url":"https://gravatar.com/avatar/7e0fc9769fc4ec9b23b85da1639d5f31?d=https%3A%2F%2Fidenticons.github.com%2Ff5790be82a84c28f0e1fadaed4826b78.png&r=x",
         "gravatar_id":"7e0fc9769fc4ec9b23b85da1639d5f31",
         "url":"https://api.github.com/users/rksm",
         "html_url":"https://github.com/rksm",
         "followers_url":"https://api.github.com/users/rksm/followers",
         "following_url":"https://api.github.com/users/rksm/following{/other_user}",
         "gists_url":"https://api.github.com/users/rksm/gists{/gist_id}",
         "starred_url":"https://api.github.com/users/rksm/starred{/owner}{/repo}",
         "subscriptions_url":"https://api.github.com/users/rksm/subscriptions",
         "organizations_url":"https://api.github.com/users/rksm/orgs",
         "repos_url":"https://api.github.com/users/rksm/repos",
         "events_url":"https://api.github.com/users/rksm/events{/privacy}",
         "received_events_url":"https://api.github.com/users/rksm/received_events",
         "type":"User",
         "site_admin":false
      },
      "parents":[
         {
            "sha":"65c4ad10b3ff70b561dfd4f2bb3031decdab603b",
            "url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/commits/65c4ad10b3ff70b561dfd4f2bb3031decdab603b",
            "html_url":"https://github.com/LivelyKernel/LivelyKernel/commit/65c4ad10b3ff70b561dfd4f2bb3031decdab603b"
         }
      ],
      "stats":{
         "total":10,
         "additions":5,
         "deletions":5
      },
      "files":[
         {
            "sha":"ed59a9506c9b9e485b8039d640d71eafb868b402",
            "filename":"core/lively/bootstrap.js",
            "status":"modified",
            "additions":5,
            "deletions":5,
            "changes":10,
            "blob_url":"https://github.com/LivelyKernel/LivelyKernel/blob/941da40cf39ff506df83a9ee86532fcfd904ea91/core/lively/bootstrap.js",
            "raw_url":"https://github.com/LivelyKernel/LivelyKernel/raw/941da40cf39ff506df83a9ee86532fcfd904ea91/core/lively/bootstrap.js",
            "contents_url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/contents/core/lively/bootstrap.js?ref=941da40cf39ff506df83a9ee86532fcfd904ea91",
            "patch":"@@ -553,10 +553,12 @@\n                 if (this.scriptInDOM(url)) {\n                     var msg = 'script ' + url + ' already loaded or loading';\n                     console.log(msg);\n+                // Deprecation: loading css files via loadJs is no longer\n+                // supported\n+                if (url.match(/\\.css$/) || url.match(/\\.css\\?/)) {\n+                    console.error('JSLoader.loadJs called with css URL?! %s', url);\n                     return null;\n                 }\n-                // it's called loadJs, not loadCSS !!!\n-                var css = this.isCSS(url);\n \n                 // adapt URL\n                 var exactUrl = url;\n@@ -850,10 +852,8 @@\n         getSyncStatus: function(url, forceUncached) {\n             return this.getSyncReq(url, forceUncached).status;\n         },\n-\n-        isCSS: function(url) {\n-            return url.match(/\\.css$/) || url.match(/\\.css\\?/);\n         }\n+\n     };\n \n     // TODO: Something is wrong with the lively-libs, use debug only to"
         }
      ]
   },
   {
      "sha":"e985068119eff5aa971a2a7db1c909899fb43ca0",
      "commit":{
         "author":{
            "name":"Robert Krahn",
            "email":"robert.krahn@gmail.com",
            "date":"2013-12-29T18:13:18Z"
         },
         "committer":{
            "name":"Robert Krahn",
            "email":"robert.krahn@gmail.com",
            "date":"2013-12-29T18:13:18Z"
         },
         "message":"ide: config setting to control whether to use codeeditor completions",
         "tree":{
            "sha":"08223a53b663ad4ccf5ad60a7fd141190de2e7f2",
            "url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/git/trees/08223a53b663ad4ccf5ad60a7fd141190de2e7f2"
         },
         "url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/git/commits/e985068119eff5aa971a2a7db1c909899fb43ca0",
         "comment_count":0
      },
      "url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/commits/e985068119eff5aa971a2a7db1c909899fb43ca0",
      "html_url":"https://github.com/LivelyKernel/LivelyKernel/commit/e985068119eff5aa971a2a7db1c909899fb43ca0",
      "comments_url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/commits/e985068119eff5aa971a2a7db1c909899fb43ca0/comments",
      "author":{
         "login":"rksm",
         "id":467450,
         "avatar_url":"https://gravatar.com/avatar/7e0fc9769fc4ec9b23b85da1639d5f31?d=https%3A%2F%2Fidenticons.github.com%2Ff5790be82a84c28f0e1fadaed4826b78.png&r=x",
         "gravatar_id":"7e0fc9769fc4ec9b23b85da1639d5f31",
         "url":"https://api.github.com/users/rksm",
         "html_url":"https://github.com/rksm",
         "followers_url":"https://api.github.com/users/rksm/followers",
         "following_url":"https://api.github.com/users/rksm/following{/other_user}",
         "gists_url":"https://api.github.com/users/rksm/gists{/gist_id}",
         "starred_url":"https://api.github.com/users/rksm/starred{/owner}{/repo}",
         "subscriptions_url":"https://api.github.com/users/rksm/subscriptions",
         "organizations_url":"https://api.github.com/users/rksm/orgs",
         "repos_url":"https://api.github.com/users/rksm/repos",
         "events_url":"https://api.github.com/users/rksm/events{/privacy}",
         "received_events_url":"https://api.github.com/users/rksm/received_events",
         "type":"User",
         "site_admin":false
      },
      "committer":{
         "login":"rksm",
         "id":467450,
         "avatar_url":"https://gravatar.com/avatar/7e0fc9769fc4ec9b23b85da1639d5f31?d=https%3A%2F%2Fidenticons.github.com%2Ff5790be82a84c28f0e1fadaed4826b78.png&r=x",
         "gravatar_id":"7e0fc9769fc4ec9b23b85da1639d5f31",
         "url":"https://api.github.com/users/rksm",
         "html_url":"https://github.com/rksm",
         "followers_url":"https://api.github.com/users/rksm/followers",
         "following_url":"https://api.github.com/users/rksm/following{/other_user}",
         "gists_url":"https://api.github.com/users/rksm/gists{/gist_id}",
         "starred_url":"https://api.github.com/users/rksm/starred{/owner}{/repo}",
         "subscriptions_url":"https://api.github.com/users/rksm/subscriptions",
         "organizations_url":"https://api.github.com/users/rksm/orgs",
         "repos_url":"https://api.github.com/users/rksm/repos",
         "events_url":"https://api.github.com/users/rksm/events{/privacy}",
         "received_events_url":"https://api.github.com/users/rksm/received_events",
         "type":"User",
         "site_admin":false
      },
      "parents":[
         {
            "sha":"a60c880d99e76017ef9e7120defc9601616624e2",
            "url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/commits/a60c880d99e76017ef9e7120defc9601616624e2",
            "html_url":"https://github.com/LivelyKernel/LivelyKernel/commit/a60c880d99e76017ef9e7120defc9601616624e2"
         }
      ],
      "stats":{
         "total":10,
         "additions":9,
         "deletions":1
      },
      "files":[
         {
            "sha":"5a11baccd8cd74ad1804201b2f12c6c988ea0c20",
            "filename":"core/lively/defaultconfig.js",
            "status":"modified",
            "additions":2,
            "deletions":1,
            "changes":3,
            "blob_url":"https://github.com/LivelyKernel/LivelyKernel/blob/e985068119eff5aa971a2a7db1c909899fb43ca0/core/lively/defaultconfig.js",
            "raw_url":"https://github.com/LivelyKernel/LivelyKernel/raw/e985068119eff5aa971a2a7db1c909899fb43ca0/core/lively/defaultconfig.js",
            "contents_url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/contents/core/lively/defaultconfig.js?ref=e985068119eff5aa971a2a7db1c909899fb43ca0",
            "patch":"@@ -407,7 +407,7 @@ Config.addOptions(\n \n     // Modules\n     [\"modulesBeforeWorldLoad\", [\"lively.morphic.HTML\"], \"evaluated before all changes\"],\n-    [\"modulesOnWorldLoad\", [\"lively.ide\", \"lively.IPad\", \"lively.net.SessionTracker\", \"lively.net.Wiki\", \"lively.ide.codeeditor.Completions\", \"lively.ChangeSets\"], \"evaluated before world is setup\"],\n+    [\"modulesOnWorldLoad\", [\"lively.ide\", \"lively.IPad\", \"lively.net.SessionTracker\", \"lively.net.Wiki\", \"lively.ChangeSets\"], \"evaluated before world is setup\"],\n     [\"codeBase\", Config.codeBase && Config.codeBase != '' ? Config.codeBase : Config.getDocumentDirectory()],\n     [\"showModuleDefStack\", true, \"so modules know where they were required from\"],\n     [\"loadUserConfig\", true, \"for sth like jens/config.js, used in lively.bootstrap\"],\n@@ -492,6 +492,7 @@ Config.addOptions(\n     ['aceDefaultEnableAutocompletion', true, \"Should autocompletion be enabled?\"],\n     ['aceDefaultShowWarnings', true, \"Should autocompletion be enabled?\"],\n     ['aceDefaultShowErrors', true, \"Show syntax errors in programming language mode?\"],\n+    ['computeCodeEditorCompletionsOnStartup', true, 'when enabled all JS files udner core/ are read on startup nd their content is used to compute word completions'],\n     ['showDoitErrorMessages', true, \"When a doit eval results in an error a error message pops up.\"],\n     ['improvedJavaScriptEval', false, \"Eval that changes semantics of how object literals and if statements are evaluated.\"],\n ],"
         },
         {
            "sha":"5143d7736545bb80a0d75cf8afcc31a09ed51b2d",
            "filename":"core/lively/ide/CodeEditor.js",
            "status":"modified",
            "additions":7,
            "deletions":0,
            "changes":7,
            "blob_url":"https://github.com/LivelyKernel/LivelyKernel/blob/e985068119eff5aa971a2a7db1c909899fb43ca0/core/lively/ide/CodeEditor.js",
            "raw_url":"https://github.com/LivelyKernel/LivelyKernel/raw/e985068119eff5aa971a2a7db1c909899fb43ca0/core/lively/ide/CodeEditor.js",
            "contents_url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/contents/core/lively/ide/CodeEditor.js?ref=e985068119eff5aa971a2a7db1c909899fb43ca0",
            "patch":"@@ -1598,4 +1598,11 @@ Object.extend(lively.ide, {\n     });\n })();\n \n+// startup hooks\n+(function setupCodeEditorCompletions() {\n+    if (lively.Config.get('computeCodeEditorCompletionsOnStartup')) {\n+        module(\"lively.ide.codeeditor.Completions\").load();\n+    }\n+})();\n+\n }); // end of module"
         }
      ]
   },
   {
      "sha":"a60c880d99e76017ef9e7120defc9601616624e2",
      "commit":{
         "author":{
            "name":"Robert Krahn",
            "email":"robert.krahn@gmail.com",
            "date":"2013-12-29T18:00:55Z"
         },
         "committer":{
            "name":"Robert Krahn",
            "email":"robert.krahn@gmail.com",
            "date":"2013-12-29T18:00:55Z"
         },
         "message":"bootstrap: cleaning script load logic",
         "tree":{
            "sha":"533dcc93bb93f76914c67bca2e805e5566fcbc9e",
            "url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/git/trees/533dcc93bb93f76914c67bca2e805e5566fcbc9e"
         },
         "url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/git/commits/a60c880d99e76017ef9e7120defc9601616624e2",
         "comment_count":0
      },
      "url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/commits/a60c880d99e76017ef9e7120defc9601616624e2",
      "html_url":"https://github.com/LivelyKernel/LivelyKernel/commit/a60c880d99e76017ef9e7120defc9601616624e2",
      "comments_url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/commits/a60c880d99e76017ef9e7120defc9601616624e2/comments",
      "author":{
         "login":"rksm",
         "id":467450,
         "avatar_url":"https://gravatar.com/avatar/7e0fc9769fc4ec9b23b85da1639d5f31?d=https%3A%2F%2Fidenticons.github.com%2Ff5790be82a84c28f0e1fadaed4826b78.png&r=x",
         "gravatar_id":"7e0fc9769fc4ec9b23b85da1639d5f31",
         "url":"https://api.github.com/users/rksm",
         "html_url":"https://github.com/rksm",
         "followers_url":"https://api.github.com/users/rksm/followers",
         "following_url":"https://api.github.com/users/rksm/following{/other_user}",
         "gists_url":"https://api.github.com/users/rksm/gists{/gist_id}",
         "starred_url":"https://api.github.com/users/rksm/starred{/owner}{/repo}",
         "subscriptions_url":"https://api.github.com/users/rksm/subscriptions",
         "organizations_url":"https://api.github.com/users/rksm/orgs",
         "repos_url":"https://api.github.com/users/rksm/repos",
         "events_url":"https://api.github.com/users/rksm/events{/privacy}",
         "received_events_url":"https://api.github.com/users/rksm/received_events",
         "type":"User",
         "site_admin":false
      },
      "committer":{
         "login":"rksm",
         "id":467450,
         "avatar_url":"https://gravatar.com/avatar/7e0fc9769fc4ec9b23b85da1639d5f31?d=https%3A%2F%2Fidenticons.github.com%2Ff5790be82a84c28f0e1fadaed4826b78.png&r=x",
         "gravatar_id":"7e0fc9769fc4ec9b23b85da1639d5f31",
         "url":"https://api.github.com/users/rksm",
         "html_url":"https://github.com/rksm",
         "followers_url":"https://api.github.com/users/rksm/followers",
         "following_url":"https://api.github.com/users/rksm/following{/other_user}",
         "gists_url":"https://api.github.com/users/rksm/gists{/gist_id}",
         "starred_url":"https://api.github.com/users/rksm/starred{/owner}{/repo}",
         "subscriptions_url":"https://api.github.com/users/rksm/subscriptions",
         "organizations_url":"https://api.github.com/users/rksm/orgs",
         "repos_url":"https://api.github.com/users/rksm/repos",
         "events_url":"https://api.github.com/users/rksm/events{/privacy}",
         "received_events_url":"https://api.github.com/users/rksm/received_events",
         "type":"User",
         "site_admin":false
      },
      "parents":[
         {
            "sha":"941da40cf39ff506df83a9ee86532fcfd904ea91",
            "url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/commits/941da40cf39ff506df83a9ee86532fcfd904ea91",
            "html_url":"https://github.com/LivelyKernel/LivelyKernel/commit/941da40cf39ff506df83a9ee86532fcfd904ea91"
         }
      ],
      "stats":{
         "total":162,
         "additions":69,
         "deletions":93
      },
      "files":[
         {
            "sha":"9a03e6cc493123122136a7b72ca89a9ca22edde0",
            "filename":"core/lively/bootstrap.js",
            "status":"modified",
            "additions":69,
            "deletions":93,
            "changes":162,
            "blob_url":"https://github.com/LivelyKernel/LivelyKernel/blob/a60c880d99e76017ef9e7120defc9601616624e2/core/lively/bootstrap.js",
            "raw_url":"https://github.com/LivelyKernel/LivelyKernel/raw/a60c880d99e76017ef9e7120defc9601616624e2/core/lively/bootstrap.js",
            "contents_url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/contents/core/lively/bootstrap.js?ref=a60c880d99e76017ef9e7120defc9601616624e2",
            "patch":"@@ -507,6 +507,8 @@\n         XLINKNamespace: 'http:\\/\\/www.w3.org/1999/xlink',\n         LIVELYNamespace: 'http:\\/\\/www.experimentalstuff.com/Lively',\n \n+        loadedURLs: [],\n+\n         require: function(relPath) {\n             // for use with NodeJS\n             var pathLib = require('path'),\n@@ -535,24 +537,21 @@\n                 }\n             };\n         },\n+\n         loadJs: browserDetector.isNodejs() ?\n             function(url, onLoadCb, loadSync, okToUseCache, cacheQuery) {\n+                if (this.isLoading(url)) return null;\n+                this.markAsLoading(url);\n                 console.log('loading ' + url);\n                 var path = url;\n                 //var path = url.match(/(^http|^file):\\/\\/(.*)/)[2];\n                 var scriptEl = window.document.createElement(\"script\");\n                 scriptEl.src = path;\n                 window.document.body.appendChild(scriptEl);\n-                if (onLoadCb) {\n-                    scriptEl.onload = onLoadCb;\n-                }\n+                if (onLoadCb) scriptEl.onload = onLoadCb;\n                 return Global;\n             } :\n             function(url, onLoadCb, loadSync, okToUseCache, cacheQuery) {\n-                if (okToUseCache === undefined) okToUseCache = true;\n-                if (this.scriptInDOM(url)) {\n-                    var msg = 'script ' + url + ' already loaded or loading';\n-                    console.log(msg);\n                 // Deprecation: loading css files via loadJs is no longer\n                 // supported\n                 if (url.match(/\\.css$/) || url.match(/\\.css\\?/)) {\n@@ -560,75 +559,74 @@\n                     return null;\n                 }\n \n-                // adapt URL\n+                if (this.isLoading(url)) return null;\n+                this.markAsLoading(url);\n+\n+                if (okToUseCache === undefined) okToUseCache = true;\n+\n+                // DEPRECATED: adapt URL, for SVN-WebDAV support\n                 var exactUrl = url;\n                 if ((exactUrl.indexOf('!svn') <= 0) && !okToUseCache) {\n                     exactUrl = this.makeUncached(exactUrl, cacheQuery);\n                 }\n \n+                return this.loadViaXHR(loadSync, exactUrl, onLoadCb);\n+                // -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-\n+                // FIXME script loading currently not used\n                 // create and configure script tag\n-                var parentNode = this.findParentScriptNode(),\n-                    xmlNamespace = parentNode.namespaceURI, el;\n-\n-                if (css) {\n-                    el = document.createElementNS(xmlNamespace, 'link');\n-                    el.setAttributeNS(null, \"rel\", \"stylesheet\");\n-                    el.setAttributeNS(null, \"type\", \"text/css\");\n-                } else { //assuming js\n+                /*var parentNode = this.findParentScriptNode(),\n+                    xmlNamespace = parentNode.namespaceURI,\n                     el = document.createElementNS(xmlNamespace, 'script');\n-                    el.setAttributeNS(null, 'type', 'text/ecmascript');\n-                }\n+                el.setAttributeNS(null, 'type', 'text/ecmascript');\n                 parentNode.appendChild(el);\n                 el.setAttributeNS(null, 'id', url);\n-                console.log(exactUrl);\n                 return loadSync ?\n-                    this.loadSync(exactUrl, onLoadCb, el) :\n-                    this.loadAsync(exactUrl, onLoadCb, el);\n+                    this.loadSync(, el) :\n+                    this.loadAsync(exactUrl, onLoadCb, el);*/\n             },\n \n-        loadSync: function(url, onLoadCb, script) {\n-            if (this.isCSS(url)) {\n-                console.log('skipping eval for css: ' + url);\n-                if (typeof onLoadCb === 'function') onLoadCb();\n-                return;\n+        loadViaXHR: function(beSync, url, onLoadCb) {\n+            this.getViaXHR(beSync, url, function(err, content) {\n+                if (err) {\n+                    console.error('error loading %s: %s', url, err);\n+                } else {\n+                    JSLoader.evalJavaScriptFromURL(url, content, onLoadCb);\n+                }\n+            });\n+            return null;\n+        },\n+\n+        loadViaScript: function(url, onLoadCb, script) {\n+            // -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-\n+            // FIXME script loading currently not used\n+            /*if (script.namespaceURI === this.SVGNamespace) {\n+                script.setAttributeNS(this.XLINKNamespace, 'href', url);\n+            } else {\n+                //...\n             }\n-            this.doLoadJS(url, onLoadCb, this.getSync(url));\n+            if (onLoadCb) script.onload = onLoadCb;\n+            script.setAttributeNS(null, 'async', true);*/\n         },\n \n-        doLoadJS: function(url, onLoadCb, source) {\n+        evalJavaScriptFromURL: function(url, source, onLoadCb) {\n             if (!source) { console.warn('Could not load %s', url); return; }\n             Global.livelySources[url] = source;\n             try {\n                 eval.call(Global, source + \"\\n//# sourceURL=\" + url);\n             } catch (e) {\n-                console.error('Error when loading %s: %s\\n%s', url, e, e.stack);\n+                console.error('Error when evaluating %s: %s\\n%s', url, e, e.stack);\n             }\n             if (typeof onLoadCb === 'function') onLoadCb();\n         },\n-        \n-        loadAsync: function(url, onLoadCb, script) {\n-            if (script.namespaceURI === this.SVGNamespace) {\n-                script.setAttributeNS(this.XLINKNamespace, 'href', url);\n-            } else if (this.isCSS(url)) {\n-                script.setAttribute(\"href\", url);\n-                if (typeof onLoadCb === 'function') onLoadCb(); // huh?\n-            } else\n-                return this.getAsync(url, onLoadCb, this.doLoadJS);\n-                \n-            if (onLoadCb) script.onload = onLoadCb;\n-            script.setAttributeNS(null, 'async', true);\n-        },\n \n         loadCombinedModules: function(combinedFileUrl, callback, hash) {\n             // If several modules are combined in one file they can be loaded\n             // with this method. The method will ensure that all included\n             // modules are loaded. If they have required modules that are not\n             // included in the combined file, those will be loaded as well.\n-\n             var lively = Global.lively,\n                 originalLoader = this,\n                 combinedLoader = {\n-\n                     expectToLoadModules: function(relativePaths) {\n                         // urls like http://foo.org/lively/Text.js\n                         var i, len = relativePaths.length;\n@@ -694,8 +692,7 @@\n \n             // while loading the combined file we replace the loader\n             Global.JSLoader = combinedLoader;\n-            this.loadJs(combinedFileUrl, callCallback,\n-                        false, false, hash);\n+            this.loadJs(combinedFileUrl, callCallback, false, false, hash);\n         },\n \n         loadAll: function(urls, cb) {\n@@ -726,18 +723,25 @@\n             return document.getElementsByTagName('script');\n         },\n \n+        isLoading: function(url) {\n+            url = this.makeAbsolute(url);\n+            return this.loadedURLs.indexOf(url) > -1\n+                || this.scriptInDOM(url);\n+        },\n+\n+        markAsLoading: function(url) {\n+            this.loadedURLs.push(this.makeAbsolute(url));\n+        },\n+\n         scriptInDOM: function(url) {\n             return this.scriptsThatLinkTo(url).length > 0;\n         },\n \n         scriptsThatLinkTo: function(url) {\n-            var scriptsFound = [],\n-                allScripts = this.getScripts();\n-            for (var i = 0; i < allScripts.length; i++) {\n-                if (this.scriptElementLinksTo(allScripts[i], url)) {\n+            var scriptsFound = [], allScripts = this.getScripts();\n+            for (var i = 0; i < allScripts.length; i++)\n+                if (this.scriptElementLinksTo(allScripts[i], url))\n                     scriptsFound.push(allScripts[i]);\n-                }\n-            }\n             return scriptsFound;\n         },\n \n@@ -782,10 +786,12 @@\n \n         dirOfURL: function(url) {\n             return this.removeQueries(url)\n-                       .substring(0, url.lastIndexOf('/') + 1);\n+               .substring(0, url.lastIndexOf('/') + 1);\n         },\n \n         makeAbsolute: function(urlString) {\n+            // if urlString points to a relative resource then prepend the\n+            // current protocol, port, path to it to make it absolute\n             urlString = this.removeQueries(urlString);\n             if (!urlString.match(/^http|^file/)) {\n                 // make absolute\n@@ -795,6 +801,7 @@\n         },\n \n         makeUncached: function(urlString, cacheQuery) {\n+            // append a timestamp to the url to force a reload\n             cacheQuery = cacheQuery || new Date().getTime();\n             return urlString\n                  + (urlString.indexOf('?') === -1 ? '?' : '&')\n@@ -808,50 +815,19 @@\n             }\n         },\n \n-        getAsync: function(url, onLoadCb, onSuccess) {\n+        getViaXHR: function(beSync, url, callback) {\n             var xhr = new XMLHttpRequest();\n-            xhr.open(\"GET\", url, true);\n-            xhr.onload = function (e) {\n-              if (xhr.readyState === 4) {\n-                if (xhr.status === 200) {\n-                    onSuccess(url, onLoadCb, xhr.responseText);\n-                } else {\n-                  console.error(xhr.statusText);\n-                }\n-              }\n+            xhr.open(\"GET\", url, !beSync);\n+            xhr.onload = function() {\n+                if (xhr.readyState !== 4) return;\n+                callback(\n+                    xhr.status >= 400 ? xhr.statusText : null,\n+                    xhr.responseText)\n             };\n-            xhr.onerror = function (e) {\n-              console.error(xhr.statusText);\n+            xhr.onerror = function(e) {\n+                callback(xhr.statusText, null);\n             };\n             xhr.send(null);\n-        },\n-        \n-        getSyncReq: function(url, forceUncached) {\n-            if (typeof WebResource !== \"undefined\") {\n-                var webR = new WebResource(url);\n-                if (forceUncached) webR.forceUncached();\n-                var webRGet = webR.get();\n-                return {\n-                    status: webRGet.status.code(),\n-                    responseText: webRGet.content\n-                };\n-            }\n-\n-            var req = new XMLHttpRequest();\n-            if (forceUncached) url = this.makeUncached(url);\n-            req.open('GET', url, false/*sync*/);\n-            req.send();\n-            return req;\n-        },\n-\n-        getSync: function(url, forceUncached) {\n-            var req = this.getSyncReq(url, forceUncached);\n-            return req.status < 400 ? req.responseText : null;\n-        },\n-\n-        getSyncStatus: function(url, forceUncached) {\n-            return this.getSyncReq(url, forceUncached).status;\n-        },\n         }\n \n     };"
         }
      ]
   },
   {
      "sha":"39617f270ca93ff12f7722a32a9ccb66bdecf15d",
      "commit":{
         "author":{
            "name":"Robert Krahn",
            "email":"robert.krahn@gmail.com",
            "date":"2013-12-29T18:17:18Z"
         },
         "committer":{
            "name":"Robert Krahn",
            "email":"robert.krahn@gmail.com",
            "date":"2013-12-29T18:17:18Z"
         },
         "message":"ide: completions are again computed in worker code. This won't prolong loading and will use all avaiable sources for word completion computation. Eventually this will be moved into a subserver.\n\nreverts part of #9d131d7 and #1fc1ba3",
         "tree":{
            "sha":"b57083d046ebf356a9d3b9834b432fb6cf1dca9f",
            "url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/git/trees/b57083d046ebf356a9d3b9834b432fb6cf1dca9f"
         },
         "url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/git/commits/39617f270ca93ff12f7722a32a9ccb66bdecf15d",
         "comment_count":0
      },
      "url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/commits/39617f270ca93ff12f7722a32a9ccb66bdecf15d",
      "html_url":"https://github.com/LivelyKernel/LivelyKernel/commit/39617f270ca93ff12f7722a32a9ccb66bdecf15d",
      "comments_url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/commits/39617f270ca93ff12f7722a32a9ccb66bdecf15d/comments",
      "author":{
         "login":"rksm",
         "id":467450,
         "avatar_url":"https://gravatar.com/avatar/7e0fc9769fc4ec9b23b85da1639d5f31?d=https%3A%2F%2Fidenticons.github.com%2Ff5790be82a84c28f0e1fadaed4826b78.png&r=x",
         "gravatar_id":"7e0fc9769fc4ec9b23b85da1639d5f31",
         "url":"https://api.github.com/users/rksm",
         "html_url":"https://github.com/rksm",
         "followers_url":"https://api.github.com/users/rksm/followers",
         "following_url":"https://api.github.com/users/rksm/following{/other_user}",
         "gists_url":"https://api.github.com/users/rksm/gists{/gist_id}",
         "starred_url":"https://api.github.com/users/rksm/starred{/owner}{/repo}",
         "subscriptions_url":"https://api.github.com/users/rksm/subscriptions",
         "organizations_url":"https://api.github.com/users/rksm/orgs",
         "repos_url":"https://api.github.com/users/rksm/repos",
         "events_url":"https://api.github.com/users/rksm/events{/privacy}",
         "received_events_url":"https://api.github.com/users/rksm/received_events",
         "type":"User",
         "site_admin":false
      },
      "committer":{
         "login":"rksm",
         "id":467450,
         "avatar_url":"https://gravatar.com/avatar/7e0fc9769fc4ec9b23b85da1639d5f31?d=https%3A%2F%2Fidenticons.github.com%2Ff5790be82a84c28f0e1fadaed4826b78.png&r=x",
         "gravatar_id":"7e0fc9769fc4ec9b23b85da1639d5f31",
         "url":"https://api.github.com/users/rksm",
         "html_url":"https://github.com/rksm",
         "followers_url":"https://api.github.com/users/rksm/followers",
         "following_url":"https://api.github.com/users/rksm/following{/other_user}",
         "gists_url":"https://api.github.com/users/rksm/gists{/gist_id}",
         "starred_url":"https://api.github.com/users/rksm/starred{/owner}{/repo}",
         "subscriptions_url":"https://api.github.com/users/rksm/subscriptions",
         "organizations_url":"https://api.github.com/users/rksm/orgs",
         "repos_url":"https://api.github.com/users/rksm/repos",
         "events_url":"https://api.github.com/users/rksm/events{/privacy}",
         "received_events_url":"https://api.github.com/users/rksm/received_events",
         "type":"User",
         "site_admin":false
      },
      "parents":[
         {
            "sha":"e985068119eff5aa971a2a7db1c909899fb43ca0",
            "url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/commits/e985068119eff5aa971a2a7db1c909899fb43ca0",
            "html_url":"https://github.com/LivelyKernel/LivelyKernel/commit/e985068119eff5aa971a2a7db1c909899fb43ca0"
         }
      ],
      "stats":{
         "total":102,
         "additions":59,
         "deletions":43
      },
      "files":[
         {
            "sha":"302d0ca5b0fc68a1e3ad9658bda607d68b05545d",
            "filename":"core/lively/ide/codeeditor/Completions.js",
            "status":"modified",
            "additions":59,
            "deletions":43,
            "changes":102,
            "blob_url":"https://github.com/LivelyKernel/LivelyKernel/blob/39617f270ca93ff12f7722a32a9ccb66bdecf15d/core/lively/ide/codeeditor/Completions.js",
            "raw_url":"https://github.com/LivelyKernel/LivelyKernel/raw/39617f270ca93ff12f7722a32a9ccb66bdecf15d/core/lively/ide/codeeditor/Completions.js",
            "contents_url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/contents/core/lively/ide/codeeditor/Completions.js?ref=39617f270ca93ff12f7722a32a9ccb66bdecf15d",
            "patch":"@@ -1,55 +1,71 @@\n-module('lively.ide.codeeditor.Completions').requires('lively.ide.CodeEditor').toRun(function() {\n+module('lively.ide.codeeditor.Completions').requires('lively.ide.codeeditor.ace').toRun(function() {\n+\n+module('lively.ide');\n \n (function setupCompletions() {\n-    if (UserAgent.isNodejs) return;\n+    if (UserAgent.isNodejs || UserAgent.isWorker) return;\n+\n+    var words = {};\n+    function wordsFromFiles(next) {\n+        Functions.forkInWorker(\n+            function(whenDone, options) {\n+                module('lively.lang.Closure').load();\n+                module('lively.ide.CommandLineInterface').load();\n+                function wordsFromFiles() {\n+                    var files = lively.ide.CommandLineSearch.findFiles('*js', {sync:true}),\n+                        livelyJSFiles = files.grep('core/'),\n+                        urls = livelyJSFiles.map(function(fn) { return URL.root.withFilename(fn).withRelativePartsResolved(); }),\n+                        splitRegex = /[^a-zA-Z_0-9\\$\\-]+/,\n+                        words = {}, parseTimes = {};\n+                    urls.forEach(function(url) {\n+                        var t1 = new Date(),\n+                            content = url.asWebResource().get().content,\n+                            wordsInFile = content.split(splitRegex);\n+                        wordsInFile.forEach(function(word) {\n+                            if (word.length === 0) return;\n+                            var first = word[0].toLowerCase();\n+                            if (!words[first]) words[first] = {};\n+                            if (!words[first][word]) words[first][word] = 0;\n+                            words[first][word]++;\n+                        });\n+                        parseTimes[url] = (new Date() - t1);\n+                    });\n+                    return words;\n+                }\n+                try { whenDone(null, wordsFromFiles()); } catch(e) { whenDone(e.stack, null); }\n+            }, {args: [], whenDone: function(err, result) { if (err) show(err); words = result; next(); }\n+        });\n+    }\n \n-    lively.whenLoaded(function(world) {\n-        var sources = Object.values(Global.livelySources),\n-            splitRegex = /[^a-zA-Z_0-9\\$\\-]+/,\n-            words = {};\n-        for (var i = -1; i < sources.length; i++) {\n-            var source = sources[i];\n-            if(!source)\n-                continue;\n-            var wordsInFile = source.split(splitRegex);\n-            wordsInFile.forEach(function(word) {\n-                if (word.length === 0) return;\n-                var first = word[0].toLowerCase(),\n-                    bucketForFirst = words[first];\n-                if (!bucketForFirst) {\n-                    bucketForFirst = words[first] = {};\n-                    bucketForFirst[word] = 1;\n-                } else\n-                    if(bucketForFirst[word])\n-                        bucketForFirst[word]++;\n-                    else\n-                        bucketForFirst[word] = 1;\n-            });\n-        }\n-    \n+    function installCompleter(next) {\n         // 1) define completer\n         lively.ide.WordCompleter = {wordsFromFiles: words};\n-        lively.ide.WordCompleter.getCompletions = function(editor, session, pos, prefix, callback) {\n-            if (prefix.length === 0) { callback(null, []); return }\n-            var startLetter = prefix[0].toLowerCase(),\n-                wordList = this.wordsFromFiles[startLetter], result = [];\n-            for (var word in wordList) {\n-                if (word.lastIndexOf(prefix, 0) !== 0) continue;\n-                result.push({\n-                    name: word,\n-                    value: word,\n-                    score: wordList[word],\n-                    meta: \"lively\"\n-                });\n+        Object.extend(lively.ide.WordCompleter, {\n+            getCompletions: function(editor, session, pos, prefix, callback) {\n+                if (prefix.length === 0) { callback(null, []); return }\n+                var startLetter = prefix[0].toLowerCase(),\n+                    wordList = this.wordsFromFiles[startLetter], result = [];\n+                for (var word in wordList) {\n+                    if (word.lastIndexOf(prefix, 0) !== 0) continue;\n+                    result.push({\n+                        name: word,\n+                        value: word,\n+                        score: wordList[word],\n+                        meta: \"lively\"\n+                    });\n+                }\n+                callback(null, result);\n             }\n-            callback(null, result);\n-        }\n+        });\n         // 2) register completer\n         var langTools = lively.ide.ace.require('ace/ext/language_tools');\n         langTools.addCompleter(lively.ide.WordCompleter);\n-\t\talertOK('Word completion installed!');\n-\t});\n+        next();\n+    }\n+\n+    function done(next) { alertOK('Word completion installed!'); next(); }\n \n+    [wordsFromFiles, installCompleter, done].doAndContinue()\n })();\n \n-}) // end of module\n\\ No newline at end of file\n+}) // end of module"
         }
      ]
   },
   {
      "sha":"f9e662e26c16314870dc5c9d2965c8f726e6cd01",
      "commit":{
         "author":{
            "name":"Robert Krahn",
            "email":"robert.krahn@gmail.com",
            "date":"2013-12-29T18:27:49Z"
         },
         "committer":{
            "name":"Robert Krahn",
            "email":"robert.krahn@gmail.com",
            "date":"2013-12-29T18:27:49Z"
         },
         "message":"bootstrap: allow JS scripts to be loaded via script tags again. This fixes cross-domain code loading and JSONP support. Also remove Global.livelySources as it is not used by completions anymore",
         "tree":{
            "sha":"0c8c351237c9e0ebcd0d64358d5e46bda9c1da38",
            "url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/git/trees/0c8c351237c9e0ebcd0d64358d5e46bda9c1da38"
         },
         "url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/git/commits/f9e662e26c16314870dc5c9d2965c8f726e6cd01",
         "comment_count":0
      },
      "url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/commits/f9e662e26c16314870dc5c9d2965c8f726e6cd01",
      "html_url":"https://github.com/LivelyKernel/LivelyKernel/commit/f9e662e26c16314870dc5c9d2965c8f726e6cd01",
      "comments_url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/commits/f9e662e26c16314870dc5c9d2965c8f726e6cd01/comments",
      "author":{
         "login":"rksm",
         "id":467450,
         "avatar_url":"https://gravatar.com/avatar/7e0fc9769fc4ec9b23b85da1639d5f31?d=https%3A%2F%2Fidenticons.github.com%2Ff5790be82a84c28f0e1fadaed4826b78.png&r=x",
         "gravatar_id":"7e0fc9769fc4ec9b23b85da1639d5f31",
         "url":"https://api.github.com/users/rksm",
         "html_url":"https://github.com/rksm",
         "followers_url":"https://api.github.com/users/rksm/followers",
         "following_url":"https://api.github.com/users/rksm/following{/other_user}",
         "gists_url":"https://api.github.com/users/rksm/gists{/gist_id}",
         "starred_url":"https://api.github.com/users/rksm/starred{/owner}{/repo}",
         "subscriptions_url":"https://api.github.com/users/rksm/subscriptions",
         "organizations_url":"https://api.github.com/users/rksm/orgs",
         "repos_url":"https://api.github.com/users/rksm/repos",
         "events_url":"https://api.github.com/users/rksm/events{/privacy}",
         "received_events_url":"https://api.github.com/users/rksm/received_events",
         "type":"User",
         "site_admin":false
      },
      "committer":{
         "login":"rksm",
         "id":467450,
         "avatar_url":"https://gravatar.com/avatar/7e0fc9769fc4ec9b23b85da1639d5f31?d=https%3A%2F%2Fidenticons.github.com%2Ff5790be82a84c28f0e1fadaed4826b78.png&r=x",
         "gravatar_id":"7e0fc9769fc4ec9b23b85da1639d5f31",
         "url":"https://api.github.com/users/rksm",
         "html_url":"https://github.com/rksm",
         "followers_url":"https://api.github.com/users/rksm/followers",
         "following_url":"https://api.github.com/users/rksm/following{/other_user}",
         "gists_url":"https://api.github.com/users/rksm/gists{/gist_id}",
         "starred_url":"https://api.github.com/users/rksm/starred{/owner}{/repo}",
         "subscriptions_url":"https://api.github.com/users/rksm/subscriptions",
         "organizations_url":"https://api.github.com/users/rksm/orgs",
         "repos_url":"https://api.github.com/users/rksm/repos",
         "events_url":"https://api.github.com/users/rksm/events{/privacy}",
         "received_events_url":"https://api.github.com/users/rksm/received_events",
         "type":"User",
         "site_admin":false
      },
      "parents":[
         {
            "sha":"39617f270ca93ff12f7722a32a9ccb66bdecf15d",
            "url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/commits/39617f270ca93ff12f7722a32a9ccb66bdecf15d",
            "html_url":"https://github.com/LivelyKernel/LivelyKernel/commit/39617f270ca93ff12f7722a32a9ccb66bdecf15d"
         }
      ],
      "stats":{
         "total":35,
         "additions":16,
         "deletions":19
      },
      "files":[
         {
            "sha":"f670cc79091a58f04a0e574a029224278733d8c7",
            "filename":"core/lively/bootstrap.js",
            "status":"modified",
            "additions":16,
            "deletions":19,
            "changes":35,
            "blob_url":"https://github.com/LivelyKernel/LivelyKernel/blob/f9e662e26c16314870dc5c9d2965c8f726e6cd01/core/lively/bootstrap.js",
            "raw_url":"https://github.com/LivelyKernel/LivelyKernel/raw/f9e662e26c16314870dc5c9d2965c8f726e6cd01/core/lively/bootstrap.js",
            "contents_url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/contents/core/lively/bootstrap.js?ref=f9e662e26c16314870dc5c9d2965c8f726e6cd01",
            "patch":"@@ -500,7 +500,6 @@\n         }\n     };\n \n-    Global.livelySources = {};\n     Global.JSLoader = {\n \n         SVGNamespace: 'http:\\/\\/www.w3.org/2000/svg',\n@@ -570,19 +569,9 @@\n                     exactUrl = this.makeUncached(exactUrl, cacheQuery);\n                 }\n \n-                return this.loadViaXHR(loadSync, exactUrl, onLoadCb);\n-                // -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-\n-                // FIXME script loading currently not used\n-                // create and configure script tag\n-                /*var parentNode = this.findParentScriptNode(),\n-                    xmlNamespace = parentNode.namespaceURI,\n-                    el = document.createElementNS(xmlNamespace, 'script');\n-                el.setAttributeNS(null, 'type', 'text/ecmascript');\n-                parentNode.appendChild(el);\n-                el.setAttributeNS(null, 'id', url);\n                 return loadSync ?\n-                    this.loadSync(, el) :\n-                    this.loadAsync(exactUrl, onLoadCb, el);*/\n+                    this.loadViaXHR(loadSync, exactUrl, onLoadCb) :\n+                    this.loadViaScript(exactUrl, onLoadCb);\n             },\n \n         loadViaXHR: function(beSync, url, onLoadCb) {\n@@ -596,22 +585,30 @@\n             return null;\n         },\n \n-        loadViaScript: function(url, onLoadCb, script) {\n-            // -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-\n-            // FIXME script loading currently not used\n-            /*if (script.namespaceURI === this.SVGNamespace) {\n+        loadViaScript: function(url, onLoadCb) {\n+            // load JS code by inserting a <script src=\"...\" /> tag into the\n+            // DOM. This allows cross domain script loading and JSONP\n+            var parentNode = this.findParentScriptNode(),\n+                xmlNamespace = parentNode.namespaceURI,\n+                script = document.createElementNS(xmlNamespace, 'script');\n+            script.setAttributeNS(null, 'type', 'text/ecmascript');\n+            parentNode.appendChild(script);\n+            script.setAttributeNS(null, 'id', url);\n+            if (script.namespaceURI === this.SVGNamespace) {\n                 script.setAttributeNS(this.XLINKNamespace, 'href', url);\n             } else {\n-                //...\n+                script.setAttribute('src', url);\n             }\n             if (onLoadCb) script.onload = onLoadCb;\n-            script.setAttributeNS(null, 'async', true);*/\n+            script.setAttributeNS(null, 'async', true);\n         },\n \n         evalJavaScriptFromURL: function(url, source, onLoadCb) {\n             if (!source) { console.warn('Could not load %s', url); return; }\n             Global.livelySources[url] = source;\n             try {\n+                // adding sourceURL improves debugging as it will be used\n+                // in stack traces by some debuggers\n                 eval.call(Global, source + \"\\n//# sourceURL=\" + url);\n             } catch (e) {\n                 console.error('Error when evaluating %s: %s\\n%s', url, e, e.stack);"
         }
      ]
   },
   {
      "sha":"ba40f0eed05ca88f25d82790ee35c0a54c5c6e3f",
      "commit":{
         "author":{
            "name":"Robert Krahn",
            "email":"robert.krahn@gmail.com",
            "date":"2013-12-29T18:36:45Z"
         },
         "committer":{
            "name":"Robert Krahn",
            "email":"robert.krahn@gmail.com",
            "date":"2013-12-29T18:36:45Z"
         },
         "message":"bootstrap: remove forgotten livelySources",
         "tree":{
            "sha":"fc827705bdf4a23b829ddc432991b144fd89b970",
            "url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/git/trees/fc827705bdf4a23b829ddc432991b144fd89b970"
         },
         "url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/git/commits/ba40f0eed05ca88f25d82790ee35c0a54c5c6e3f",
         "comment_count":0
      },
      "url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/commits/ba40f0eed05ca88f25d82790ee35c0a54c5c6e3f",
      "html_url":"https://github.com/LivelyKernel/LivelyKernel/commit/ba40f0eed05ca88f25d82790ee35c0a54c5c6e3f",
      "comments_url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/commits/ba40f0eed05ca88f25d82790ee35c0a54c5c6e3f/comments",
      "author":{
         "login":"rksm",
         "id":467450,
         "avatar_url":"https://gravatar.com/avatar/7e0fc9769fc4ec9b23b85da1639d5f31?d=https%3A%2F%2Fidenticons.github.com%2Ff5790be82a84c28f0e1fadaed4826b78.png&r=x",
         "gravatar_id":"7e0fc9769fc4ec9b23b85da1639d5f31",
         "url":"https://api.github.com/users/rksm",
         "html_url":"https://github.com/rksm",
         "followers_url":"https://api.github.com/users/rksm/followers",
         "following_url":"https://api.github.com/users/rksm/following{/other_user}",
         "gists_url":"https://api.github.com/users/rksm/gists{/gist_id}",
         "starred_url":"https://api.github.com/users/rksm/starred{/owner}{/repo}",
         "subscriptions_url":"https://api.github.com/users/rksm/subscriptions",
         "organizations_url":"https://api.github.com/users/rksm/orgs",
         "repos_url":"https://api.github.com/users/rksm/repos",
         "events_url":"https://api.github.com/users/rksm/events{/privacy}",
         "received_events_url":"https://api.github.com/users/rksm/received_events",
         "type":"User",
         "site_admin":false
      },
      "committer":{
         "login":"rksm",
         "id":467450,
         "avatar_url":"https://gravatar.com/avatar/7e0fc9769fc4ec9b23b85da1639d5f31?d=https%3A%2F%2Fidenticons.github.com%2Ff5790be82a84c28f0e1fadaed4826b78.png&r=x",
         "gravatar_id":"7e0fc9769fc4ec9b23b85da1639d5f31",
         "url":"https://api.github.com/users/rksm",
         "html_url":"https://github.com/rksm",
         "followers_url":"https://api.github.com/users/rksm/followers",
         "following_url":"https://api.github.com/users/rksm/following{/other_user}",
         "gists_url":"https://api.github.com/users/rksm/gists{/gist_id}",
         "starred_url":"https://api.github.com/users/rksm/starred{/owner}{/repo}",
         "subscriptions_url":"https://api.github.com/users/rksm/subscriptions",
         "organizations_url":"https://api.github.com/users/rksm/orgs",
         "repos_url":"https://api.github.com/users/rksm/repos",
         "events_url":"https://api.github.com/users/rksm/events{/privacy}",
         "received_events_url":"https://api.github.com/users/rksm/received_events",
         "type":"User",
         "site_admin":false
      },
      "parents":[
         {
            "sha":"f9e662e26c16314870dc5c9d2965c8f726e6cd01",
            "url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/commits/f9e662e26c16314870dc5c9d2965c8f726e6cd01",
            "html_url":"https://github.com/LivelyKernel/LivelyKernel/commit/f9e662e26c16314870dc5c9d2965c8f726e6cd01"
         }
      ],
      "stats":{
         "total":1,
         "additions":0,
         "deletions":1
      },
      "files":[
         {
            "sha":"91052ae98390724d467c00fa3f3ebf41023a90c6",
            "filename":"core/lively/bootstrap.js",
            "status":"modified",
            "additions":0,
            "deletions":1,
            "changes":1,
            "blob_url":"https://github.com/LivelyKernel/LivelyKernel/blob/ba40f0eed05ca88f25d82790ee35c0a54c5c6e3f/core/lively/bootstrap.js",
            "raw_url":"https://github.com/LivelyKernel/LivelyKernel/raw/ba40f0eed05ca88f25d82790ee35c0a54c5c6e3f/core/lively/bootstrap.js",
            "contents_url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/contents/core/lively/bootstrap.js?ref=ba40f0eed05ca88f25d82790ee35c0a54c5c6e3f",
            "patch":"@@ -605,7 +605,6 @@\n \n         evalJavaScriptFromURL: function(url, source, onLoadCb) {\n             if (!source) { console.warn('Could not load %s', url); return; }\n-            Global.livelySources[url] = source;\n             try {\n                 // adding sourceURL improves debugging as it will be used\n                 // in stack traces by some debuggers"
         }
      ]
   },
   {
      "sha":"aaba8334a82a56adb59c9c0e2387529889967c53",
      "commit":{
         "author":{
            "name":"Robert Krahn",
            "email":"robert.krahn@gmail.com",
            "date":"2014-01-03T22:17:44Z"
         },
         "committer":{
            "name":"Robert Krahn",
            "email":"robert.krahn@gmail.com",
            "date":"2014-01-03T22:18:12Z"
         },
         "message":"ide/directory viewer: fix menu item invocation",
         "tree":{
            "sha":"aac3c308eaa2883f3a93ef9c76ba3c2858016beb",
            "url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/git/trees/aac3c308eaa2883f3a93ef9c76ba3c2858016beb"
         },
         "url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/git/commits/aaba8334a82a56adb59c9c0e2387529889967c53",
         "comment_count":0
      },
      "url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/commits/aaba8334a82a56adb59c9c0e2387529889967c53",
      "html_url":"https://github.com/LivelyKernel/LivelyKernel/commit/aaba8334a82a56adb59c9c0e2387529889967c53",
      "comments_url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/commits/aaba8334a82a56adb59c9c0e2387529889967c53/comments",
      "author":{
         "login":"rksm",
         "id":467450,
         "avatar_url":"https://gravatar.com/avatar/7e0fc9769fc4ec9b23b85da1639d5f31?d=https%3A%2F%2Fidenticons.github.com%2Ff5790be82a84c28f0e1fadaed4826b78.png&r=x",
         "gravatar_id":"7e0fc9769fc4ec9b23b85da1639d5f31",
         "url":"https://api.github.com/users/rksm",
         "html_url":"https://github.com/rksm",
         "followers_url":"https://api.github.com/users/rksm/followers",
         "following_url":"https://api.github.com/users/rksm/following{/other_user}",
         "gists_url":"https://api.github.com/users/rksm/gists{/gist_id}",
         "starred_url":"https://api.github.com/users/rksm/starred{/owner}{/repo}",
         "subscriptions_url":"https://api.github.com/users/rksm/subscriptions",
         "organizations_url":"https://api.github.com/users/rksm/orgs",
         "repos_url":"https://api.github.com/users/rksm/repos",
         "events_url":"https://api.github.com/users/rksm/events{/privacy}",
         "received_events_url":"https://api.github.com/users/rksm/received_events",
         "type":"User",
         "site_admin":false
      },
      "committer":{
         "login":"rksm",
         "id":467450,
         "avatar_url":"https://gravatar.com/avatar/7e0fc9769fc4ec9b23b85da1639d5f31?d=https%3A%2F%2Fidenticons.github.com%2Ff5790be82a84c28f0e1fadaed4826b78.png&r=x",
         "gravatar_id":"7e0fc9769fc4ec9b23b85da1639d5f31",
         "url":"https://api.github.com/users/rksm",
         "html_url":"https://github.com/rksm",
         "followers_url":"https://api.github.com/users/rksm/followers",
         "following_url":"https://api.github.com/users/rksm/following{/other_user}",
         "gists_url":"https://api.github.com/users/rksm/gists{/gist_id}",
         "starred_url":"https://api.github.com/users/rksm/starred{/owner}{/repo}",
         "subscriptions_url":"https://api.github.com/users/rksm/subscriptions",
         "organizations_url":"https://api.github.com/users/rksm/orgs",
         "repos_url":"https://api.github.com/users/rksm/repos",
         "events_url":"https://api.github.com/users/rksm/events{/privacy}",
         "received_events_url":"https://api.github.com/users/rksm/received_events",
         "type":"User",
         "site_admin":false
      },
      "parents":[
         {
            "sha":"7fa8a629cf353f70b5110217d185ac4e90238608",
            "url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/commits/7fa8a629cf353f70b5110217d185ac4e90238608",
            "html_url":"https://github.com/LivelyKernel/LivelyKernel/commit/7fa8a629cf353f70b5110217d185ac4e90238608"
         }
      ],
      "stats":{
         "total":5,
         "additions":3,
         "deletions":2
      },
      "files":[
         {
            "sha":"e86cb424306cf29124415cca7cad44824e184d5a",
            "filename":"core/lively/ide/tools/DirViewer.js",
            "status":"modified",
            "additions":3,
            "deletions":2,
            "changes":5,
            "blob_url":"https://github.com/LivelyKernel/LivelyKernel/blob/aaba8334a82a56adb59c9c0e2387529889967c53/core/lively/ide/tools/DirViewer.js",
            "raw_url":"https://github.com/LivelyKernel/LivelyKernel/raw/aaba8334a82a56adb59c9c0e2387529889967c53/core/lively/ide/tools/DirViewer.js",
            "contents_url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/contents/core/lively/ide/tools/DirViewer.js?ref=aaba8334a82a56adb59c9c0e2387529889967c53",
            "patch":"@@ -5464,9 +5464,10 @@ lively.BuildSpec('lively.ide.tools.DirViewer', {\n             }\n         };\n     // -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-\n+    if (!item) return [];\n     var j = lively.ide.CommandLineInterface.path.join;\n     var fullPath = j(this.dirState.path, item.path);\n-    if (!item || item.isDirectory) return [copyPath];\n+    if (item.isDirectory) return [copyPath];\n     return [copyPath, openInSCB, openInTextEditor];\n },\n     execItemAction: function execItemAction(item, n) {\n@@ -5475,7 +5476,7 @@ lively.BuildSpec('lively.ide.tools.DirViewer', {\n     action.exec();\n },\n         getMenuItemsFor: function getMenuItemsFor(fileItem) {\n-        this.getItemActionsFor(fileItem).map(function(ac) {\n+        return this.getItemActionsFor(fileItem).map(function(ac) {\n             return [ac.description, ac.exec]; })\n     },\n         goto: function goto(dir) {"
         }
      ]
   },
   {
      "sha":"f1c3e43204c6c0b03e5ff08774925a0814ffac19",
      "commit":{
         "author":{
            "name":"Robert Krahn",
            "email":"robert.krahn@gmail.com",
            "date":"2013-12-29T23:55:58Z"
         },
         "committer":{
            "name":"Robert Krahn",
            "email":"robert.krahn@gmail.com",
            "date":"2013-12-29T23:55:58Z"
         },
         "message":"firefox compat: improve key recognition of Firefox",
         "tree":{
            "sha":"454b06823ee5e9244cba0c6ea23e325efd0d595a",
            "url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/git/trees/454b06823ee5e9244cba0c6ea23e325efd0d595a"
         },
         "url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/git/commits/f1c3e43204c6c0b03e5ff08774925a0814ffac19",
         "comment_count":0
      },
      "url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/commits/f1c3e43204c6c0b03e5ff08774925a0814ffac19",
      "html_url":"https://github.com/LivelyKernel/LivelyKernel/commit/f1c3e43204c6c0b03e5ff08774925a0814ffac19",
      "comments_url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/commits/f1c3e43204c6c0b03e5ff08774925a0814ffac19/comments",
      "author":{
         "login":"rksm",
         "id":467450,
         "avatar_url":"https://gravatar.com/avatar/7e0fc9769fc4ec9b23b85da1639d5f31?d=https%3A%2F%2Fidenticons.github.com%2Ff5790be82a84c28f0e1fadaed4826b78.png&r=x",
         "gravatar_id":"7e0fc9769fc4ec9b23b85da1639d5f31",
         "url":"https://api.github.com/users/rksm",
         "html_url":"https://github.com/rksm",
         "followers_url":"https://api.github.com/users/rksm/followers",
         "following_url":"https://api.github.com/users/rksm/following{/other_user}",
         "gists_url":"https://api.github.com/users/rksm/gists{/gist_id}",
         "starred_url":"https://api.github.com/users/rksm/starred{/owner}{/repo}",
         "subscriptions_url":"https://api.github.com/users/rksm/subscriptions",
         "organizations_url":"https://api.github.com/users/rksm/orgs",
         "repos_url":"https://api.github.com/users/rksm/repos",
         "events_url":"https://api.github.com/users/rksm/events{/privacy}",
         "received_events_url":"https://api.github.com/users/rksm/received_events",
         "type":"User",
         "site_admin":false
      },
      "committer":{
         "login":"rksm",
         "id":467450,
         "avatar_url":"https://gravatar.com/avatar/7e0fc9769fc4ec9b23b85da1639d5f31?d=https%3A%2F%2Fidenticons.github.com%2Ff5790be82a84c28f0e1fadaed4826b78.png&r=x",
         "gravatar_id":"7e0fc9769fc4ec9b23b85da1639d5f31",
         "url":"https://api.github.com/users/rksm",
         "html_url":"https://github.com/rksm",
         "followers_url":"https://api.github.com/users/rksm/followers",
         "following_url":"https://api.github.com/users/rksm/following{/other_user}",
         "gists_url":"https://api.github.com/users/rksm/gists{/gist_id}",
         "starred_url":"https://api.github.com/users/rksm/starred{/owner}{/repo}",
         "subscriptions_url":"https://api.github.com/users/rksm/subscriptions",
         "organizations_url":"https://api.github.com/users/rksm/orgs",
         "repos_url":"https://api.github.com/users/rksm/repos",
         "events_url":"https://api.github.com/users/rksm/events{/privacy}",
         "received_events_url":"https://api.github.com/users/rksm/received_events",
         "type":"User",
         "site_admin":false
      },
      "parents":[
         {
            "sha":"ba40f0eed05ca88f25d82790ee35c0a54c5c6e3f",
            "url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/commits/ba40f0eed05ca88f25d82790ee35c0a54c5c6e3f",
            "html_url":"https://github.com/LivelyKernel/LivelyKernel/commit/ba40f0eed05ca88f25d82790ee35c0a54c5c6e3f"
         }
      ],
      "stats":{
         "total":87,
         "additions":87,
         "deletions":0
      },
      "files":[
         {
            "sha":"22a19e41cfbf9aba8e9c505a77bcc62455262129",
            "filename":"core/lively/morphic/Events.js",
            "status":"modified",
            "additions":87,
            "deletions":0,
            "changes":87,
            "blob_url":"https://github.com/LivelyKernel/LivelyKernel/blob/f1c3e43204c6c0b03e5ff08774925a0814ffac19/core/lively/morphic/Events.js",
            "raw_url":"https://github.com/LivelyKernel/LivelyKernel/raw/f1c3e43204c6c0b03e5ff08774925a0814ffac19/core/lively/morphic/Events.js",
            "contents_url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/contents/core/lively/morphic/Events.js?ref=f1c3e43204c6c0b03e5ff08774925a0814ffac19",
            "patch":"@@ -392,6 +392,85 @@ Object.extend(Event, {\n             function(evt) { return evt.which === 3 }\n     })(),\n \n+    manualKeyIdentifierLookup: (function() {\n+        // this is a fallback for browsers whose key events do not have a\n+        // \"keyIdentifier\" property.\n+        // FIXME: as of 12/30/2013 this is only tested on MacOS\n+        var keyCodeIdentifiers = {\n+            8: {identifier: \"Backspace\"},\n+            9: {identifier: \"Tab\"},\n+            13: {identifier: \"Enter\"},\n+            16: {identifier: \"Shift\"},\n+            17: {identifier: \"Control\"},\n+            18: {identifier: \"Alt\"},\n+            27: {identifier: \"Esc\"},\n+            32: {identifier: \"Space\"},\n+            37: {identifier: \"Left\"},\n+            38: {identifier: \"Up\"},\n+            39: {identifier: \"Right\"},\n+            40: {identifier: \"Down\"},\n+            46: {identifier: \"Del\"},\n+            48: {identifier: \"0\", shifted: \")\"},\n+            49: {identifier: \"1\", shifted: \"!\"},\n+            50: {identifier: \"2\", shifted: \"@\"},\n+            51: {identifier: \"3\", shifted: \"#\"},\n+            52: {identifier: \"4\", shifted: \"$\"},\n+            53: {identifier: \"5\", shifted: \"%\"},\n+            54: {identifier: \"6\", shifted: \"^\"},\n+            55: {identifier: \"7\", shifted: \"&\"},\n+            56: {identifier: \"8\", shifted: \"*\"},\n+            57: {identifier: \"9\", shifted: \"(\"},\n+            91: {identifier: \"Command\"},\n+            93: {identifier: \"Command\"},\n+            112: {identifier: \"F1\"},\n+            113: {identifier: \"F2\"},\n+            114: {identifier: \"F3\"},\n+            115: {identifier: \"F4\"},\n+            116: {identifier: \"F5\"},\n+            117: {identifier: \"F6\"},\n+            118: {identifier: \"F7\"},\n+            119: {identifier: \"F8\"},\n+            120: {identifier: \"F9\"},\n+            121: {identifier: \"F10\"},\n+            122: {identifier: \"F11\"},\n+            123: {identifier: \"F12\"},\n+            186: {identifier: \";\", shifted:\":\"},\n+            187: {identifier: \"=\", shifted:\"+\"},\n+            188: {identifier: \",\", shifted:\"<\"},\n+            189: {identifier: \"-\", shifted:\"_\"},\n+            190: {identifier: \".\", shifted:\">\"},\n+            191: {identifier: \"/\", shifted:\"?\"},\n+            192: {identifier: \"`\", shifted:\"~\"},\n+            219: {identifier: \"[\", shifted:\"{\"},\n+            220: {identifier: \"\\\\\", shifted:\"|\"},\n+            221: {identifier: \"]\", shifted:\"}\"},\n+            222: {identifier: \"'\", shifted:\"\\\"\"},\n+            224: {identifier: \"Command\"},\n+        }\n+        return function(evt) {\n+            var id, c = evt.keyCode,\n+                shifted = evt.isShiftDown(),\n+                ctrl = evt.isCtrlDown(),\n+                cmd = evt.isCommandKey(),\n+                alt = evt.isAltDown();\n+            if ((c >= 65 && c <= 90)) {\n+                id = String.fromCharCode(c).toUpperCase();\n+            } else {\n+                var codeId = keyCodeIdentifiers[c];\n+                if (codeId === undefined) id = \"???\";\n+                else {\n+                    id = shifted && codeId.shifted ?\n+                        codeId.shifted : codeId.identifier\n+                }\n+            }\n+            if (shifted && c !== 16) id = 'Shift-' + id;\n+            if (alt && c !== 18) id = 'Alt-' + id;\n+            if (ctrl) id = 'Control-' + id;\n+            if (cmd && c !== 91 && c !== 93 && c !== 224) id = 'Command-' + id;\n+            return id\n+        }\n+    })(),\n+\n     decodeKeyIdentifier: function(keyEvt) {\n         // trying to find out what the String representation of the key pressed\n         // in key event is.\n@@ -414,6 +493,14 @@ Object.extend(Event, {\n         //   ignoreKeys: Array // list of strings -- key(combos) to ignore\n         // }\n         options = options || {};\n+        if (evt.keyIdentifier === undefined) {\n+            var id = this.manualKeyIdentifierLookup(evt);\n+            if (options.ignoreModifiersIfNoCombo\n+             && [16,17,18,91,93,224].include(evt.keyCode)\n+             && !id.include('-')) return \"\";\n+            if (options.ignoreKeys && options.ignoreKeys.include(id)) return '';\n+            return id;\n+        }\n         var keyParts = [];\n         // modifiers\n         if (evt.metaKey || evt.keyIdentifier === 'Meta') keyParts.push('Command');"
         }
      ]
   },
   {
      "sha":"bfebf9418d3e9405c4ddc19f3f854ebe30dd6cd1",
      "commit":{
         "author":{
            "name":"Robert Krahn",
            "email":"robert.krahn@gmail.com",
            "date":"2013-12-26T17:52:51Z"
         },
         "committer":{
            "name":"Robert Krahn",
            "email":"robert.krahn@gmail.com",
            "date":"2014-01-03T22:15:16Z"
         },
         "message":"dialogs: when multiple dialogs are chained remember last focused morph correctly",
         "tree":{
            "sha":"a297273bac0586827edb0da0001302064ab1a177",
            "url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/git/trees/a297273bac0586827edb0da0001302064ab1a177"
         },
         "url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/git/commits/bfebf9418d3e9405c4ddc19f3f854ebe30dd6cd1",
         "comment_count":0
      },
      "url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/commits/bfebf9418d3e9405c4ddc19f3f854ebe30dd6cd1",
      "html_url":"https://github.com/LivelyKernel/LivelyKernel/commit/bfebf9418d3e9405c4ddc19f3f854ebe30dd6cd1",
      "comments_url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/commits/bfebf9418d3e9405c4ddc19f3f854ebe30dd6cd1/comments",
      "author":{
         "login":"rksm",
         "id":467450,
         "avatar_url":"https://gravatar.com/avatar/7e0fc9769fc4ec9b23b85da1639d5f31?d=https%3A%2F%2Fidenticons.github.com%2Ff5790be82a84c28f0e1fadaed4826b78.png&r=x",
         "gravatar_id":"7e0fc9769fc4ec9b23b85da1639d5f31",
         "url":"https://api.github.com/users/rksm",
         "html_url":"https://github.com/rksm",
         "followers_url":"https://api.github.com/users/rksm/followers",
         "following_url":"https://api.github.com/users/rksm/following{/other_user}",
         "gists_url":"https://api.github.com/users/rksm/gists{/gist_id}",
         "starred_url":"https://api.github.com/users/rksm/starred{/owner}{/repo}",
         "subscriptions_url":"https://api.github.com/users/rksm/subscriptions",
         "organizations_url":"https://api.github.com/users/rksm/orgs",
         "repos_url":"https://api.github.com/users/rksm/repos",
         "events_url":"https://api.github.com/users/rksm/events{/privacy}",
         "received_events_url":"https://api.github.com/users/rksm/received_events",
         "type":"User",
         "site_admin":false
      },
      "committer":{
         "login":"rksm",
         "id":467450,
         "avatar_url":"https://gravatar.com/avatar/7e0fc9769fc4ec9b23b85da1639d5f31?d=https%3A%2F%2Fidenticons.github.com%2Ff5790be82a84c28f0e1fadaed4826b78.png&r=x",
         "gravatar_id":"7e0fc9769fc4ec9b23b85da1639d5f31",
         "url":"https://api.github.com/users/rksm",
         "html_url":"https://github.com/rksm",
         "followers_url":"https://api.github.com/users/rksm/followers",
         "following_url":"https://api.github.com/users/rksm/following{/other_user}",
         "gists_url":"https://api.github.com/users/rksm/gists{/gist_id}",
         "starred_url":"https://api.github.com/users/rksm/starred{/owner}{/repo}",
         "subscriptions_url":"https://api.github.com/users/rksm/subscriptions",
         "organizations_url":"https://api.github.com/users/rksm/orgs",
         "repos_url":"https://api.github.com/users/rksm/repos",
         "events_url":"https://api.github.com/users/rksm/events{/privacy}",
         "received_events_url":"https://api.github.com/users/rksm/received_events",
         "type":"User",
         "site_admin":false
      },
      "parents":[
         {
            "sha":"f1c3e43204c6c0b03e5ff08774925a0814ffac19",
            "url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/commits/f1c3e43204c6c0b03e5ff08774925a0814ffac19",
            "html_url":"https://github.com/LivelyKernel/LivelyKernel/commit/f1c3e43204c6c0b03e5ff08774925a0814ffac19"
         }
      ],
      "stats":{
         "total":24,
         "additions":20,
         "deletions":4
      },
      "files":[
         {
            "sha":"65be79bec8053d9cc71171db9a2d7d405ef7497a",
            "filename":"core/lively/ide/codeeditor/Keyboard.js",
            "status":"modified",
            "additions":1,
            "deletions":0,
            "changes":1,
            "blob_url":"https://github.com/LivelyKernel/LivelyKernel/blob/bfebf9418d3e9405c4ddc19f3f854ebe30dd6cd1/core/lively/ide/codeeditor/Keyboard.js",
            "raw_url":"https://github.com/LivelyKernel/LivelyKernel/raw/bfebf9418d3e9405c4ddc19f3f854ebe30dd6cd1/core/lively/ide/codeeditor/Keyboard.js",
            "contents_url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/contents/core/lively/ide/codeeditor/Keyboard.js?ref=bfebf9418d3e9405c4ddc19f3f854ebe30dd6cd1",
            "patch":"@@ -415,6 +415,7 @@ Object.subclass('lively.ide.CodeEditor.KeyboardShortcuts',\n                     // Alt-G = gotoline will insert © in Mac OS, this prevents it\n                 }\n             }]);\n+            kbd.bindKey(\"Alt-Shift-.\", 'gotoend');\n     },\n \n     setupSearchBindings: function(kbd) {"
         },
         {
            "sha":"71d183722146f23252f2790adbceff6c179709b5",
            "filename":"core/lively/ide/tools/SelectionNarrowing.js",
            "status":"modified",
            "additions":2,
            "deletions":2,
            "changes":4,
            "blob_url":"https://github.com/LivelyKernel/LivelyKernel/blob/bfebf9418d3e9405c4ddc19f3f854ebe30dd6cd1/core/lively/ide/tools/SelectionNarrowing.js",
            "raw_url":"https://github.com/LivelyKernel/LivelyKernel/raw/bfebf9418d3e9405c4ddc19f3f854ebe30dd6cd1/core/lively/ide/tools/SelectionNarrowing.js",
            "contents_url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/contents/core/lively…e/tools/SelectionNarrowing.js?ref=bfebf9418d3e9405c4ddc19f3f854ebe30dd6cd1",
            "patch":"@@ -239,8 +239,8 @@ lively.BuildSpec('lively.ide.tools.NarrowingList', {\n         state = state || this.state;\n         candidate = candidate || this.getSelecteddCandidate(state);\n         actionIndex = actionIndex || 0;\n-        var action = this.runAction(state, actionIndex, candidate);\n         lively.bindings.signal(this, 'confirmedSelection', candidate);\n+        this.runAction(state, actionIndex, candidate);\n     },\n     valueFromListItem: function valueFromListItem(item) {\n         return item && typeof item.value !== \"undefined\" ? item.value : item;\n@@ -319,7 +319,7 @@ lively.BuildSpec('lively.ide.tools.NarrowingList', {\n                 completeInputOnRightArrow: spec.completeInputOnRightArrow,\n                 filters: [],\n                 focusedMorph: focusedMorph,\n-                refocusOnClose: spec.refocusOnClose || false\n+                refocusOnClose: spec.refocusOnClose || true\n             });\n         }\n         if (spec.init) spec.init(this, run); else run();"
         },
         {
            "sha":"821d7f498a7120bd90f17fc85f1cdf862244951c",
            "filename":"core/lively/morphic/Widgets.js",
            "status":"modified",
            "additions":17,
            "deletions":2,
            "changes":19,
            "blob_url":"https://github.com/LivelyKernel/LivelyKernel/blob/bfebf9418d3e9405c4ddc19f3f854ebe30dd6cd1/core/lively/morphic/Widgets.js",
            "raw_url":"https://github.com/LivelyKernel/LivelyKernel/raw/bfebf9418d3e9405c4ddc19f3f854ebe30dd6cd1/core/lively/morphic/Widgets.js",
            "contents_url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/contents/core/lively/morphic/Widgets.js?ref=bfebf9418d3e9405c4ddc19f3f854ebe30dd6cd1",
            "patch":"@@ -1850,6 +1850,7 @@ openReferencingMethodFinder: function () {\n             modalBounds = modalOwner.innerBounds(),\n             blockMorph = lively.morphic.Morph.makeRectangle(modalBounds),\n             transparentMorph = lively.morphic.Morph.makeRectangle(blockMorph.innerBounds());\n+        blockMorph.isModalMorph = true;\n         blockMorph.isEpiMorph = true;\n         blockMorph.applyStyle({\n             fill: null,\n@@ -1871,6 +1872,7 @@ openReferencingMethodFinder: function () {\n             modalOwner.visibleBounds() : modalOwner.innerBounds();\n         morph.align(morph.bounds().center(), alignBounds.center());\n         modalOwner.modalMorph = modalOwner.addMorph(blockMorph);\n+        blockMorph.modalTarget = morph;\n         lively.bindings.connect(morph, 'remove', blockMorph, 'remove');\n         morph.focus();\n         return morph;\n@@ -2761,10 +2763,23 @@ lively.morphic.App.subclass('lively.morphic.AbstractDialog',\n         lively.bindings.connect(this, 'result', this, 'triggerCallback');\n     },\n     triggerCallback: function(resultBool) {\n+        var nextFocus = this.lastFocusedMorph,\n+            modal = this.panel.ownerChain().detect(function(ea) { return ea.isModalMorph; }),\n+            modalOwner = modal && modal.owner;\n         this.removeTopLevel();\n         if (this.callback && this.callbackCount === 0) this.callback(resultBool);\n-        if (this.lastFocusedMorph) this.lastFocusedMorph.focus();\n-    },\n+        // when multiple dialogs are chained: test whether there is a new modal\n+        // morph after this dialog was closed. If so, remember the original morph\n+        // that was focused (this.lastFocusedMorph), focus the new dialog and pass\n+        // the lastFocusedMorph along. Otherwise just focus on lastFocusedMorph.\n+        var modalTarget = modalOwner && modalOwner.modalMorph && modalOwner.modalMorph.modalTarget;\n+        if (modalTarget && modalTarget != this.panel) {\n+            if (modalTarget.ownerApp) modalTarget.ownerApp.lastFocusedMorph = this.lastFocusedMorph;\n+            nextFocus = modalTarget;\n+        }\n+        nextFocus && nextFocus.show()\n+        if (nextFocus) nextFocus.focus.bind(nextFocus).delay(0);\n+    }\n });\n \n lively.morphic.AbstractDialog.subclass('lively.morphic.ConfirmDialog',"
         }
      ]
   },
   {
      "sha":"7fa8a629cf353f70b5110217d185ac4e90238608",
      "commit":{
         "author":{
            "name":"Robert Krahn",
            "email":"robert.krahn@gmail.com",
            "date":"2014-01-03T22:17:12Z"
         },
         "committer":{
            "name":"Robert Krahn",
            "email":"robert.krahn@gmail.com",
            "date":"2014-01-03T22:18:12Z"
         },
         "message":"shell: fix persistent command escape",
         "tree":{
            "sha":"6576d9b9831ca3f8d32c68d0b41a541fff676211",
            "url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/git/trees/6576d9b9831ca3f8d32c68d0b41a541fff676211"
         },
         "url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/git/commits/7fa8a629cf353f70b5110217d185ac4e90238608",
         "comment_count":0
      },
      "url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/commits/7fa8a629cf353f70b5110217d185ac4e90238608",
      "html_url":"https://github.com/LivelyKernel/LivelyKernel/commit/7fa8a629cf353f70b5110217d185ac4e90238608",
      "comments_url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/commits/7fa8a629cf353f70b5110217d185ac4e90238608/comments",
      "author":{
         "login":"rksm",
         "id":467450,
         "avatar_url":"https://gravatar.com/avatar/7e0fc9769fc4ec9b23b85da1639d5f31?d=https%3A%2F%2Fidenticons.github.com%2Ff5790be82a84c28f0e1fadaed4826b78.png&r=x",
         "gravatar_id":"7e0fc9769fc4ec9b23b85da1639d5f31",
         "url":"https://api.github.com/users/rksm",
         "html_url":"https://github.com/rksm",
         "followers_url":"https://api.github.com/users/rksm/followers",
         "following_url":"https://api.github.com/users/rksm/following{/other_user}",
         "gists_url":"https://api.github.com/users/rksm/gists{/gist_id}",
         "starred_url":"https://api.github.com/users/rksm/starred{/owner}{/repo}",
         "subscriptions_url":"https://api.github.com/users/rksm/subscriptions",
         "organizations_url":"https://api.github.com/users/rksm/orgs",
         "repos_url":"https://api.github.com/users/rksm/repos",
         "events_url":"https://api.github.com/users/rksm/events{/privacy}",
         "received_events_url":"https://api.github.com/users/rksm/received_events",
         "type":"User",
         "site_admin":false
      },
      "committer":{
         "login":"rksm",
         "id":467450,
         "avatar_url":"https://gravatar.com/avatar/7e0fc9769fc4ec9b23b85da1639d5f31?d=https%3A%2F%2Fidenticons.github.com%2Ff5790be82a84c28f0e1fadaed4826b78.png&r=x",
         "gravatar_id":"7e0fc9769fc4ec9b23b85da1639d5f31",
         "url":"https://api.github.com/users/rksm",
         "html_url":"https://github.com/rksm",
         "followers_url":"https://api.github.com/users/rksm/followers",
         "following_url":"https://api.github.com/users/rksm/following{/other_user}",
         "gists_url":"https://api.github.com/users/rksm/gists{/gist_id}",
         "starred_url":"https://api.github.com/users/rksm/starred{/owner}{/repo}",
         "subscriptions_url":"https://api.github.com/users/rksm/subscriptions",
         "organizations_url":"https://api.github.com/users/rksm/orgs",
         "repos_url":"https://api.github.com/users/rksm/repos",
         "events_url":"https://api.github.com/users/rksm/events{/privacy}",
         "received_events_url":"https://api.github.com/users/rksm/received_events",
         "type":"User",
         "site_admin":false
      },
      "parents":[
         {
            "sha":"bfebf9418d3e9405c4ddc19f3f854ebe30dd6cd1",
            "url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/commits/bfebf9418d3e9405c4ddc19f3f854ebe30dd6cd1",
            "html_url":"https://github.com/LivelyKernel/LivelyKernel/commit/bfebf9418d3e9405c4ddc19f3f854ebe30dd6cd1"
         }
      ],
      "stats":{
         "total":4,
         "additions":1,
         "deletions":3
      },
      "files":[
         {
            "sha":"6712877a5940cdeb5f3364cc108cf9017b8c645f",
            "filename":"core/lively/ide/CommandLineInterface.js",
            "status":"modified",
            "additions":1,
            "deletions":3,
            "changes":4,
            "blob_url":"https://github.com/LivelyKernel/LivelyKernel/blob/7fa8a629cf353f70b5110217d185ac4e90238608/core/lively/ide/CommandLineInterface.js",
            "raw_url":"https://github.com/LivelyKernel/LivelyKernel/raw/7fa8a629cf353f70b5110217d185ac4e90238608/core/lively/ide/CommandLineInterface.js",
            "contents_url":"https://api.github.com/repos/LivelyKernel/LivelyKernel/contents/core/lively/ide/CommandLineInterface.js?ref=7fa8a629cf353f70b5110217d185ac4e90238608",
            "patch":"@@ -267,9 +267,7 @@ lively.ide.CommandLineInterface.Command.subclass('lively.ide.CommandLineInterfac\n },\n 'internal', {\n     getCommand: function() {\n-        return [\n-            \"/usr/bin/env\", \"bash\", \"-c\",\n-            this._commandString.replace(/'/g, \"\\\\'\")];\n+        return [\"/usr/bin/env\", \"bash\", \"-c\", this._commandString];\n     }\n },\n 'compatibility', {"
         }
      ]
   }
]